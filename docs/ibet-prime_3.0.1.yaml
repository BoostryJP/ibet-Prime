openapi: 3.0.2
info:
  title: ibet Prime
  description: Security token management system for ibet network
  version: 23.9.0
paths:
  /:
    get:
      tags:
        - root
      summary: Root
      operationId: root__get
      responses:
        '200':
          description: Successful Response
  /e2ee:
    get:
      tags:
        - common
      summary: E2E Encryption Key
      description: Get E2EE public key
      operationId: e2e_encryption_key_e2ee_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EEResponse'
  /healthcheck:
    get:
      tags:
        - common
      summary: Check Health
      operationId: check_health_healthcheck_get
      responses:
        '200':
          description: Successful Response
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /block_number:
    get:
      tags:
        - common
      summary: Get Block Number
      description: Get Block Number in current
      operationId: get_block_number_block_number_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockNumberResponse'
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /accounts:
    get:
      tags:
        - account
      summary: List All Accounts
      description: List all accounts
      operationId: list_all_accounts_accounts_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List All Accounts Accounts Get
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponse'
    post:
      tags:
        - account
      summary: Create Key
      description: Create Keys
      operationId: create_key_accounts_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateKeyRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /accounts/{issuer_address}:
    get:
      tags:
        - account
      summary: Retrieve Account
      description: Retrieve an account
      operationId: retrieve_account_accounts__issuer_address__get
      parameters:
        - required: true
          schema:
            title: Issuer Address
            type: string
          name: issuer_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    delete:
      tags:
        - account
      summary: Delete Account
      description: Logically delete an account
      operationId: delete_account_accounts__issuer_address__delete
      parameters:
        - required: true
          schema:
            title: Issuer Address
            type: string
          name: issuer_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /accounts/{issuer_address}/rsakey:
    post:
      tags:
        - account
      summary: Generate Rsa Key
      description: Generate RSA key
      operationId: generate_rsa_key_accounts__issuer_address__rsakey_post
      parameters:
        - required: true
          schema:
            title: Issuer Address
            type: string
          name: issuer_address
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGenerateRsaKeyRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /accounts/{issuer_address}/eoa_password:
    post:
      tags:
        - account
      summary: Change Eoa Password
      description: Change EOA Password
      operationId: change_eoa_password_accounts__issuer_address__eoa_password_post
      parameters:
        - required: true
          schema:
            title: Issuer Address
            type: string
          name: issuer_address
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountChangeEOAPasswordRequest'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /accounts/{issuer_address}/rsa_passphrase:
    post:
      tags:
        - account
      summary: Change Rsa Passphrase
      description: Change RSA Passphrase
      operationId: change_rsa_passphrase_accounts__issuer_address__rsa_passphrase_post
      parameters:
        - required: true
          schema:
            title: Issuer Address
            type: string
          name: issuer_address
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountChangeRSAPassphraseRequest'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /accounts/{issuer_address}/auth_token:
    post:
      tags:
        - account
      summary: Create Auth Token
      description: Create Auth Token
      operationId: create_auth_token_accounts__issuer_address__auth_token_post
      parameters:
        - required: true
          schema:
            title: Issuer Address
            type: string
          name: issuer_address
          in: path
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAuthTokenRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAuthTokenResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Create Auth Token Accounts  Issuer Address  Auth Token Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/AuthTokenAlreadyExistsErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    delete:
      tags:
        - account
      summary: Delete Auth Token
      description: Delete auth token
      operationId: delete_auth_token_accounts__issuer_address__auth_token_delete
      parameters:
        - required: true
          schema:
            title: Issuer Address
            type: string
          name: issuer_address
          in: path
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      responses:
        '200':
          description: Successful Response
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens:
    get:
      tags:
        - bond
      summary: List All Tokens
      description: List all issued tokens
      operationId: list_all_tokens_bond_tokens_get
      parameters:
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List All Tokens Bond Tokens Get
                type: array
                items:
                  $ref: '#/components/schemas/IbetStraightBondResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - bond
      summary: Issue Token
      description: Issue ibetStraightBond token
      operationId: issue_token_bond_tokens_post
      parameters:
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAddressResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Issue Token Bond Tokens Post
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Issue Token Bond Tokens Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}:
    get:
      tags:
        - bond
      summary: Retrieve Token
      description: Retrieve token
      operationId: retrieve_token_bond_tokens__token_address__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetStraightBondResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    post:
      tags:
        - bond
      summary: Update Token
      description: Update a token
      operationId: update_token_bond_tokens__token_address__post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Update Token Bond Tokens  Token Address  Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Update Token Bond Tokens  Token Address  Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/history:
    get:
      tags:
        - bond
      summary: List Bond Operation Log History
      description: List of token operation log history
      operationId: list_bond_operation_log_history_bond_tokens__token_address__history_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: Modified contents query
          required: false
          schema:
            title: Modified Contents
            type: string
            description: Modified contents query
          name: modified_contents
          in: query
        - description: Trigger of change
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/TokenUpdateOperationCategory'
            description: Trigger of change
          name: operation_category
          in: query
        - description: Created datetime filter(From)
          required: false
          schema:
            title: Created From
            type: string
            description: Created datetime filter(From)
            format: date-time
          name: created_from
          in: query
        - description: Created datetime filter(To)
          required: false
          schema:
            title: Created To
            type: string
            description: Created datetime filter(To)
            format: date-time
          name: created_to
          in: query
        - description: Sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListTokenHistorySortItem'
            description: Sort item
            default: created
          name: sort_item
          in: query
        - description: 'Sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'Sort order(0: ASC, 1: DESC)'
            default: 1
          name: sort_order
          in: query
        - description: Start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: Start position
          name: offset
          in: query
        - description: Number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: Number of set
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokenOperationLogHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /bond/tokens/{token_address}/additional_issue:
    get:
      tags:
        - bond
      summary: List Additional Issuance History
      description: List additional issuance history
      operationId: list_additional_issuance_history_bond_tokens__token_address__additional_issue_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/IDXIssueRedeemSortItem'
            default: block_timestamp
          name: sort_item
          in: query
        - description: 0:asc, 1:desc
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueRedeemHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - bond
      summary: Additional Issue
      description: Additional issue
      operationId: additional_issue_bond_tokens__token_address__additional_issue_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondAdditionalIssue'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Additional Issue Bond Tokens  Token Address  Additional Issue Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Additional Issue Bond Tokens  Token Address  Additional Issue Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/additional_issue/batch:
    get:
      tags:
        - bond
      summary: List All Additional Issue Upload
      operationId: list_all_additional_issue_upload_bond_tokens__token_address__additional_issue_batch_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Processed
            type: boolean
          name: processed
          in: query
        - description: 0:asc, 1:desc (created)
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc (created)
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchIssueRedeemUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - bond
      summary: Additional Issue In Batch
      description: Additional issue (Batch)
      operationId: additional_issue_in_batch_bond_tokens__token_address__additional_issue_batch_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Data
              type: array
              items:
                $ref: '#/components/schemas/IbetStraightBondAdditionalIssue'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchIssueRedeemUploadIdResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Additional Issue In Batch Bond Tokens  Token Address  Additional Issue Batch Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/additional_issue/batch/{batch_id}:
    get:
      tags:
        - bond
      summary: Retrieve Batch Additional Issue
      description: Get Batch status for additional issue
      operationId: retrieve_batch_additional_issue_bond_tokens__token_address__additional_issue_batch__batch_id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Batch Id
            type: string
          name: batch_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchIssueRedeemResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/redeem:
    get:
      tags:
        - bond
      summary: List Redeem History
      description: List redemption history
      operationId: list_redeem_history_bond_tokens__token_address__redeem_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/IDXIssueRedeemSortItem'
            default: block_timestamp
          name: sort_item
          in: query
        - description: 0:asc, 1:desc
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueRedeemHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - bond
      summary: Redeem Token
      description: Redeem a token
      operationId: redeem_token_bond_tokens__token_address__redeem_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondRedeem'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Redeem Token Bond Tokens  Token Address  Redeem Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Redeem Token Bond Tokens  Token Address  Redeem Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/redeem/batch:
    get:
      tags:
        - bond
      summary: List All Redeem Upload
      operationId: list_all_redeem_upload_bond_tokens__token_address__redeem_batch_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Processed
            type: boolean
          name: processed
          in: query
        - description: 0:asc, 1:desc (created)
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc (created)
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchIssueRedeemUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - bond
      summary: Redeem Token In Batch
      description: Redeem a token (Batch)
      operationId: redeem_token_in_batch_bond_tokens__token_address__redeem_batch_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Data
              type: array
              items:
                $ref: '#/components/schemas/IbetStraightBondRedeem'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchIssueRedeemUploadIdResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Redeem Token In Batch Bond Tokens  Token Address  Redeem Batch Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/redeem/batch/{batch_id}:
    get:
      tags:
        - bond
      summary: Retrieve Batch Redeem
      description: Get Batch status for additional issue
      operationId: retrieve_batch_redeem_bond_tokens__token_address__redeem_batch__batch_id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Batch Id
            type: string
          name: batch_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchIssueRedeemResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/scheduled_events:
    get:
      tags:
        - bond
      summary: List All Scheduled Events
      description: List all scheduled update events
      operationId: list_all_scheduled_events_bond_tokens__token_address__scheduled_events_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List All Scheduled Events Bond Tokens  Token Address  Scheduled Events Get
                type: array
                items:
                  $ref: '#/components/schemas/ScheduledEventResponse'
    post:
      tags:
        - bond
      summary: Schedule New Update Event
      description: Register a new update event
      operationId: schedule_new_update_event_bond_tokens__token_address__scheduled_events_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondScheduledUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventIdResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Schedule New Update Event Bond Tokens  Token Address  Scheduled Events Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/scheduled_events/{scheduled_event_id}:
    get:
      tags:
        - bond
      summary: Retrieve Token Event
      description: Retrieve a scheduled token event
      operationId: retrieve_token_event_bond_tokens__token_address__scheduled_events__scheduled_event_id__get
      parameters:
        - required: true
          schema:
            title: Scheduled Event Id
            type: string
          name: scheduled_event_id
          in: path
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    delete:
      tags:
        - bond
      summary: Delete Scheduled Event
      description: Delete a scheduled event
      operationId: delete_scheduled_event_bond_tokens__token_address__scheduled_events__scheduled_event_id__delete
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Scheduled Event Id
            type: string
          name: scheduled_event_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Delete Scheduled Event Bond Tokens  Token Address  Scheduled Events  Scheduled Event Id  Delete
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/holders:
    get:
      tags:
        - bond
      summary: List All Holders
      description: List all bond token holders
      operationId: list_all_holders_bond_tokens__token_address__holders_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Include Former Holder
            type: boolean
            default: false
          name: include_former_holder
          in: query
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List All Holders Bond Tokens  Token Address  Holders Get
                type: array
                items:
                  $ref: '#/components/schemas/HolderResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/holders/count:
    get:
      tags:
        - bond
      summary: Count Number Of Holders
      description: Count the number of holders
      operationId: count_number_of_holders_bond_tokens__token_address__holders_count_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderCountResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/holders/{account_address}:
    get:
      tags:
        - bond
      summary: Retrieve Holder
      description: Retrieve bond token holder
      operationId: retrieve_holder_bond_tokens__token_address__holders__account_address__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/personal_info:
    post:
      tags:
        - bond
      summary: Register Holder Personal Info
      description: Register the holder's personal information
      operationId: register_holder_personal_info_bond_tokens__token_address__personal_info_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPersonalInfoRequest'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Register Holder Personal Info Bond Tokens  Token Address  Personal Info Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Register Holder Personal Info Bond Tokens  Token Address  Personal Info Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/personal_info/batch:
    get:
      tags:
        - bond
      summary: List All Personal Info Batch Registration Uploads
      description: List all personal information batch registration uploads
      operationId: list_all_personal_info_batch_registration_uploads_bond_tokens__token_address__personal_info_batch_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Status
            type: string
          name: status
          in: query
        - description: 0:asc, 1:desc (created)
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc (created)
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchRegisterPersonalInfoUploadResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - bond
      summary: Batch Register Personal Info
      description: Create Batch for register personal information
      operationId: batch_register_personal_info_bond_tokens__token_address__personal_info_batch_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Personal Info List
              type: array
              items:
                $ref: '#/components/schemas/RegisterPersonalInfoRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRegisterPersonalInfoUploadResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Batch Register Personal Info Bond Tokens  Token Address  Personal Info Batch Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/personal_info/batch/{batch_id}:
    get:
      tags:
        - bond
      summary: Retrieve Batch Register Personal Info
      description: Get Batch status for register personal information
      operationId: retrieve_batch_register_personal_info_bond_tokens__token_address__personal_info_batch__batch_id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Batch Id
            type: string
          name: batch_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchRegisterPersonalInfoResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}/lock_events:
    get:
      tags:
        - bond
      summary: List all lock/unlock events related to given bond token
      operationId: list_all_lock_events_by_bond_bond_tokens__token_address__lock_events_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: Start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: Start position
          name: offset
          in: query
        - description: Number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: Number of set
          name: limit
          in: query
        - description: Account address
          required: false
          schema:
            title: Account Address
            type: string
            description: Account address
          name: account_address
          in: query
        - description: Msg sender
          required: false
          schema:
            title: Msg Sender
            type: string
            description: Msg sender
          name: msg_sender
          in: query
        - description: Lock address
          required: false
          schema:
            title: Lock Address
            type: string
            description: Lock address
          name: lock_address
          in: query
        - description: Recipient address
          required: false
          schema:
            title: Recipient Address
            type: string
            description: Recipient address
          name: recipient_address
          in: query
        - description: Event category
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LockEventCategory'
            description: Event category
          name: category
          in: query
        - description: Sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListAllTokenLockEventsSortItem'
            description: Sort item
            default: block_timestamp
          name: sort_item
          in: query
        - description: 'Sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'Sort order(0: ASC, 1: DESC)'
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllTokenLockEventsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/transfers:
    post:
      tags:
        - bond
      summary: Transfer Ownership
      description: Transfer token ownership
      operationId: transfer_ownership_bond_transfers_post
      parameters:
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondTransfer'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Transfer Ownership Bond Transfers Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Transfer Ownership Bond Transfers Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/transfers/{token_address}:
    get:
      tags:
        - bond
      summary: List Transfer History
      description: List token transfer history
      operationId: list_transfer_history_bond_transfers__token_address__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: source event of transfer
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/TransferSourceEventType'
            description: source event of transfer
          name: source_event
          in: query
        - description: source event data
          required: false
          schema:
            title: Data
            type: string
            description: source event data
          name: data
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListTransferHistorySortItem'
            description: sort item
            default: block_timestamp
          name: sort_item
          in: query
        - description: 0:asc, 1:desc
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc
            default: 1
          name: sort_order
          in: query
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/transfer_approvals:
    get:
      tags:
        - bond
      summary: List Transfer Approval History
      description: List transfer approval history
      operationId: list_transfer_approval_history_bond_transfer_approvals_get
      parameters:
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/transfer_approvals/{token_address}:
    get:
      tags:
        - bond
      summary: List Token Transfer Approval History
      description: List token transfer approval history
      operationId: list_token_transfer_approval_history_bond_transfer_approvals__token_address__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: From Address
            type: string
          name: from_address
          in: query
        - required: false
          schema:
            title: To Address
            type: string
          name: to_address
          in: query
        - description: 0:unapproved, 1:escrow_finished, 2:transferred, 3:canceled
          required: false
          schema:
            title: Status
            maximum: 3
            minimum: 0
            type: array
            items:
              maximum: 3
              minimum: 0
              type: integer
            description: 0:unapproved, 1:escrow_finished, 2:transferred, 3:canceled
          name: status
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/IDXTransferApprovalsSortItem'
            default: id
          name: sort_item
          in: query
        - description: 0:asc, 1:desc
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/transfer_approvals/{token_address}/{id}:
    get:
      tags:
        - bond
      summary: Retrieve Transfer Approval History
      description: Retrieve bond token transfer approval history
      operationId: retrieve_transfer_approval_history_bond_transfer_approvals__token_address___id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalTokenResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - bond
      summary: Update Transfer Approval
      description: Update on the status of a bond transfer approval
      operationId: update_transfer_approval_bond_transfer_approvals__token_address___id__post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransferApprovalRequest'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Update Transfer Approval Bond Transfer Approvals  Token Address   Id  Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Update Transfer Approval Bond Transfer Approvals  Token Address   Id  Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/bulk_transfer:
    get:
      tags:
        - bond
      summary: List Bulk Transfer Upload
      description: List bulk transfer uploads
      operationId: list_bulk_transfer_upload_bond_bulk_transfer_get
      parameters:
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Bulk Transfer Upload Bond Bulk Transfer Get
                type: array
                items:
                  $ref: '#/components/schemas/BulkTransferUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - bond
      summary: Bulk Transfer Ownership
      description: Bulk transfer token ownership
      operationId: bulk_transfer_ownership_bond_bulk_transfer_post
      parameters:
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Tokens
              type: array
              items:
                $ref: '#/components/schemas/IbetStraightBondTransfer'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkTransferUploadIdResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Bulk Transfer Ownership Bond Bulk Transfer Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/bulk_transfer/{upload_id}:
    get:
      tags:
        - bond
      summary: Retrieve Bulk Transfer
      description: Retrieve a bulk transfer upload
      operationId: retrieve_bulk_transfer_bond_bulk_transfer__upload_id__get
      parameters:
        - required: true
          schema:
            title: Upload Id
            type: string
          name: upload_id
          in: path
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Retrieve Bulk Transfer Bond Bulk Transfer  Upload Id  Get
                type: array
                items:
                  $ref: '#/components/schemas/BulkTransferResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /e2e_messaging/accounts:
    get:
      tags:
        - messaging
      summary: List All Accounts
      description: List all e2e messaging accounts
      operationId: list_all_accounts_e2e_messaging_accounts_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List All Accounts E2E Messaging Accounts Get
                type: array
                items:
                  $ref: '#/components/schemas/E2EMessagingAccountResponse'
    post:
      tags:
        - messaging
      summary: Create Account
      description: Create Account
      operationId: create_account_e2e_messaging_accounts_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E2EMessagingAccountCreateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EMessagingAccountResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Create Account E2E Messaging Accounts Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /e2e_messaging/accounts/{account_address}:
    get:
      tags:
        - messaging
      summary: Retrieve Account
      description: Retrieve an e2e messaging account
      operationId: retrieve_account_e2e_messaging_accounts__account_address__get
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EMessagingAccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    delete:
      tags:
        - messaging
      summary: Delete Account
      description: Logically delete an e2e messaging account
      operationId: delete_account_e2e_messaging_accounts__account_address__delete
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EMessagingAccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /e2e_messaging/accounts/{account_address}/rsa_key:
    post:
      tags:
        - messaging
      summary: Update Account Rsa Key
      description: Update an e2e messaging account rsa key
      operationId: update_account_rsa_key_e2e_messaging_accounts__account_address__rsa_key_post
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E2EMessagingAccountUpdateRsaKeyRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EMessagingAccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /e2e_messaging/accounts/{account_address}/eoa_password:
    post:
      tags:
        - messaging
      summary: Change Eoa Password
      description: Change Account's EOA Password
      operationId: change_eoa_password_e2e_messaging_accounts__account_address__eoa_password_post
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E2EMessagingAccountChangeEOAPasswordRequest'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /e2e_messaging/accounts/{account_address}/rsa_passphrase:
    post:
      tags:
        - messaging
      summary: Change Rsa Passphrase
      description: Change Account's RSA Passphrase
      operationId: change_rsa_passphrase_e2e_messaging_accounts__account_address__rsa_passphrase_post
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E2EMessagingAccountChangeRSAPassphraseRequest'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /e2e_messaging/messages:
    get:
      tags:
        - messaging
      summary: List All E2E Messages
      description: List all e2e message
      operationId: list_all_e2e_messages_e2e_messaging_messages_get
      parameters:
        - required: false
          schema:
            title: From Address
            type: string
          name: from_address
          in: query
        - required: false
          schema:
            title: To Address
            type: string
          name: to_address
          in: query
        - required: false
          schema:
            title: Type
            type: string
          name: type
          in: query
        - description: partial match
          required: false
          schema:
            title: Message
            type: string
            description: partial match
          name: message
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllE2EMessagingResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /e2e_messaging/messages/{id}:
    get:
      tags:
        - messaging
      summary: Retrieve E2E Messaging
      description: Retrieve an e2e message
      operationId: retrieve_e2e_messaging_e2e_messaging_messages__id__get
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EMessagingResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /files:
    get:
      tags:
        - utility
      summary: List All Upload Files
      description: List all files
      operationId: list_all_upload_files_files_get
      parameters:
        - required: false
          schema:
            title: Relation
            type: string
          name: relation
          in: query
        - description: partial match
          required: false
          schema:
            title: File Name
            type: string
            description: partial match
          name: file_name
          in: query
        - description: partial match
          required: false
          schema:
            title: Label
            type: string
            description: partial match
          name: label
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllFilesResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - utility
      summary: Upload File
      description: Upload file
      operationId: upload_file_files_post
      parameters:
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadFileRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /files/{file_id}:
    get:
      tags:
        - utility
      summary: Download File
      description: Download file
      operationId: download_file_files__file_id__get
      parameters:
        - required: true
          schema:
            title: File Id
            type: string
          name: file_id
          in: path
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadFileResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    delete:
      tags:
        - utility
      summary: Delete File
      description: Delete file
      operationId: delete_file_files__file_id__delete
      parameters:
        - required: true
          schema:
            title: File Id
            type: string
          name: file_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ledger/{token_address}/history:
    get:
      tags:
        - token_common
      summary: List All Ledger History
      description: List all Ledger
      operationId: list_all_ledger_history_ledger__token_address__history_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllLedgerHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ledger/{token_address}/history/{ledger_id}:
    get:
      tags:
        - token_common
      summary: Retrieve Ledger History
      description: Retrieve Ledger
      operationId: retrieve_ledger_history_ledger__token_address__history__ledger_id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Ledger Id
            type: integer
          name: ledger_id
          in: path
        - required: true
          schema:
            title: Latest Flg
            maximum: 1
            minimum: 0
            type: integer
          name: latest_flg
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveLedgerHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Retrieve Ledger History Ledger  Token Address  History  Ledger Id  Get
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/Integer64bitLimitExceededErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ledger/{token_address}/template:
    get:
      tags:
        - token_common
      summary: Retrieve Ledger Template
      description: Retrieve Ledger Template
      operationId: retrieve_ledger_template_ledger__token_address__template_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerTemplateResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - token_common
      summary: Create Update Ledger Template
      description: Create or Update Ledger Template
      operationId: create_update_ledger_template_ledger__token_address__template_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateLedgerTemplateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    delete:
      tags:
        - token_common
      summary: Delete Ledger Template
      description: Delete Ledger Template
      operationId: delete_ledger_template_ledger__token_address__template_delete
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ledger/{token_address}/details_data:
    get:
      tags:
        - token_common
      summary: List All Ledger Details Data
      description: List all Ledger Details Data
      operationId: list_all_ledger_details_data_ledger__token_address__details_data_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllLedgerDetailsDataResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - token_common
      summary: Create Ledger Details Data
      description: Create Ledger Details Data
      operationId: create_ledger_details_data_ledger__token_address__details_data_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Data List
              type: array
              items:
                $ref: '#/components/schemas/CreateUpdateLedgerDetailsDataRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerDetailsDataResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ledger/{token_address}/details_data/{data_id}:
    get:
      tags:
        - token_common
      summary: Retrieve Ledger Details Data
      description: Retrieve Ledger Details Data
      operationId: retrieve_ledger_details_data_ledger__token_address__details_data__data_id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Data Id
            type: string
          name: data_id
          in: path
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Retrieve Ledger Details Data Ledger  Token Address  Details Data  Data Id  Get
                type: array
                items:
                  $ref: '#/components/schemas/RetrieveLedgerDetailsDataResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - token_common
      summary: Update Ledger Details Data
      description: Update Ledger Details Data
      operationId: update_ledger_details_data_ledger__token_address__details_data__data_id__post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Data Id
            type: string
          name: data_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Data List
              type: array
              items:
                $ref: '#/components/schemas/CreateUpdateLedgerDetailsDataRequest'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    delete:
      tags:
        - token_common
      summary: Delete Ledger Details Data
      description: Delete Ledger Details Data
      operationId: delete_ledger_details_data_ledger__token_address__details_data__data_id__delete
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Data Id
            type: string
          name: data_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /notifications:
    get:
      tags:
        - notification
      summary: List All Notifications
      description: List all notifications
      operationId: list_all_notifications_notifications_get
      parameters:
        - required: false
          schema:
            title: Notice Type
            type: string
          name: notice_type
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllNotificationsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /notifications/{notice_id}:
    delete:
      tags:
        - notification
      summary: Delete Notification
      description: Delete notification
      operationId: delete_notification_notifications__notice_id__delete
      parameters:
        - required: true
          schema:
            title: Notice Id
            type: string
          name: notice_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /positions/{account_address}:
    get:
      tags:
        - token_common
      summary: List all positions in the account
      description: List all account's position
      operationId: list_all_position_positions__account_address__get
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - required: false
          schema:
            title: Include Former Position
            type: boolean
            default: false
          name: include_former_position
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/TokenType'
          name: token_type
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllPositionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /positions/{account_address}/lock:
    get:
      tags:
        - token_common
      summary: List all locked positions in the account
      description: List all account's locked position
      operationId: list_all_locked_position_positions__account_address__lock_get
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - required: false
          schema:
            $ref: '#/components/schemas/TokenType'
          name: token_type
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllLockedPositionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /positions/{account_address}/lock/events:
    get:
      tags:
        - token_common
      summary: List all lock/unlock events in the account
      description: List all lock/unlock events in the account
      operationId: list_all_lock_events_positions__account_address__lock_events_get
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - description: Start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: Start position
          name: offset
          in: query
        - description: Number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: Number of set
          name: limit
          in: query
        - description: Token address
          required: false
          schema:
            title: Token Address
            type: string
            description: Token address
          name: token_address
          in: query
        - description: Token type
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/TokenType'
            description: Token type
          name: token_type
          in: query
        - description: Msg sender
          required: false
          schema:
            title: Msg Sender
            type: string
            description: Msg sender
          name: msg_sender
          in: query
        - description: Lock address
          required: false
          schema:
            title: Lock Address
            type: string
            description: Lock address
          name: lock_address
          in: query
        - description: Recipient address
          required: false
          schema:
            title: Recipient Address
            type: string
            description: Recipient address
          name: recipient_address
          in: query
        - description: Event category
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LockEventCategory'
            description: Event category
          name: category
          in: query
        - description: Sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListAllLockEventsSortItem'
            description: Sort item
            default: block_timestamp
          name: sort_item
          in: query
        - description: 'Sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'Sort order(0: ASC, 1: DESC)'
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllLockEventsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /positions/{account_address}/force_unlock:
    post:
      tags:
        - token_common
      summary: Force unlock the locked position
      description: Force unlock the locked position
      operationId: force_unlock_positions__account_address__force_unlock_post
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForceUnlockRequest'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Force Unlock Positions  Account Address  Force Unlock Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Force Unlock Positions  Account Address  Force Unlock Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /positions/{account_address}/{token_address}:
    get:
      tags:
        - token_common
      summary: Token position in the account
      description: Retrieve account's position
      operationId: retrieve_position_positions__account_address___token_address__get
      parameters:
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens:
    get:
      tags:
        - share
      summary: List All Tokens
      operationId: list_all_tokens_share_tokens_get
      parameters:
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List All Tokens Share Tokens Get
                type: array
                items:
                  $ref: '#/components/schemas/IbetShareResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - share
      summary: Issue Token
      description: Issue ibetShare token
      operationId: issue_token_share_tokens_post
      parameters:
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAddressResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Issue Token Share Tokens Post
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Issue Token Share Tokens Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}:
    get:
      tags:
        - share
      summary: Retrieve Token
      description: Retrieve token
      operationId: retrieve_token_share_tokens__token_address__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetShareResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    post:
      tags:
        - share
      summary: Update Token
      description: Update a token
      operationId: update_token_share_tokens__token_address__post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Update Token Share Tokens  Token Address  Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Update Token Share Tokens  Token Address  Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/history:
    get:
      tags:
        - share
      summary: List Share Operation Log History
      description: List of token operation log history
      operationId: list_share_operation_log_history_share_tokens__token_address__history_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: Modified contents query
          required: false
          schema:
            title: Modified Contents
            type: string
            description: Modified contents query
          name: modified_contents
          in: query
        - description: Trigger of change
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/TokenUpdateOperationCategory'
            description: Trigger of change
          name: operation_category
          in: query
        - description: Created datetime filter(From)
          required: false
          schema:
            title: Created From
            type: string
            description: Created datetime filter(From)
            format: date-time
          name: created_from
          in: query
        - description: Created datetime filter(To)
          required: false
          schema:
            title: Created To
            type: string
            description: Created datetime filter(To)
            format: date-time
          name: created_to
          in: query
        - description: Sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListTokenHistorySortItem'
            description: Sort item
            default: created
          name: sort_item
          in: query
        - description: 'Sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'Sort order(0: ASC, 1: DESC)'
            default: 1
          name: sort_order
          in: query
        - description: Start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: Start position
          name: offset
          in: query
        - description: Number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: Number of set
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokenOperationLogHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /share/tokens/{token_address}/additional_issue:
    get:
      tags:
        - share
      summary: List Additional Issuance History
      description: List additional issuance history
      operationId: list_additional_issuance_history_share_tokens__token_address__additional_issue_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/IDXIssueRedeemSortItem'
            default: block_timestamp
          name: sort_item
          in: query
        - description: 0:asc, 1:desc
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueRedeemHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - share
      summary: Additional Issue
      description: Additional issue
      operationId: additional_issue_share_tokens__token_address__additional_issue_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareAdditionalIssue'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Additional Issue Share Tokens  Token Address  Additional Issue Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Additional Issue Share Tokens  Token Address  Additional Issue Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/additional_issue/batch:
    get:
      tags:
        - share
      summary: List All Additional Issue Upload
      operationId: list_all_additional_issue_upload_share_tokens__token_address__additional_issue_batch_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Processed
            type: boolean
          name: processed
          in: query
        - description: 0:asc, 1:desc (created)
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc (created)
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchIssueRedeemUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - share
      summary: Additional Issue In Batch
      description: Additional issue (Batch)
      operationId: additional_issue_in_batch_share_tokens__token_address__additional_issue_batch_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Data
              type: array
              items:
                $ref: '#/components/schemas/IbetShareAdditionalIssue'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchIssueRedeemUploadIdResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Additional Issue In Batch Share Tokens  Token Address  Additional Issue Batch Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/additional_issue/batch/{batch_id}:
    get:
      tags:
        - share
      summary: Retrieve Batch Additional Issue
      description: Get Batch status for additional issue
      operationId: retrieve_batch_additional_issue_share_tokens__token_address__additional_issue_batch__batch_id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Batch Id
            type: string
          name: batch_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchIssueRedeemResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/redeem:
    get:
      tags:
        - share
      summary: List Redeem History
      description: List redemption history
      operationId: list_redeem_history_share_tokens__token_address__redeem_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/IDXIssueRedeemSortItem'
            default: block_timestamp
          name: sort_item
          in: query
        - description: 0:asc, 1:desc
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueRedeemHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - share
      summary: Redeem Token
      description: Redeem a token
      operationId: redeem_token_share_tokens__token_address__redeem_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareRedeem'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Redeem Token Share Tokens  Token Address  Redeem Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Redeem Token Share Tokens  Token Address  Redeem Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/redeem/batch:
    get:
      tags:
        - share
      summary: List All Redeem Upload
      operationId: list_all_redeem_upload_share_tokens__token_address__redeem_batch_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Processed
            type: boolean
          name: processed
          in: query
        - description: 0:asc, 1:desc (created)
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc (created)
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchIssueRedeemUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - share
      summary: Redeem Token In Batch
      description: Redeem a token (Batch)
      operationId: redeem_token_in_batch_share_tokens__token_address__redeem_batch_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Data
              type: array
              items:
                $ref: '#/components/schemas/IbetShareRedeem'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchIssueRedeemUploadIdResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Redeem Token In Batch Share Tokens  Token Address  Redeem Batch Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/redeem/batch/{batch_id}:
    get:
      tags:
        - share
      summary: Retrieve Batch Redeem
      description: Get Batch status for additional issue
      operationId: retrieve_batch_redeem_share_tokens__token_address__redeem_batch__batch_id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Batch Id
            type: string
          name: batch_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchIssueRedeemResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/scheduled_events:
    get:
      tags:
        - share
      summary: List All Scheduled Events
      description: List all scheduled update events
      operationId: list_all_scheduled_events_share_tokens__token_address__scheduled_events_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List All Scheduled Events Share Tokens  Token Address  Scheduled Events Get
                type: array
                items:
                  $ref: '#/components/schemas/ScheduledEventResponse'
    post:
      tags:
        - share
      summary: Schedule New Update Event
      description: Register a new update event
      operationId: schedule_new_update_event_share_tokens__token_address__scheduled_events_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareScheduledUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventIdResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Schedule New Update Event Share Tokens  Token Address  Scheduled Events Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/scheduled_events/{scheduled_event_id}:
    get:
      tags:
        - share
      summary: Retrieve Token Event
      description: Retrieve a scheduled token event
      operationId: retrieve_token_event_share_tokens__token_address__scheduled_events__scheduled_event_id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Scheduled Event Id
            type: string
          name: scheduled_event_id
          in: path
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    delete:
      tags:
        - share
      summary: Delete Scheduled Event
      description: Delete a scheduled event
      operationId: delete_scheduled_event_share_tokens__token_address__scheduled_events__scheduled_event_id__delete
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Scheduled Event Id
            type: string
          name: scheduled_event_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Delete Scheduled Event Share Tokens  Token Address  Scheduled Events  Scheduled Event Id  Delete
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/holders:
    get:
      tags:
        - share
      summary: List All Holders
      description: List all share token holders
      operationId: list_all_holders_share_tokens__token_address__holders_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Include Former Holder
            type: boolean
            default: false
          name: include_former_holder
          in: query
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List All Holders Share Tokens  Token Address  Holders Get
                type: array
                items:
                  $ref: '#/components/schemas/HolderResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/holders/count:
    get:
      tags:
        - share
      summary: Count Number Of Holders
      description: Count the number of holders
      operationId: count_number_of_holders_share_tokens__token_address__holders_count_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderCountResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/holders/{account_address}:
    get:
      tags:
        - share
      summary: Retrieve Holder
      description: Retrieve share token holder
      operationId: retrieve_holder_share_tokens__token_address__holders__account_address__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Account Address
            type: string
          name: account_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/personal_info:
    post:
      tags:
        - share
      summary: Register Holder Personal Info
      description: Register the holder's personal information
      operationId: register_holder_personal_info_share_tokens__token_address__personal_info_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPersonalInfoRequest'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Register Holder Personal Info Share Tokens  Token Address  Personal Info Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Register Holder Personal Info Share Tokens  Token Address  Personal Info Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/personal_info/batch:
    get:
      tags:
        - share
      summary: List All Personal Info Batch Registration Uploads
      description: List all personal information batch registration uploads
      operationId: list_all_personal_info_batch_registration_uploads_share_tokens__token_address__personal_info_batch_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: Status
            type: string
          name: status
          in: query
        - description: 0:asc, 1:desc (created)
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc (created)
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchRegisterPersonalInfoUploadResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - share
      summary: Batch Register Personal Info
      description: Create Batch for register personal information
      operationId: batch_register_personal_info_share_tokens__token_address__personal_info_batch_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Personal Info List
              type: array
              items:
                $ref: '#/components/schemas/RegisterPersonalInfoRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRegisterPersonalInfoUploadResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Batch Register Personal Info Share Tokens  Token Address  Personal Info Batch Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/personal_info/batch/{batch_id}:
    get:
      tags:
        - share
      summary: Retrieve Batch Register Personal Info
      description: Get Batch status for register personal information
      operationId: retrieve_batch_register_personal_info_share_tokens__token_address__personal_info_batch__batch_id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Batch Id
            type: string
          name: batch_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchRegisterPersonalInfoResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}/lock_events:
    get:
      tags:
        - share
      summary: List all lock/unlock events related to given share token
      operationId: list_all_lock_events_by_share_share_tokens__token_address__lock_events_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: Start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: Start position
          name: offset
          in: query
        - description: Number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: Number of set
          name: limit
          in: query
        - description: Account address
          required: false
          schema:
            title: Account Address
            type: string
            description: Account address
          name: account_address
          in: query
        - description: Msg sender
          required: false
          schema:
            title: Msg Sender
            type: string
            description: Msg sender
          name: msg_sender
          in: query
        - description: Lock address
          required: false
          schema:
            title: Lock Address
            type: string
            description: Lock address
          name: lock_address
          in: query
        - description: Recipient address
          required: false
          schema:
            title: Recipient Address
            type: string
            description: Recipient address
          name: recipient_address
          in: query
        - description: Event category
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LockEventCategory'
            description: Event category
          name: category
          in: query
        - description: Sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListAllTokenLockEventsSortItem'
            description: Sort item
            default: block_timestamp
          name: sort_item
          in: query
        - description: 'Sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'Sort order(0: ASC, 1: DESC)'
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllTokenLockEventsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/transfers:
    post:
      tags:
        - share
      summary: Transfer Ownership
      description: Transfer token ownership
      operationId: transfer_ownership_share_transfers_post
      parameters:
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareTransfer'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Transfer Ownership Share Transfers Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Transfer Ownership Share Transfers Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/transfers/{token_address}:
    get:
      tags:
        - share
      summary: List Transfer History
      description: List token transfer history
      operationId: list_transfer_history_share_transfers__token_address__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: source event of transfer
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/TransferSourceEventType'
            description: source event of transfer
          name: source_event
          in: query
        - description: source event data
          required: false
          schema:
            title: Data
            type: string
            description: source event data
          name: data
          in: query
        - description: sort item
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ListTransferHistorySortItem'
            description: sort item
            default: block_timestamp
          name: sort_item
          in: query
        - description: 0:asc, 1:desc
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc
            default: 1
          name: sort_order
          in: query
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/transfer_approvals:
    get:
      tags:
        - share
      summary: List Transfer Approval History
      description: List transfer approval history
      operationId: list_transfer_approval_history_share_transfer_approvals_get
      parameters:
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/transfer_approvals/{token_address}:
    get:
      tags:
        - share
      summary: List Token Transfer Approval History
      description: List token transfer approval history
      operationId: list_token_transfer_approval_history_share_transfer_approvals__token_address__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            title: From Address
            type: string
          name: from_address
          in: query
        - required: false
          schema:
            title: To Address
            type: string
          name: to_address
          in: query
        - description: 0:unapproved, 1:escrow_finished, 2:transferred, 3:canceled
          required: false
          schema:
            title: Status
            maximum: 3
            minimum: 0
            type: array
            items:
              maximum: 3
              minimum: 0
              type: integer
            description: 0:unapproved, 1:escrow_finished, 2:transferred, 3:canceled
          name: status
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/IDXTransferApprovalsSortItem'
            default: id
          name: sort_item
          in: query
        - description: 0:asc, 1:desc
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalHistoryResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/transfer_approvals/{token_address}/{id}:
    get:
      tags:
        - share
      summary: Retrieve Transfer Approval History
      description: Retrieve share token transfer approval history
      operationId: retrieve_transfer_approval_history_share_transfer_approvals__token_address___id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalTokenResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - share
      summary: Update Transfer Approval
      description: Update on the status of a share transfer approval
      operationId: update_transfer_approval_share_transfer_approvals__token_address___id__post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransferApprovalRequest'
        required: true
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                title: Response 400 Update Transfer Approval Share Transfer Approvals  Token Address   Id  Post
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/SendTransactionErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Update Transfer Approval Share Transfer Approvals  Token Address   Id  Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/bulk_transfer:
    get:
      tags:
        - share
      summary: List Bulk Transfer Upload
      description: List bulk transfer uploads
      operationId: list_bulk_transfer_upload_share_bulk_transfer_get
      parameters:
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Bulk Transfer Upload Share Bulk Transfer Get
                type: array
                items:
                  $ref: '#/components/schemas/BulkTransferUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - share
      summary: Bulk Transfer Ownership
      description: Bulk transfer token ownership
      operationId: bulk_transfer_ownership_share_bulk_transfer_post
      parameters:
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
        - required: false
          schema:
            title: Eoa-Password
            type: string
          name: eoa-password
          in: header
        - required: false
          schema:
            title: Auth-Token
            type: string
          name: auth-token
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Tokens
              type: array
              items:
                $ref: '#/components/schemas/IbetShareTransfer'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkTransferUploadIdResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                title: Response 401 Bulk Transfer Ownership Share Bulk Transfer Post
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/bulk_transfer/{upload_id}:
    get:
      tags:
        - share
      summary: Retrieve Bulk Transfer
      description: Retrieve a bulk transfer upload
      operationId: retrieve_bulk_transfer_share_bulk_transfer__upload_id__get
      parameters:
        - required: true
          schema:
            title: Upload Id
            type: string
          name: upload_id
          in: path
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Retrieve Bulk Transfer Share Bulk Transfer  Upload Id  Get
                type: array
                items:
                  $ref: '#/components/schemas/BulkTransferResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /token/holders/{token_address}/collection:
    get:
      tags:
        - token_common
      summary: List All Token Holders Collections
      operationId: list_all_token_holders_collections_token_holders__token_address__collection_get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - required: false
          schema:
            $ref: '#/components/schemas/TokenHolderBatchStatus'
          name: status
          in: query
        - description: 0:asc, 1:desc (created)
          required: false
          schema:
            title: Sort Order
            maximum: 1
            minimum: 0
            type: integer
            description: 0:asc, 1:desc (created)
            default: 1
          name: sort_order
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
          name: offset
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
          name: limit
          in: query
        - required: false
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllTokenHolderCollectionsResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - token_common
      summary: Create Collection
      description: Create collection
      operationId: create_collection_token_holders__token_address__collection_post
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          example: '0xABCdeF1234567890abcdEf123456789000000000'
          name: token_address
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenHoldersListRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTokenHoldersListResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /token/holders/{token_address}/collection/{list_id}:
    get:
      tags:
        - token_common
      summary: Retrieve Token Holders List
      description: Get token holders
      operationId: retrieve_token_holders_list_token_holders__token_address__collection__list_id__get
      parameters:
        - required: true
          schema:
            title: Token Address
            type: string
          name: token_address
          in: path
        - description: UUID v4 required
          required: true
          schema:
            title: List Id
            type: string
            description: UUID v4 required
          example: cfd83622-34dc-4efe-a68b-2cc275d3d824
          name: list_id
          in: path
        - required: true
          schema:
            title: Issuer-Address
            type: string
          name: issuer-address
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveTokenHoldersListResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /blockchain_explorer/block_data:
    get:
      tags:
        - blockchain_explorer
      summary: '[ibet Blockchain Explorer] List block data'
      description: |-
        Returns a list of block data within the specified block number range.
        The maximum number of search results is 1000.
      operationId: ListBlockData
      parameters:
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - required: false
          schema:
            title: From Block Number
            minimum: 0
            type: integer
          name: from_block_number
          in: query
        - required: false
          schema:
            title: To Block Number
            minimum: 0
            type: integer
          name: to_block_number
          in: query
        - description: 'sort order(0: ASC, 1: DESC)'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortOrder'
            description: 'sort order(0: ASC, 1: DESC)'
            default: 0
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockDataListResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseLimitExceededErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /blockchain_explorer/block_data/{block_number}:
    get:
      tags:
        - blockchain_explorer
      summary: '[ibet Blockchain Explorer] Retrieve block data'
      description: Returns block data in the specified block number.
      operationId: GetBlockData
      parameters:
        - description: Block number
          required: true
          schema:
            title: Block Number
            minimum: 0
            type: integer
            description: Block number
          name: block_number
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockDataResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /blockchain_explorer/tx_data:
    get:
      tags:
        - blockchain_explorer
      summary: '[ibet Blockchain Explorer] List tx data'
      description: |-
        Returns a list of transactions by various search parameters.
        The maximum number of search results is 10000.
      operationId: ListTxData
      parameters:
        - description: start position
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: start position
          name: offset
          in: query
        - description: number of set
          required: false
          schema:
            title: Limit
            minimum: 0
            type: integer
            description: number of set
          name: limit
          in: query
        - description: block number
          required: false
          schema:
            title: Block Number
            minimum: 0
            type: integer
            description: block number
          name: block_number
          in: query
        - description: tx from
          required: false
          schema:
            title: From Address
            type: string
            description: tx from
          name: from_address
          in: query
        - description: tx to
          required: false
          schema:
            title: To Address
            type: string
            description: tx to
          name: to_address
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxDataListResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseLimitExceededErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /blockchain_explorer/tx_data/{hash}:
    get:
      tags:
        - blockchain_explorer
      summary: '[ibet Blockchain Explorer] Retrieve transaction data'
      description: Searching for the transaction by transaction hash
      operationId: GetTxData
      parameters:
        - description: Transaction hash
          required: true
          schema:
            title: Hash
            type: string
            description: Transaction hash
          name: hash
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxDataResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
components:
  schemas:
    AccountAuthTokenRequest:
      title: AccountAuthTokenRequest
      type: object
      properties:
        valid_duration:
          title: Valid Duration
          maximum: 259200
          minimum: 0
          type: integer
      description: Account Create Auth Token schema (REQUEST)
    AccountAuthTokenResponse:
      title: AccountAuthTokenResponse
      required:
        - auth_token
        - usage_start
        - valid_duration
      type: object
      properties:
        auth_token:
          title: Auth Token
          type: string
        usage_start:
          title: Usage Start
          type: string
          format: date-time
        valid_duration:
          title: Valid Duration
          type: integer
      description: Account Auth Token schema (RESPONSE)
    AccountChangeEOAPasswordRequest:
      title: AccountChangeEOAPasswordRequest
      required:
        - old_eoa_password
        - eoa_password
      type: object
      properties:
        old_eoa_password:
          title: Old Eoa Password
          type: string
        eoa_password:
          title: Eoa Password
          type: string
      description: Account Change EOA Password schema (REQUEST)
    AccountChangeRSAPassphraseRequest:
      title: AccountChangeRSAPassphraseRequest
      required:
        - old_rsa_passphrase
        - rsa_passphrase
      type: object
      properties:
        old_rsa_passphrase:
          title: Old Rsa Passphrase
          type: string
        rsa_passphrase:
          title: Rsa Passphrase
          type: string
      description: Account Change RSA Passphrase schema (REQUEST)
    AccountCreateKeyRequest:
      title: AccountCreateKeyRequest
      required:
        - eoa_password
      type: object
      properties:
        eoa_password:
          title: Eoa Password
          type: string
      description: Account Create Key schema (REQUEST)
    AccountGenerateRsaKeyRequest:
      title: AccountGenerateRsaKeyRequest
      type: object
      properties:
        rsa_passphrase:
          title: Rsa Passphrase
          type: string
      description: Account Change Rsa Key schema (REQUEST)
    AccountResponse:
      title: AccountResponse
      required:
        - issuer_address
        - rsa_status
        - is_deleted
      type: object
      properties:
        issuer_address:
          title: Issuer Address
          type: string
        rsa_public_key:
          title: Rsa Public Key
          type: string
        rsa_status:
          $ref: '#/components/schemas/AccountRsaStatus'
        is_deleted:
          title: Is Deleted
          type: boolean
      description: Account schema (Response)
    AccountRsaStatus:
      title: AccountRsaStatus
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: |-
        0:UNSET
        1:CREATING
        2:CHANGING
        3:SET
    AuthTokenAlreadyExistsErrorCode:
      title: AuthTokenAlreadyExistsErrorCode
      enum:
        - 3
      description: An enumeration.
    AuthTokenAlreadyExistsErrorMetainfo:
      title: AuthTokenAlreadyExistsErrorMetainfo
      required:
        - code
        - title
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/AuthTokenAlreadyExistsErrorCode'
          example: 3
        title:
          title: Title
          type: string
          example: AuthTokenAlreadyExistsError
    AuthTokenAlreadyExistsErrorResponse:
      title: AuthTokenAlreadyExistsErrorResponse
      required:
        - meta
        - detail
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/AuthTokenAlreadyExistsErrorMetainfo'
        detail:
          title: Detail
          type: string
    AuthorizationErrorCode:
      title: AuthorizationErrorCode
      enum:
        - 1
      description: An enumeration.
    AuthorizationErrorMetainfo:
      title: AuthorizationErrorMetainfo
      required:
        - code
        - title
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/AuthorizationErrorCode'
          example: 1
        title:
          title: Title
          type: string
          example: AuthorizationError
    AuthorizationErrorResponse:
      title: AuthorizationErrorResponse
      required:
        - meta
        - detail
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/AuthorizationErrorMetainfo'
        detail:
          title: Detail
          type: string
    BatchIssueRedeemProcessedMetaInfo:
      title: BatchIssueRedeemProcessedMetaInfo
      required:
        - category
        - upload_id
        - error_data_id
        - token_address
        - token_type
      type: object
      properties:
        category:
          $ref: '#/components/schemas/BatchIssueRedeemProcessingCategory'
        upload_id:
          title: Upload Id
          type: string
        error_data_id:
          title: Error Data Id
          type: array
          items:
            type: integer
        token_address:
          title: Token Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
    BatchIssueRedeemProcessedNotification:
      title: BatchIssueRedeemProcessedNotification
      required:
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      type: object
      properties:
        notice_id:
          title: Notice Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        priority:
          title: Priority
          type: integer
        notice_code:
          title: Notice Code
          maximum: 3
          minimum: 0
          type: integer
          description: |2-
             - 0: All records successfully processed
             - 1: Issuer does not exist
             - 2: Failed to decode keyfile
             - 3: Some records are failed to send transaction
        created:
          title: Created
          type: string
        notice_type:
          title: Notice Type
          enum:
            - BatchIssueProcessed
          type: string
        metainfo:
          $ref: '#/components/schemas/BatchIssueRedeemProcessedMetaInfo'
    BatchIssueRedeemProcessingCategory:
      title: BatchIssueRedeemProcessingCategory
      enum:
        - Issue
        - Redeem
      type: string
      description: Batch Issue/Redeem Category
    BatchIssueRedeemUpload:
      title: BatchIssueRedeemUpload
      required:
        - batch_id
        - issuer_address
        - token_type
        - token_address
        - processed
        - created
      type: object
      properties:
        batch_id:
          title: Batch Id
          type: string
          description: UUID v4 required
        issuer_address:
          title: Issuer Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
        token_address:
          title: Token Address
          type: string
        processed:
          title: Processed
          type: boolean
        created:
          title: Created
          type: string
      description: Batch issue/redeem Upload
      example:
        batch_id: cfd83622-34dc-4efe-a68b-2cc275d3d824
        issuer_address: '0x0000000000000000000000000000000000000000'
        token_type: Bond
        token_address: '0x0000000000000000000000000000000000000000'
        processed: true
        created: '2022-09-02T19:49:33.370874+09:00'
    BatchIssueRedeemUploadIdResponse:
      title: BatchIssueRedeemUploadIdResponse
      required:
        - batch_id
      type: object
      properties:
        batch_id:
          title: Batch Id
          type: string
      description: Batch issue/redeem upload id (RESPONSE)
    BatchRegisterPersonalInfoErrorMetaInfo:
      title: BatchRegisterPersonalInfoErrorMetaInfo
      required:
        - upload_id
        - error_registration_id
      type: object
      properties:
        upload_id:
          title: Upload Id
          type: string
        error_registration_id:
          title: Error Registration Id
          type: array
          items:
            type: integer
    BatchRegisterPersonalInfoErrorNotification:
      title: BatchRegisterPersonalInfoErrorNotification
      required:
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      type: object
      properties:
        notice_id:
          title: Notice Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        priority:
          title: Priority
          type: integer
        notice_code:
          title: Notice Code
          maximum: 1
          minimum: 0
          type: integer
          description: |2
             - 0: Issuer does not exist
             - 1: Failed to send transaction
        created:
          title: Created
          type: string
        notice_type:
          title: Notice Type
          enum:
            - BatchRegisterPersonalInfoError
          type: string
        metainfo:
          $ref: '#/components/schemas/BatchRegisterPersonalInfoErrorMetaInfo'
    BatchRegisterPersonalInfoResult:
      title: BatchRegisterPersonalInfoResult
      required:
        - status
        - account_address
        - key_manager
      type: object
      properties:
        status:
          title: Status
          type: integer
        account_address:
          title: Account Address
          type: string
        key_manager:
          title: Key Manager
          type: string
        name:
          title: Name
          type: string
        postal_code:
          title: Postal Code
          type: string
        address:
          title: Address
          type: string
        email:
          title: Email
          type: string
        birth:
          title: Birth
          type: string
        is_corporate:
          title: Is Corporate
          type: boolean
        tax_category:
          title: Tax Category
          type: integer
      description: Result of Creating Batch Register PersonalInfo schema (RESPONSE)
    BatchRegisterPersonalInfoUploadResponse:
      title: BatchRegisterPersonalInfoUploadResponse
      required:
        - batch_id
        - status
        - created
      type: object
      properties:
        batch_id:
          title: Batch Id
          type: string
          description: UUID v4 required
        status:
          $ref: '#/components/schemas/BatchRegisterPersonalInfoUploadStatus'
        created:
          title: Created
          type: string
      description: Batch Register PersonalInfo schema (RESPONSE)
      example:
        batch_id: cfd83622-34dc-4efe-a68b-2cc275d3d824
        status: pending
        created: '2022-09-02T19:49:33.370874+09:00'
    BatchRegisterPersonalInfoUploadStatus:
      title: BatchRegisterPersonalInfoUploadStatus
      enum:
        - pending
        - done
        - failed
      type: string
      description: Batch Register PersonalInfo Upload Status
    BlockData:
      title: BlockData
      required:
        - number
        - hash
        - transactions
        - timestamp
        - gas_limit
        - gas_used
        - size
      type: object
      properties:
        number:
          title: Number
          minimum: 0
          type: integer
          description: Block number
        hash:
          title: Hash
          type: string
          description: Block hash
        transactions:
          title: Transactions
          type: array
          items:
            type: string
          description: Transaction list
        timestamp:
          title: Timestamp
          type: integer
        gas_limit:
          title: Gas Limit
          type: integer
        gas_used:
          title: Gas Used
          type: integer
        size:
          title: Size
          minimum: 0
          type: integer
    BlockDataDetail:
      title: BlockDataDetail
      required:
        - number
        - parent_hash
        - sha3_uncles
        - miner
        - state_root
        - transactions_root
        - receipts_root
        - logs_bloom
        - difficulty
        - gas_limit
        - gas_used
        - timestamp
        - proof_of_authority_data
        - mix_hash
        - nonce
        - hash
        - size
        - transactions
      type: object
      properties:
        number:
          title: Number
          minimum: 0
          type: integer
          description: Block number
        parent_hash:
          title: Parent Hash
          type: string
        sha3_uncles:
          title: Sha3 Uncles
          type: string
        miner:
          title: Miner
          type: string
        state_root:
          title: State Root
          type: string
        transactions_root:
          title: Transactions Root
          type: string
        receipts_root:
          title: Receipts Root
          type: string
        logs_bloom:
          title: Logs Bloom
          type: string
        difficulty:
          title: Difficulty
          type: integer
        gas_limit:
          title: Gas Limit
          type: integer
        gas_used:
          title: Gas Used
          type: integer
        timestamp:
          title: Timestamp
          type: integer
        proof_of_authority_data:
          title: Proof Of Authority Data
          type: string
        mix_hash:
          title: Mix Hash
          type: string
        nonce:
          title: Nonce
          type: string
        hash:
          title: Hash
          type: string
          description: Block hash
        size:
          title: Size
          minimum: 0
          type: integer
        transactions:
          title: Transactions
          type: array
          items:
            type: string
          description: Transaction list
    BlockDataListResponse:
      title: BlockDataListResponse
      required:
        - result_set
        - block_data
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        block_data:
          title: Block Data
          type: array
          items:
            $ref: '#/components/schemas/BlockData'
    BlockDataResponse:
      $ref: '#/components/schemas/BlockDataDetail'
      title: BlockDataResponse
    BlockNumberResponse:
      title: BlockNumberResponse
      required:
        - block_number
      type: object
      properties:
        block_number:
          title: Block Number
          type: integer
      description: Block Number schema (Response)
    BulkTransferErrorMetaInfo:
      title: BulkTransferErrorMetaInfo
      required:
        - upload_id
        - token_type
        - error_transfer_id
      type: object
      properties:
        upload_id:
          title: Upload Id
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
        error_transfer_id:
          title: Error Transfer Id
          type: array
          items:
            type: integer
    BulkTransferErrorNotification:
      title: BulkTransferErrorNotification
      required:
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      type: object
      properties:
        notice_id:
          title: Notice Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        priority:
          title: Priority
          type: integer
        notice_code:
          title: Notice Code
          maximum: 2
          minimum: 0
          type: integer
          description: |2
             - 0: Issuer does not exist
             - 1: Could not get the private key of the issuer
             - 2: Failed to send transaction
        created:
          title: Created
          type: string
        notice_type:
          title: Notice Type
          enum:
            - BulkTransferError
          type: string
        metainfo:
          $ref: '#/components/schemas/BulkTransferErrorMetaInfo'
    BulkTransferResponse:
      title: BulkTransferResponse
      required:
        - upload_id
        - issuer_address
        - token_address
        - token_type
        - from_address
        - to_address
        - amount
        - status
      type: object
      properties:
        upload_id:
          title: Upload Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        token_address:
          title: Token Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
        from_address:
          title: From Address
          type: string
        to_address:
          title: To Address
          type: string
        amount:
          title: Amount
          type: integer
        status:
          title: Status
          type: integer
      description: bulk transfer data
    BulkTransferUploadIdResponse:
      title: BulkTransferUploadIdResponse
      required:
        - upload_id
      type: object
      properties:
        upload_id:
          title: Upload Id
          type: string
      description: bulk transfer upload id
    BulkTransferUploadResponse:
      title: BulkTransferUploadResponse
      required:
        - upload_id
        - issuer_address
        - token_type
        - status
        - created
      type: object
      properties:
        upload_id:
          title: Upload Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
        status:
          title: Status
          type: integer
        created:
          title: Created
          type: string
      description: bulk transfer upload
    ContractRevertErrorCode:
      title: ContractRevertErrorCode
      enum:
        - 0
        - 100001
        - 100002
        - 100101
        - 100102
        - 110001
        - 110002
        - 110101
        - 110102
        - 110201
        - 110202
        - 110301
        - 110401
        - 110402
        - 110501
        - 110502
        - 110503
        - 110504
        - 110601
        - 110701
        - 110702
        - 110801
        - 110802
        - 110901
        - 110902
        - 111001
        - 111002
        - 111101
        - 111102
        - 111201
        - 120001
        - 120002
        - 120101
        - 120102
        - 120201
        - 120202
        - 120301
        - 120401
        - 120402
        - 120501
        - 120502
        - 120503
        - 120601
        - 120701
        - 120702
        - 120801
        - 120802
        - 120901
        - 120902
        - 121001
        - 121002
        - 121101
        - 121102
        - 121201
        - 130001
        - 130101
        - 130102
        - 130201
        - 130202
        - 130203
        - 130301
        - 130401
        - 130501
        - 130502
        - 140001
        - 140101
        - 140102
        - 140201
        - 140202
        - 140203
        - 140301
        - 140401
        - 140402
        - 150001
        - 150101
        - 150201
        - 150202
        - 150301
        - 200001
        - 210001
        - 210101
        - 210102
        - 210103
        - 210104
        - 210201
        - 210202
        - 210203
        - 210204
        - 210301
        - 210302
        - 210401
        - 210402
        - 210403
        - 210501
        - 210502
        - 210503
        - 210504
        - 210601
        - 220001
        - 230001
        - 230002
        - 230003
        - 230101
        - 230102
        - 230103
        - 230104
        - 230201
        - 230202
        - 230203
        - 230204
        - 230301
        - 240001
        - 240002
        - 240003
        - 240101
        - 240102
        - 240103
        - 240104
        - 240201
        - 240202
        - 240203
        - 240204
        - 240205
        - 240301
        - 240302
        - 240303
        - 240304
        - 240401
        - 300001
        - 300101
        - 300201
        - 300301
        - 300401
        - 300501
        - 400001
        - 400002
        - 500001
        - 500101
        - 600001
        - 600002
        - 610001
        - 610011
        - 620001
      description: An enumeration.
    ContractRevertErrorMetainfo:
      title: ContractRevertErrorMetainfo
      required:
        - code
        - title
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ContractRevertErrorCode'
          example: 0
        title:
          title: Title
          type: string
          example: ContractRevertError
    ContractRevertErrorResponse:
      title: ContractRevertErrorResponse
      required:
        - meta
        - detail
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ContractRevertErrorMetainfo'
        detail:
          title: Detail
          type: string
      description: |-
        * Error code is defined here
          * https://github.com/BoostryJP/ibet-SmartContract/blob/dev-23.3/docs/Errors.md
        * If contract doesn't throw error code, 0 is returned.
    CreateLedgerInfoMetaInfo:
      title: CreateLedgerInfoMetaInfo
      required:
        - token_address
        - token_type
        - ledger_id
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
        ledger_id:
          title: Ledger Id
          type: integer
    CreateLedgerInfoNotification:
      title: CreateLedgerInfoNotification
      required:
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      type: object
      properties:
        notice_id:
          title: Notice Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        priority:
          title: Priority
          type: integer
        notice_code:
          title: Notice Code
          maximum: 0
          minimum: 0
          type: integer
          description: |2
             - 0: Created ledger info successfully
        created:
          title: Created
          type: string
        notice_type:
          title: Notice Type
          enum:
            - CreateLedgerInfo
          type: string
        metainfo:
          $ref: '#/components/schemas/CreateLedgerInfoMetaInfo'
    CreateTokenHoldersListRequest:
      title: CreateTokenHoldersListRequest
      required:
        - list_id
        - block_number
      type: object
      properties:
        list_id:
          title: List Id
          type: string
          description: UUID v4 required
        block_number:
          title: Block Number
          minimum: 1
          type: integer
      description: Create Token Holders List schema (REQUEST)
      example:
        list_id: cfd83622-34dc-4efe-a68b-2cc275d3d824
        block_number: 765
    CreateTokenHoldersListResponse:
      title: CreateTokenHoldersListResponse
      required:
        - list_id
        - status
      type: object
      properties:
        list_id:
          title: List Id
          type: string
          description: UUID v4 required
        status:
          $ref: '#/components/schemas/TokenHolderBatchStatus'
      description: Create Token Holders List schema (RESPONSE)
      example:
        list_id: cfd83622-34dc-4efe-a68b-2cc275d3d824
        status: pending
    CreateUpdateLedgerDetailsDataRequest:
      title: CreateUpdateLedgerDetailsDataRequest
      type: object
      properties:
        name:
          title: Name
          maxLength: 200
          type: string
        address:
          title: Address
          maxLength: 200
          type: string
        amount:
          title: Amount
          maximum: 1000000000000
          minimum: 0
          type: integer
        price:
          title: Price
          maximum: 5000000000
          minimum: 0
          type: integer
        balance:
          title: Balance
          maximum: 5e+21
          minimum: 0
          type: integer
        acquisition_date:
          title: Acquisition Date
          maxLength: 10
          minLength: 10
          type: string
          description: YYYY/MM/DD
      description: Create or Update Ledger Details Data Structure schema (Request)
    CreateUpdateLedgerDetailsDataTemplateRequest:
      title: CreateUpdateLedgerDetailsDataTemplateRequest
      required:
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LedgerDetailsDataType'
        source:
          title: Source
          maxLength: 42
          type: string
      description: Create or Update Ledger Details Data Template schema (Request)
    CreateUpdateLedgerDetailsTemplateRequest:
      title: CreateUpdateLedgerDetailsTemplateRequest
      required:
        - token_detail_type
        - data
      type: object
      properties:
        token_detail_type:
          title: Token Detail Type
          maxLength: 100
          type: string
        headers:
          title: Headers
          type: array
          items:
            type: object
        data:
          $ref: '#/components/schemas/CreateUpdateLedgerDetailsDataTemplateRequest'
        footers:
          title: Footers
          type: array
          items:
            type: object
      description: Create or Update Ledger Details Template schema (Request)
    CreateUpdateLedgerTemplateRequest:
      title: CreateUpdateLedgerTemplateRequest
      required:
        - token_name
        - details
      type: object
      properties:
        token_name:
          title: Token Name
          maxLength: 200
          type: string
        headers:
          title: Headers
          type: array
          items:
            type: object
        details:
          title: Details
          type: array
          items:
            $ref: '#/components/schemas/CreateUpdateLedgerDetailsTemplateRequest'
        footers:
          title: Footers
          type: array
          items:
            type: object
      description: Create or Update Ledger Template schema (Request)
    DownloadFileResponse:
      title: DownloadFileResponse
      required:
        - file_id
        - issuer_address
        - file_name
        - content
        - content_size
        - label
      type: object
      properties:
        file_id:
          title: File Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        relation:
          title: Relation
          type: string
        file_name:
          title: File Name
          type: string
        content:
          title: Content
          type: string
          description: Base64-encoded content
        content_size:
          title: Content Size
          type: integer
        description:
          title: Description
          type: string
        label:
          title: Label
          type: string
      description: Download File schema (Response)
    E2EEResponse:
      title: E2EEResponse
      type: object
      properties:
        public_key:
          title: Public Key
          type: string
      description: E2EE schema (Response)
    E2EMessagingAccountChangeEOAPasswordRequest:
      title: E2EMessagingAccountChangeEOAPasswordRequest
      required:
        - old_eoa_password
        - eoa_password
      type: object
      properties:
        old_eoa_password:
          title: Old Eoa Password
          type: string
        eoa_password:
          title: Eoa Password
          type: string
      description: E2E Messaging Account Change EOA Password schema (REQUEST)
    E2EMessagingAccountChangeRSAPassphraseRequest:
      title: E2EMessagingAccountChangeRSAPassphraseRequest
      required:
        - old_rsa_passphrase
        - rsa_passphrase
      type: object
      properties:
        old_rsa_passphrase:
          title: Old Rsa Passphrase
          type: string
        rsa_passphrase:
          title: Rsa Passphrase
          type: string
      description: E2E Messaging Account Change RSA Passphrase schema (REQUEST)
    E2EMessagingAccountCreateRequest:
      title: E2EMessagingAccountCreateRequest
      required:
        - eoa_password
      type: object
      properties:
        eoa_password:
          title: Eoa Password
          type: string
        rsa_passphrase:
          title: Rsa Passphrase
          type: string
        rsa_key_generate_interval:
          title: Rsa Key Generate Interval
          maximum: 10000
          minimum: 0
          type: integer
          description: 0 disables auto-generate(Unit is hour)
          default: 24
        rsa_generation:
          title: Rsa Generation
          maximum: 100
          minimum: 0
          type: integer
          description: 0 disables generation
          default: 7
      description: E2E Messaging Account Create schema (REQUEST)
    E2EMessagingAccountResponse:
      title: E2EMessagingAccountResponse
      required:
        - account_address
        - is_deleted
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
        rsa_key_generate_interval:
          title: Rsa Key Generate Interval
          type: integer
        rsa_generation:
          title: Rsa Generation
          type: integer
        rsa_public_key:
          title: Rsa Public Key
          type: string
        is_deleted:
          title: Is Deleted
          type: boolean
      description: E2E Messaging Account schema (Response)
    E2EMessagingAccountUpdateRsaKeyRequest:
      title: E2EMessagingAccountUpdateRsaKeyRequest
      type: object
      properties:
        rsa_key_generate_interval:
          title: Rsa Key Generate Interval
          maximum: 10000
          minimum: 0
          type: integer
          description: 0 disables auto-generate(Unit is hour)
          default: 24
        rsa_generation:
          title: Rsa Generation
          maximum: 100
          minimum: 0
          type: integer
          description: 0 disables generation
          default: 7
      description: E2E Messaging Account Rsa Key Update schema (REQUEST)
    E2EMessagingResponse:
      title: E2EMessagingResponse
      required:
        - id
        - from_address
        - to_address
        - type
        - message
        - send_timestamp
      type: object
      properties:
        id:
          title: Id
          type: integer
        from_address:
          title: From Address
          type: string
        to_address:
          title: To Address
          type: string
        type:
          title: Type
          type: string
        message:
          title: Message
          anyOf:
            - type: string
            - type: object
            - type: array
              items: {}
        send_timestamp:
          title: Send Timestamp
          type: string
          format: date-time
      description: E2E Messaging schema (Response)
    Error401MetaModel:
      title: Error401MetaModel
      required:
        - code
        - title
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 1
        title:
          title: Title
          type: string
          example: AuthorizationError
    Error401Model:
      title: Error401Model
      required:
        - meta
        - detail
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Error401MetaModel'
        detail:
          title: Detail
          type: string
    Error404MetaModel:
      title: Error404MetaModel
      required:
        - code
        - title
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 1
        title:
          title: Title
          type: string
          example: NotFound
    Error404Model:
      title: Error404Model
      required:
        - meta
        - detail
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Error404MetaModel'
        detail:
          title: Detail
          type: string
    Error422DetailModel:
      title: Error422DetailModel
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Loc
          type: array
          items:
            type: string
          example:
            - header
            - issuer-address
        msg:
          title: Msg
          type: string
          example: field required
        type:
          title: Type
          type: string
          example: value_error.missing
    Error422MetaModel:
      title: Error422MetaModel
      required:
        - code
        - title
      type: object
      properties:
        code:
          title: Code
          type: integer
          example: 1
        title:
          title: Title
          type: string
          example: RequestValidationError
    Error422Model:
      title: Error422Model
      required:
        - meta
        - detail
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Error422MetaModel'
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/Error422DetailModel'
    FileResponse:
      title: FileResponse
      required:
        - file_id
        - issuer_address
        - file_name
        - content_size
        - label
        - created
      type: object
      properties:
        file_id:
          title: File Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        relation:
          title: Relation
          type: string
        file_name:
          title: File Name
          type: string
        content_size:
          title: Content Size
          type: integer
        description:
          title: Description
          type: string
        label:
          title: Label
          type: string
        created:
          title: Created
          type: string
          format: date-time
      description: File schema (Response)
    ForceUnlockRequest:
      title: ForceUnlockRequest
      required:
        - token_address
        - lock_address
        - recipient_address
        - value
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
          description: Token address
        lock_address:
          title: Lock Address
          type: string
          description: Lock address
        recipient_address:
          title: Recipient Address
          type: string
          description: Recipient address
        value:
          title: Value
          exclusiveMinimum: 0
          type: integer
          description: Unlock amount
    GetBatchIssueRedeemResponse:
      title: GetBatchIssueRedeemResponse
      required:
        - processed
        - results
      type: object
      properties:
        processed:
          title: Processed
          type: boolean
        results:
          title: Results
          type: array
          items:
            $ref: '#/components/schemas/GetBatchIssueRedeemResult'
      description: Get Batch issue/redeem upload schema (RESPONSE)
    GetBatchIssueRedeemResult:
      title: GetBatchIssueRedeemResult
      required:
        - account_address
        - amount
        - status
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
        amount:
          title: Amount
          type: integer
        status:
          title: Status
          type: integer
      description: Result of Creating Batch issue/redeem schema (RESPONSE)
    GetBatchRegisterPersonalInfoResponse:
      title: GetBatchRegisterPersonalInfoResponse
      required:
        - status
        - results
      type: object
      properties:
        status:
          $ref: '#/components/schemas/BatchRegisterPersonalInfoUploadStatus'
        results:
          title: Results
          type: array
          items:
            $ref: '#/components/schemas/BatchRegisterPersonalInfoResult'
      description: Get Batch Register PersonalInfo schema (RESPONSE)
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    HolderCountResponse:
      title: HolderCountResponse
      required:
        - count
      type: object
      properties:
        count:
          title: Count
          type: integer
      description: Holder count schema (Response)
    HolderResponse:
      title: HolderResponse
      required:
        - account_address
        - personal_information
        - balance
        - exchange_balance
        - exchange_commitment
        - pending_transfer
        - locked
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
        personal_information:
          title: Personal Information
          type: object
        balance:
          title: Balance
          type: integer
        exchange_balance:
          title: Exchange Balance
          type: integer
        exchange_commitment:
          title: Exchange Commitment
          type: integer
        pending_transfer:
          title: Pending Transfer
          type: integer
        locked:
          title: Locked
          type: integer
      description: Holder schema (Response)
    IDXIssueRedeemSortItem:
      title: IDXIssueRedeemSortItem
      enum:
        - block_timestamp
        - locked_address
        - target_address
        - amount
      type: string
      description: Issue/Redeem sort item
    IDXTransferApprovalsSortItem:
      title: IDXTransferApprovalsSortItem
      enum:
        - id
        - exchange_address
        - application_id
        - from_address
        - to_address
        - amount
        - application_datetime
        - approval_datetime
        - status
      type: string
      description: An enumeration.
    IbetShareAdditionalIssue:
      title: IbetShareAdditionalIssue
      required:
        - account_address
        - amount
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
        amount:
          title: Amount
          maximum: 1000000000000
          minimum: 1
          type: integer
      description: ibet Share schema (Additional Issue)
    IbetShareCreate:
      title: IbetShareCreate
      required:
        - name
        - issue_price
        - principal_value
        - total_supply
      type: object
      properties:
        name:
          title: Name
          maxLength: 100
          type: string
        issue_price:
          title: Issue Price
          maximum: 5000000000
          minimum: 0
          type: integer
        principal_value:
          title: Principal Value
          maximum: 5000000000
          minimum: 0
          type: integer
        total_supply:
          title: Total Supply
          maximum: 1000000000000
          minimum: 0
          type: integer
        symbol:
          title: Symbol
          maxLength: 100
          type: string
        dividends:
          title: Dividends
          maximum: 5000000000
          minimum: 0
          type: number
        dividend_record_date:
          title: Dividend Record Date
          anyOf:
            - pattern: ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
              type: string
            - enum:
                - ''
              type: string
        dividend_payment_date:
          title: Dividend Payment Date
          anyOf:
            - pattern: ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
              type: string
            - enum:
                - ''
              type: string
        cancellation_date:
          title: Cancellation Date
          anyOf:
            - pattern: ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
              type: string
            - enum:
                - ''
              type: string
        transferable:
          title: Transferable
          type: boolean
        status:
          title: Status
          type: boolean
        is_offering:
          title: Is Offering
          type: boolean
        tradable_exchange_contract_address:
          title: Tradable Exchange Contract Address
          type: string
        personal_info_contract_address:
          title: Personal Info Contract Address
          type: string
        contact_information:
          title: Contact Information
          maxLength: 2000
          type: string
        privacy_policy:
          title: Privacy Policy
          maxLength: 5000
          type: string
        transfer_approval_required:
          title: Transfer Approval Required
          type: boolean
        is_canceled:
          title: Is Canceled
          type: boolean
      description: ibet Share schema (Create)
    IbetShareRedeem:
      title: IbetShareRedeem
      required:
        - account_address
        - amount
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
        amount:
          title: Amount
          maximum: 1000000000000
          minimum: 1
          type: integer
      description: ibet Share schema (Redeem)
    IbetShareResponse:
      title: IbetShareResponse
      required:
        - issuer_address
        - token_address
        - name
        - symbol
        - issue_price
        - principal_value
        - total_supply
        - dividends
        - dividend_record_date
        - dividend_payment_date
        - cancellation_date
        - transferable
        - transfer_approval_required
        - status
        - is_offering
        - tradable_exchange_contract_address
        - personal_info_contract_address
        - contact_information
        - privacy_policy
        - issue_datetime
        - token_status
        - is_canceled
        - memo
      type: object
      properties:
        issuer_address:
          title: Issuer Address
          type: string
        token_address:
          title: Token Address
          type: string
        name:
          title: Name
          type: string
        symbol:
          title: Symbol
          type: string
        issue_price:
          title: Issue Price
          type: integer
        principal_value:
          title: Principal Value
          type: integer
        total_supply:
          title: Total Supply
          type: integer
        dividends:
          title: Dividends
          type: number
        dividend_record_date:
          title: Dividend Record Date
          type: string
        dividend_payment_date:
          title: Dividend Payment Date
          type: string
        cancellation_date:
          title: Cancellation Date
          type: string
        transferable:
          title: Transferable
          type: boolean
        transfer_approval_required:
          title: Transfer Approval Required
          type: boolean
        status:
          title: Status
          type: boolean
        is_offering:
          title: Is Offering
          type: boolean
        tradable_exchange_contract_address:
          title: Tradable Exchange Contract Address
          type: string
        personal_info_contract_address:
          title: Personal Info Contract Address
          type: string
        contact_information:
          title: Contact Information
          type: string
        privacy_policy:
          title: Privacy Policy
          type: string
        issue_datetime:
          title: Issue Datetime
          type: string
        token_status:
          title: Token Status
          type: integer
        is_canceled:
          title: Is Canceled
          type: boolean
        memo:
          title: Memo
          type: string
      description: ibet Share schema (Response)
    IbetShareScheduledUpdate:
      title: IbetShareScheduledUpdate
      required:
        - scheduled_datetime
        - event_type
        - data
      type: object
      properties:
        scheduled_datetime:
          title: Scheduled Datetime
          type: string
          format: date-time
        event_type:
          $ref: '#/components/schemas/ScheduledEventType'
        data:
          $ref: '#/components/schemas/IbetShareUpdate'
      description: scheduled event (Request)
    IbetShareTransfer:
      title: IbetShareTransfer
      required:
        - token_address
        - from_address
        - to_address
        - amount
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        from_address:
          title: From Address
          type: string
        to_address:
          title: To Address
          type: string
        amount:
          title: Amount
          maximum: 1000000000000
          minimum: 1
          type: integer
      description: ibet Share schema (Transfer)
    IbetShareUpdate:
      title: IbetShareUpdate
      type: object
      properties:
        cancellation_date:
          title: Cancellation Date
          anyOf:
            - pattern: ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
              type: string
            - enum:
                - ''
              type: string
        dividend_record_date:
          title: Dividend Record Date
          anyOf:
            - pattern: ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
              type: string
            - enum:
                - ''
              type: string
        dividend_payment_date:
          title: Dividend Payment Date
          anyOf:
            - pattern: ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
              type: string
            - enum:
                - ''
              type: string
        dividends:
          title: Dividends
          maximum: 5000000000
          minimum: 0
          type: number
        tradable_exchange_contract_address:
          title: Tradable Exchange Contract Address
          type: string
        personal_info_contract_address:
          title: Personal Info Contract Address
          type: string
        transferable:
          title: Transferable
          type: boolean
        status:
          title: Status
          type: boolean
        is_offering:
          title: Is Offering
          type: boolean
        contact_information:
          title: Contact Information
          maxLength: 2000
          type: string
        privacy_policy:
          title: Privacy Policy
          maxLength: 5000
          type: string
        transfer_approval_required:
          title: Transfer Approval Required
          type: boolean
        principal_value:
          title: Principal Value
          maximum: 5000000000
          minimum: 0
          type: integer
        is_canceled:
          title: Is Canceled
          type: boolean
        memo:
          title: Memo
          maxLength: 10000
          type: string
      description: ibet Share schema (Update)
    IbetStraightBondAdditionalIssue:
      title: IbetStraightBondAdditionalIssue
      required:
        - account_address
        - amount
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
        amount:
          title: Amount
          maximum: 1000000000000
          minimum: 1
          type: integer
      description: ibet Straight Bond schema (Additional Issue)
    IbetStraightBondCreate:
      title: IbetStraightBondCreate
      required:
        - name
        - total_supply
        - face_value
        - purpose
      type: object
      properties:
        name:
          title: Name
          maxLength: 100
          type: string
        total_supply:
          title: Total Supply
          maximum: 1000000000000
          minimum: 0
          type: integer
        face_value:
          title: Face Value
          maximum: 5000000000
          minimum: 0
          type: integer
        purpose:
          title: Purpose
          maxLength: 2000
          type: string
        symbol:
          title: Symbol
          maxLength: 100
          type: string
        redemption_date:
          title: Redemption Date
          pattern: ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
          type: string
        redemption_value:
          title: Redemption Value
          maximum: 5000000000
          minimum: 0
          type: integer
        return_date:
          title: Return Date
          pattern: ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
          type: string
        return_amount:
          title: Return Amount
          maxLength: 2000
          type: string
        interest_rate:
          title: Interest Rate
          maximum: 100
          minimum: 0
          type: number
        interest_payment_date:
          title: Interest Payment Date
          type: array
          items:
            pattern: ^(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            type: string
        transferable:
          title: Transferable
          type: boolean
        is_redeemed:
          title: Is Redeemed
          type: boolean
        status:
          title: Status
          type: boolean
        is_offering:
          title: Is Offering
          type: boolean
        tradable_exchange_contract_address:
          title: Tradable Exchange Contract Address
          type: string
        personal_info_contract_address:
          title: Personal Info Contract Address
          type: string
        image_url:
          title: Image Url
          type: array
          items:
            type: string
        contact_information:
          title: Contact Information
          maxLength: 2000
          type: string
        privacy_policy:
          title: Privacy Policy
          maxLength: 5000
          type: string
        transfer_approval_required:
          title: Transfer Approval Required
          type: boolean
      description: ibet Straight Bond schema (Create)
    IbetStraightBondRedeem:
      title: IbetStraightBondRedeem
      required:
        - account_address
        - amount
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
        amount:
          title: Amount
          maximum: 1000000000000
          minimum: 1
          type: integer
      description: ibet Straight Bond schema (Redeem)
    IbetStraightBondResponse:
      title: IbetStraightBondResponse
      required:
        - issuer_address
        - token_address
        - name
        - symbol
        - total_supply
        - face_value
        - redemption_date
        - redemption_value
        - return_date
        - return_amount
        - purpose
        - interest_rate
        - interest_payment_date
        - transferable
        - is_redeemed
        - status
        - is_offering
        - tradable_exchange_contract_address
        - personal_info_contract_address
        - contact_information
        - privacy_policy
        - issue_datetime
        - token_status
        - transfer_approval_required
        - memo
      type: object
      properties:
        issuer_address:
          title: Issuer Address
          type: string
        token_address:
          title: Token Address
          type: string
        name:
          title: Name
          type: string
        symbol:
          title: Symbol
          type: string
        total_supply:
          title: Total Supply
          type: integer
        face_value:
          title: Face Value
          type: integer
        redemption_date:
          title: Redemption Date
          type: string
        redemption_value:
          title: Redemption Value
          type: integer
        return_date:
          title: Return Date
          type: string
        return_amount:
          title: Return Amount
          type: string
        purpose:
          title: Purpose
          type: string
        interest_rate:
          title: Interest Rate
          type: number
        interest_payment_date:
          title: Interest Payment Date
          type: array
          items:
            type: string
        transferable:
          title: Transferable
          type: boolean
        is_redeemed:
          title: Is Redeemed
          type: boolean
        status:
          title: Status
          type: boolean
        is_offering:
          title: Is Offering
          type: boolean
        tradable_exchange_contract_address:
          title: Tradable Exchange Contract Address
          type: string
        personal_info_contract_address:
          title: Personal Info Contract Address
          type: string
        contact_information:
          title: Contact Information
          type: string
        privacy_policy:
          title: Privacy Policy
          type: string
        issue_datetime:
          title: Issue Datetime
          type: string
        token_status:
          title: Token Status
          type: integer
        transfer_approval_required:
          title: Transfer Approval Required
          type: boolean
        memo:
          title: Memo
          type: string
      description: ibet Straight Bond schema (Response)
    IbetStraightBondScheduledUpdate:
      title: IbetStraightBondScheduledUpdate
      required:
        - scheduled_datetime
        - event_type
        - data
      type: object
      properties:
        scheduled_datetime:
          title: Scheduled Datetime
          type: string
          format: date-time
        event_type:
          $ref: '#/components/schemas/ScheduledEventType'
        data:
          $ref: '#/components/schemas/IbetStraightBondUpdate'
      description: scheduled event (Request)
    IbetStraightBondTransfer:
      title: IbetStraightBondTransfer
      required:
        - token_address
        - from_address
        - to_address
        - amount
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        from_address:
          title: From Address
          type: string
        to_address:
          title: To Address
          type: string
        amount:
          title: Amount
          maximum: 1000000000000
          minimum: 1
          type: integer
      description: ibet Straight Bond schema (Transfer)
    IbetStraightBondUpdate:
      title: IbetStraightBondUpdate
      type: object
      properties:
        face_value:
          title: Face Value
          maximum: 5000000000
          minimum: 0
          type: integer
        interest_rate:
          title: Interest Rate
          maximum: 100
          minimum: 0
          type: number
        interest_payment_date:
          title: Interest Payment Date
          type: array
          items:
            pattern: ^(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            type: string
        redemption_value:
          title: Redemption Value
          maximum: 5000000000
          minimum: 0
          type: integer
        transferable:
          title: Transferable
          type: boolean
        status:
          title: Status
          type: boolean
        is_offering:
          title: Is Offering
          type: boolean
        is_redeemed:
          title: Is Redeemed
          type: boolean
        tradable_exchange_contract_address:
          title: Tradable Exchange Contract Address
          type: string
        personal_info_contract_address:
          title: Personal Info Contract Address
          type: string
        contact_information:
          title: Contact Information
          maxLength: 2000
          type: string
        privacy_policy:
          title: Privacy Policy
          maxLength: 5000
          type: string
        transfer_approval_required:
          title: Transfer Approval Required
          type: boolean
        memo:
          title: Memo
          maxLength: 10000
          type: string
      description: ibet Straight Bond schema (Update)
    Integer64bitLimitExceededErrorCode:
      title: Integer64bitLimitExceededErrorCode
      enum:
        - 5
      description: An enumeration.
    Integer64bitLimitExceededErrorMetainfo:
      title: Integer64bitLimitExceededErrorMetainfo
      required:
        - code
        - title
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/Integer64bitLimitExceededErrorCode'
          example: 5
        title:
          title: Title
          type: string
          example: Integer64bitLimitExceededError
    Integer64bitLimitExceededErrorResponse:
      title: Integer64bitLimitExceededErrorResponse
      required:
        - meta
        - detail
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Integer64bitLimitExceededErrorMetainfo'
        detail:
          title: Detail
          type: string
    InvalidParameterErrorCode:
      title: InvalidParameterErrorCode
      enum:
        - 1
      description: An enumeration.
    InvalidParameterErrorMetainfo:
      title: InvalidParameterErrorMetainfo
      required:
        - code
        - title
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/InvalidParameterErrorCode'
          example: 1
        title:
          title: Title
          type: string
          example: InvalidParameterError
    InvalidParameterErrorResponse:
      title: InvalidParameterErrorResponse
      required:
        - meta
        - detail
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/InvalidParameterErrorMetainfo'
        detail:
          title: Detail
          type: string
    IssueErrorMetaInfo:
      title: IssueErrorMetaInfo
      required:
        - token_address
        - token_type
        - arguments
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
        arguments:
          title: Arguments
          type: object
    IssueErrorNotification:
      title: IssueErrorNotification
      required:
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      type: object
      properties:
        notice_id:
          title: Notice Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        priority:
          title: Priority
          type: integer
        notice_code:
          title: Notice Code
          maximum: 2
          minimum: 0
          type: integer
          description: |2
             - 0: Issuer does not exist
             - 1: Could not get the private key of the issuer
             - 2: Failed to send transaction
        created:
          title: Created
          type: string
        notice_type:
          title: Notice Type
          enum:
            - IssueError
          type: string
        metainfo:
          $ref: '#/components/schemas/IssueErrorMetaInfo'
    IssueRedeemEvent:
      title: IssueRedeemEvent
      required:
        - transaction_hash
        - token_address
        - locked_address
        - target_address
        - amount
        - block_timestamp
      type: object
      properties:
        transaction_hash:
          title: Transaction Hash
          type: string
        token_address:
          title: Token Address
          type: string
        locked_address:
          title: Locked Address
          type: string
        target_address:
          title: Target Address
          type: string
        amount:
          title: Amount
          type: integer
        block_timestamp:
          title: Block Timestamp
          type: string
      description: Issue/Redeem event
    IssueRedeemHistoryResponse:
      title: IssueRedeemHistoryResponse
      required:
        - result_set
        - history
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        history:
          title: History
          type: array
          items:
            $ref: '#/components/schemas/IssueRedeemEvent'
      description: Issue/Redeem history
    LedgerDetailsDataListAllResponse:
      title: LedgerDetailsDataListAllResponse
      required:
        - data_id
        - count
        - created
      type: object
      properties:
        data_id:
          title: Data Id
          type: string
        count:
          title: Count
          type: integer
        created:
          title: Created
          type: string
          format: date-time
      description: Ledger Details Data(List All) schema (Response)
    LedgerDetailsDataResponse:
      title: LedgerDetailsDataResponse
      required:
        - data_id
      type: object
      properties:
        data_id:
          title: Data Id
          type: string
      description: Ledger Details Data schema (Response)
    LedgerDetailsDataTemplateResponse:
      title: LedgerDetailsDataTemplateResponse
      required:
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/LedgerDetailsDataType'
        source:
          title: Source
          type: string
      description: Ledger Details Data Template schema (Response)
    LedgerDetailsDataType:
      title: LedgerDetailsDataType
      enum:
        - ibetfin
        - db
      type: string
      description: An enumeration.
    LedgerDetailsTemplateResponse:
      title: LedgerDetailsTemplateResponse
      required:
        - token_detail_type
        - data
      type: object
      properties:
        token_detail_type:
          title: Token Detail Type
          type: string
        headers:
          title: Headers
          type: array
          items:
            type: object
        data:
          $ref: '#/components/schemas/LedgerDetailsDataTemplateResponse'
        footers:
          title: Footers
          type: array
          items:
            type: object
      description: Ledger Details Template schema (Response)
    LedgerResponse:
      title: LedgerResponse
      required:
        - id
        - token_address
        - token_type
        - created
      type: object
      properties:
        id:
          title: Id
          type: integer
        token_address:
          title: Token Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
        created:
          title: Created
          type: string
          format: date-time
      description: Ledger schema (Response)
    LedgerTemplateResponse:
      title: LedgerTemplateResponse
      required:
        - token_name
        - details
      type: object
      properties:
        token_name:
          title: Token Name
          type: string
        headers:
          title: Headers
          type: array
          items:
            type: object
        details:
          title: Details
          type: array
          items:
            $ref: '#/components/schemas/LedgerDetailsTemplateResponse'
        footers:
          title: Footers
          type: array
          items:
            type: object
      description: Ledger Template schema (Response)
    ListAllE2EMessagingResponse:
      title: ListAllE2EMessagingResponse
      required:
        - result_set
        - e2e_messages
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        e2e_messages:
          title: E2E Messages
          type: array
          items:
            $ref: '#/components/schemas/E2EMessagingResponse'
      description: List All E2E Messaging schema (Response)
    ListAllFilesResponse:
      title: ListAllFilesResponse
      required:
        - result_set
        - files
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        files:
          title: Files
          type: array
          items:
            $ref: '#/components/schemas/FileResponse'
      description: List All Files schema (Response)
    ListAllLedgerDetailsDataResponse:
      title: ListAllLedgerDetailsDataResponse
      required:
        - result_set
        - details_data
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        details_data:
          title: Details Data
          type: array
          items:
            $ref: '#/components/schemas/LedgerDetailsDataListAllResponse'
      description: List All Ledger Details Data schema (Response)
    ListAllLedgerHistoryResponse:
      title: ListAllLedgerHistoryResponse
      required:
        - result_set
        - ledgers
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        ledgers:
          title: Ledgers
          type: array
          items:
            $ref: '#/components/schemas/LedgerResponse'
      description: List All Ledger History schema (Response)
    ListAllLockEventsResponse:
      title: ListAllLockEventsResponse
      required:
        - result_set
        - events
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        events:
          title: Events
          type: array
          items:
            $ref: '#/components/schemas/LockEvent'
          description: Lock/Unlock event list
      description: List All Lock/Unlock events (Response)
    ListAllLockEventsSortItem:
      title: ListAllLockEventsSortItem
      enum:
        - token_address
        - lock_address
        - recipient_address
        - value
        - block_timestamp
      type: string
      description: An enumeration.
    ListAllLockedPositionResponse:
      title: ListAllLockedPositionResponse
      required:
        - result_set
        - locked_positions
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        locked_positions:
          title: Locked Positions
          type: array
          items:
            $ref: '#/components/schemas/LockedPosition'
          description: Locked position list
      description: List All Locked Position schema (Response)
    ListAllNotificationsResponse:
      title: ListAllNotificationsResponse
      required:
        - result_set
        - notifications
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        notifications:
          title: Notifications
          type: array
          items:
            $ref: '#/components/schemas/NotificationsListResponse'
      description: List All Notifications schema (Response)
    ListAllPositionResponse:
      title: ListAllPositionResponse
      required:
        - result_set
        - positions
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        positions:
          title: Positions
          type: array
          items:
            $ref: '#/components/schemas/Position'
          description: Position list
      description: List All Position schema (Response)
    ListAllTokenHolderCollectionsResponse:
      title: ListAllTokenHolderCollectionsResponse
      required:
        - result_set
        - collections
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        collections:
          title: Collections
          type: array
          items:
            $ref: '#/components/schemas/RetrieveTokenHolderCollectionResponse'
      description: List All Token Holders Collections schema (RESPONSE)
    ListAllTokenLockEventsResponse:
      title: ListAllTokenLockEventsResponse
      required:
        - result_set
        - events
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        events:
          title: Events
          type: array
          items:
            $ref: '#/components/schemas/LockEvent'
          description: Lock/Unlock event list
      description: List All Lock/Unlock events (Response)
    ListAllTokenLockEventsSortItem:
      title: ListAllTokenLockEventsSortItem
      enum:
        - account_address
        - lock_address
        - recipient_address
        - value
        - block_timestamp
      type: string
      description: An enumeration.
    ListBatchIssueRedeemUploadResponse:
      title: ListBatchIssueRedeemUploadResponse
      required:
        - result_set
        - uploads
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        uploads:
          title: Uploads
          type: array
          items:
            $ref: '#/components/schemas/BatchIssueRedeemUpload'
      description: List All Batch issue/redeem Upload(RESPONSE)
    ListBatchRegisterPersonalInfoUploadResponse:
      title: ListBatchRegisterPersonalInfoUploadResponse
      required:
        - result_set
        - uploads
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        uploads:
          title: Uploads
          type: array
          items:
            $ref: '#/components/schemas/BatchRegisterPersonalInfoUploadResponse'
      description: List All Batch Register PersonalInfo Upload (Response)
    ListTokenHistorySortItem:
      title: ListTokenHistorySortItem
      enum:
        - created
        - operation_category
      type: string
      description: Sort item of token history
    ListTokenOperationLogHistoryResponse:
      title: ListTokenOperationLogHistoryResponse
      required:
        - result_set
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        history:
          title: History
          type: array
          items:
            $ref: '#/components/schemas/TokenOperationLogResponse'
          description: token update histories
          default: []
    ListTransferHistorySortItem:
      title: ListTransferHistorySortItem
      enum:
        - block_timestamp
        - from_address
        - to_address
        - amount
      type: string
      description: An enumeration.
    LockEvent:
      title: LockEvent
      required:
        - category
        - transaction_hash
        - issuer_address
        - token_address
        - token_type
        - token_name
        - lock_address
        - account_address
        - value
        - data
        - block_timestamp
      type: object
      properties:
        category:
          allOf:
            - $ref: '#/components/schemas/LockEventCategory'
          description: Event category
        transaction_hash:
          title: Transaction Hash
          type: string
          description: Transaction hash
        msg_sender:
          title: Msg Sender
          type: string
          description: Message sender
          nullable: true
        issuer_address:
          title: Issuer Address
          type: string
          description: Issuer address
        token_address:
          title: Token Address
          type: string
          description: Token address
        token_type:
          allOf:
            - $ref: '#/components/schemas/TokenType'
          description: Token type
        token_name:
          title: Token Name
          type: string
          description: Token name
        lock_address:
          title: Lock Address
          type: string
          description: Lock address
        account_address:
          title: Account Address
          type: string
          description: Account address
        recipient_address:
          title: Recipient Address
          type: string
          description: Recipient address
        value:
          title: Value
          type: integer
          description: Lock/Unlock amount
        data:
          title: Data
          type: object
          description: Message at lock/unlock
        block_timestamp:
          title: Block Timestamp
          type: string
          description: block_timestamp when Lock log was emitted
    LockEventCategory:
      title: LockEventCategory
      enum:
        - Lock
        - Unlock
      type: string
      description: An enumeration.
    LockInfoMetaInfo:
      title: LockInfoMetaInfo
      required:
        - token_address
        - token_type
        - lock_address
        - account_address
        - value
        - data
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
        lock_address:
          title: Lock Address
          type: string
        account_address:
          title: Account Address
          type: string
        value:
          title: Value
          type: integer
        data:
          title: Data
          type: object
    LockInfoNotification:
      title: LockInfoNotification
      required:
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      type: object
      properties:
        notice_id:
          title: Notice Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        priority:
          title: Priority
          type: integer
        notice_code:
          title: Notice Code
          maximum: 0
          minimum: 0
          type: integer
          description: |2
             - 0: Balance is locked
        created:
          title: Created
          type: string
        notice_type:
          title: Notice Type
          enum:
            - LockInfo
          type: string
        metainfo:
          $ref: '#/components/schemas/LockInfoMetaInfo'
    LockedPosition:
      title: LockedPosition
      required:
        - issuer_address
        - token_address
        - token_type
        - token_name
        - lock_address
        - locked
      type: object
      properties:
        issuer_address:
          title: Issuer Address
          type: string
          description: Issuer address
        token_address:
          title: Token Address
          type: string
          description: Token address
        token_type:
          allOf:
            - $ref: '#/components/schemas/TokenType'
          description: Token type
        token_name:
          title: Token Name
          type: string
          description: Token name
        lock_address:
          title: Lock Address
          type: string
          description: Lock address
        locked:
          title: Locked
          type: integer
          description: Locked amount
      description: Locked Position
    NotificationsListResponse:
      title: NotificationsListResponse
      anyOf:
        - $ref: '#/components/schemas/IssueErrorNotification'
        - $ref: '#/components/schemas/BulkTransferErrorNotification'
        - $ref: '#/components/schemas/ScheduleEventErrorNotification'
        - $ref: '#/components/schemas/TransferApprovalInfoNotification'
        - $ref: '#/components/schemas/CreateLedgerInfoNotification'
        - $ref: '#/components/schemas/BatchRegisterPersonalInfoErrorNotification'
        - $ref: '#/components/schemas/BatchIssueRedeemProcessedNotification'
        - $ref: '#/components/schemas/LockInfoNotification'
        - $ref: '#/components/schemas/UnlockInfoNotification'
      description: Notifications List schema (Response)
    Position:
      title: Position
      required:
        - issuer_address
        - token_address
        - token_type
        - token_name
        - balance
        - exchange_balance
        - exchange_commitment
        - pending_transfer
        - locked
      type: object
      properties:
        issuer_address:
          title: Issuer Address
          type: string
          description: Issuer address
        token_address:
          title: Token Address
          type: string
          description: Token address
        token_type:
          allOf:
            - $ref: '#/components/schemas/TokenType'
          description: Token type
        token_name:
          title: Token Name
          type: string
          description: Token name
        balance:
          title: Balance
          type: integer
          description: Balance
        exchange_balance:
          title: Exchange Balance
          type: integer
          description: Balance on the exchange contract
        exchange_commitment:
          title: Exchange Commitment
          type: integer
          description: Commitment on the exchange contract
        pending_transfer:
          title: Pending Transfer
          type: integer
          description: Pending transfer amount
        locked:
          title: Locked
          type: integer
          description: Total locked amount
      description: Position
    PositionResponse:
      $ref: '#/components/schemas/Position'
      title: PositionResponse
      description: Position schema (Response)
    RegisterPersonalInfoRequest:
      title: RegisterPersonalInfoRequest
      required:
        - account_address
        - key_manager
      type: object
      properties:
        name:
          title: Name
          type: string
        postal_code:
          title: Postal Code
          type: string
        address:
          title: Address
          type: string
        email:
          title: Email
          type: string
        birth:
          title: Birth
          type: string
        is_corporate:
          title: Is Corporate
          type: boolean
        tax_category:
          title: Tax Category
          type: integer
        account_address:
          title: Account Address
          type: string
        key_manager:
          title: Key Manager
          type: string
      description: Register Personal Information schema (REQUEST)
    ResponseLimitExceededErrorCode:
      title: ResponseLimitExceededErrorCode
      enum:
        - 4
      description: An enumeration.
    ResponseLimitExceededErrorMetainfo:
      title: ResponseLimitExceededErrorMetainfo
      required:
        - code
        - title
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ResponseLimitExceededErrorCode'
          example: 4
        title:
          title: Title
          type: string
          example: ResponseLimitExceededError
    ResponseLimitExceededErrorResponse:
      title: ResponseLimitExceededErrorResponse
      required:
        - meta
        - detail
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ResponseLimitExceededErrorMetainfo'
        detail:
          title: Detail
          type: string
    ResultSet:
      title: ResultSet
      type: object
      properties:
        count:
          title: Count
          type: integer
        offset:
          title: Offset
          type: integer
        limit:
          title: Limit
          type: integer
        total:
          title: Total
          type: integer
      description: result set for pagination
    RetrieveLedgerDetailsDataHistoryResponse:
      title: RetrieveLedgerDetailsDataHistoryResponse
      required:
        - amount
        - price
        - balance
        - acquisition_date
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
        name:
          title: Name
          type: string
        address:
          title: Address
          type: string
        amount:
          title: Amount
          type: integer
        price:
          title: Price
          type: integer
        balance:
          title: Balance
          type: integer
        acquisition_date:
          title: Acquisition Date
          type: string
      description: Retrieve Ledger Details Data History schema (Response)
    RetrieveLedgerDetailsDataResponse:
      title: RetrieveLedgerDetailsDataResponse
      required:
        - amount
        - price
        - balance
        - acquisition_date
      type: object
      properties:
        name:
          title: Name
          type: string
        address:
          title: Address
          type: string
        amount:
          title: Amount
          type: integer
        price:
          title: Price
          type: integer
        balance:
          title: Balance
          type: integer
        acquisition_date:
          title: Acquisition Date
          type: string
      description: Retrieve Ledger Details Data schema (Response)
    RetrieveLedgerDetailsHistoryResponse:
      title: RetrieveLedgerDetailsHistoryResponse
      required:
        - token_detail_type
        - data
      type: object
      properties:
        token_detail_type:
          title: Token Detail Type
          type: string
        headers:
          title: Headers
          type: array
          items:
            type: object
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/RetrieveLedgerDetailsDataHistoryResponse'
        footers:
          title: Footers
          type: array
          items:
            type: object
      description: Retrieve Ledger Details History schema (Response)
    RetrieveLedgerHistoryResponse:
      title: RetrieveLedgerHistoryResponse
      required:
        - created
        - token_name
        - details
      type: object
      properties:
        created:
          title: Created
          type: string
        token_name:
          title: Token Name
          type: string
        headers:
          title: Headers
          type: array
          items:
            type: object
        details:
          title: Details
          type: array
          items:
            $ref: '#/components/schemas/RetrieveLedgerDetailsHistoryResponse'
        footers:
          title: Footers
          type: array
          items:
            type: object
      description: Retrieve Ledger History schema (Response)
    RetrieveTokenHolderCollectionResponse:
      title: RetrieveTokenHolderCollectionResponse
      required:
        - token_address
        - block_number
        - list_id
        - status
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        block_number:
          title: Block Number
          type: integer
        list_id:
          title: List Id
          type: string
          description: UUID v4 required
        status:
          $ref: '#/components/schemas/TokenHolderBatchStatus'
      description: Retrieve Token Holders Collection schema (RESPONSE)
    RetrieveTokenHoldersListResponse:
      title: RetrieveTokenHoldersListResponse
      required:
        - status
        - holders
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TokenHolderBatchStatus'
        holders:
          title: Holders
          type: array
          items:
            $ref: '#/components/schemas/TokenHoldersCollectionHolder'
      description: Retrieve Token Holders List schema (RESPONSE)
      example:
        status: done
        holders:
          - account_address: '0x85a8b8887a4bD76859751b10C8aC8EC5f3aA1bDB'
            hold_balance: 30000
            locked_balance: 0
    ScheduleEventErrorMetaInfo:
      title: ScheduleEventErrorMetaInfo
      required:
        - scheduled_event_id
        - token_type
      type: object
      properties:
        scheduled_event_id:
          title: Scheduled Event Id
          type: string
        token_address:
          title: Token Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
    ScheduleEventErrorNotification:
      title: ScheduleEventErrorNotification
      required:
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      type: object
      properties:
        notice_id:
          title: Notice Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        priority:
          title: Priority
          type: integer
        notice_code:
          title: Notice Code
          maximum: 2
          minimum: 0
          type: integer
          description: |2
             - 0: Issuer does not exist
             - 1: Could not get the private key of the issuer
             - 2: Failed to send transaction
        created:
          title: Created
          type: string
        notice_type:
          title: Notice Type
          enum:
            - ScheduleEventError
          type: string
        metainfo:
          $ref: '#/components/schemas/ScheduleEventErrorMetaInfo'
    ScheduledEventIdResponse:
      title: ScheduledEventIdResponse
      required:
        - scheduled_event_id
      type: object
      properties:
        scheduled_event_id:
          title: Scheduled Event Id
          type: string
      description: scheduled event (Response)
    ScheduledEventResponse:
      title: ScheduledEventResponse
      required:
        - scheduled_event_id
        - token_address
        - token_type
        - scheduled_datetime
        - event_type
        - status
        - data
        - created
      type: object
      properties:
        scheduled_event_id:
          title: Scheduled Event Id
          type: string
        token_address:
          title: Token Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
        scheduled_datetime:
          title: Scheduled Datetime
          type: string
          format: date-time
        event_type:
          $ref: '#/components/schemas/ScheduledEventType'
        status:
          title: Status
          type: integer
        data:
          title: Data
          type: object
        created:
          title: Created
          type: string
      description: scheduled event (Response)
    ScheduledEventType:
      title: ScheduledEventType
      enum:
        - Update
      type: string
      description: An enumeration.
    SendTransactionErrorCode:
      title: SendTransactionErrorCode
      enum:
        - 2
      description: An enumeration.
    SendTransactionErrorMetainfo:
      title: SendTransactionErrorMetainfo
      required:
        - code
        - title
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/SendTransactionErrorCode'
          example: 2
        title:
          title: Title
          type: string
          example: SendTransactionError
    SendTransactionErrorResponse:
      title: SendTransactionErrorResponse
      required:
        - meta
        - detail
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/SendTransactionErrorMetainfo'
        detail:
          title: Detail
          type: string
    ServiceUnavailableErrorCode:
      title: ServiceUnavailableErrorCode
      enum:
        - 1
      description: An enumeration.
    ServiceUnavailableErrorMetainfo:
      title: ServiceUnavailableErrorMetainfo
      required:
        - code
        - title
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/ServiceUnavailableErrorCode'
          example: 1
        title:
          title: Title
          type: string
          example: ServiceUnavailableError
    ServiceUnavailableErrorResponse:
      title: ServiceUnavailableErrorResponse
      required:
        - meta
        - detail
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ServiceUnavailableErrorMetainfo'
        detail:
          title: Detail
          type: string
    SortOrder:
      title: SortOrder
      enum:
        - 0
        - 1
      type: integer
      description: An enumeration.
    TokenAddressResponse:
      title: TokenAddressResponse
      required:
        - token_address
        - token_status
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        token_status:
          title: Token Status
          type: integer
      description: token address
    TokenHolderBatchStatus:
      title: TokenHolderBatchStatus
      enum:
        - pending
        - done
        - failed
      type: string
      description: An enumeration.
    TokenHoldersCollectionHolder:
      title: TokenHoldersCollectionHolder
      required:
        - account_address
        - hold_balance
        - locked_balance
      type: object
      properties:
        account_address:
          title: Account Address
          type: string
          description: Account address of token holder.
        hold_balance:
          title: Hold Balance
          type: integer
          description: Amount of balance.This includes balance/pending_transfer/exchange_balance/exchange_commitment.
        locked_balance:
          title: Locked Balance
          type: integer
          description: Amount of locked balance.
    TokenOperationLogResponse:
      title: TokenOperationLogResponse
      required:
        - modified_contents
        - operation_category
        - created
      type: object
      properties:
        original_contents:
          title: Original Contents
          type: object
          description: original attributes before update
          nullable: true
        modified_contents:
          title: Modified Contents
          type: object
          description: update attributes
        operation_category:
          $ref: '#/components/schemas/TokenUpdateOperationCategory'
        created:
          title: Created
          type: string
          format: date-time
    TokenType:
      title: TokenType
      enum:
        - IbetStraightBond
        - IbetShare
      type: string
      description: An enumeration.
    TokenUpdateOperationCategory:
      title: TokenUpdateOperationCategory
      enum:
        - Issue
        - Update
      type: string
      description: Operation category of update token
    TransferApprovalHistoryResponse:
      title: TransferApprovalHistoryResponse
      required:
        - result_set
        - transfer_approval_history
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        transfer_approval_history:
          title: Transfer Approval History
          type: array
          items:
            $ref: '#/components/schemas/TransferApprovalTokenResponse'
      description: transfer approval token history
    TransferApprovalInfoMetaInfo:
      title: TransferApprovalInfoMetaInfo
      required:
        - id
        - token_address
      type: object
      properties:
        id:
          title: Id
          type: integer
        token_address:
          title: Token Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
    TransferApprovalInfoNotification:
      title: TransferApprovalInfoNotification
      required:
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      type: object
      properties:
        notice_id:
          title: Notice Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        priority:
          title: Priority
          type: integer
        notice_code:
          title: Notice Code
          maximum: 3
          minimum: 0
          type: integer
          description: |2
             - 0: Apply for transfer
             - 1: Cancel transfer
             - 2: Approve transfer
             - 3: Escrow finished (Only occurs in security token escrow)
        created:
          title: Created
          type: string
        notice_type:
          title: Notice Type
          enum:
            - TransferApprovalInfo
          type: string
        metainfo:
          $ref: '#/components/schemas/TransferApprovalInfoMetaInfo'
    TransferApprovalResponse:
      title: TransferApprovalResponse
      required:
        - issuer_address
        - token_address
        - application_count
        - unapproved_count
        - escrow_finished_count
        - transferred_count
        - canceled_count
      type: object
      properties:
        issuer_address:
          title: Issuer Address
          type: string
        token_address:
          title: Token Address
          type: string
        application_count:
          title: Application Count
          type: integer
        unapproved_count:
          title: Unapproved Count
          type: integer
        escrow_finished_count:
          title: Escrow Finished Count
          type: integer
        transferred_count:
          title: Transferred Count
          type: integer
        canceled_count:
          title: Canceled Count
          type: integer
      description: transfer approval data
    TransferApprovalTokenResponse:
      title: TransferApprovalTokenResponse
      required:
        - id
        - token_address
        - exchange_address
        - application_id
        - from_address
        - to_address
        - amount
        - application_datetime
        - application_blocktimestamp
        - cancelled
        - escrow_finished
        - transfer_approved
        - status
        - issuer_cancelable
      type: object
      properties:
        id:
          title: Id
          type: integer
        token_address:
          title: Token Address
          type: string
        exchange_address:
          title: Exchange Address
          type: string
        application_id:
          title: Application Id
          type: integer
        from_address:
          title: From Address
          type: string
        to_address:
          title: To Address
          type: string
        amount:
          title: Amount
          type: integer
        application_datetime:
          title: Application Datetime
          type: string
        application_blocktimestamp:
          title: Application Blocktimestamp
          type: string
        approval_datetime:
          title: Approval Datetime
          type: string
        approval_blocktimestamp:
          title: Approval Blocktimestamp
          type: string
        cancellation_blocktimestamp:
          title: Cancellation Blocktimestamp
          type: string
        cancelled:
          title: Cancelled
          type: boolean
        escrow_finished:
          title: Escrow Finished
          type: boolean
        transfer_approved:
          title: Transfer Approved
          type: boolean
        status:
          title: Status
          type: integer
        issuer_cancelable:
          title: Issuer Cancelable
          type: boolean
      description: transfer approval token data
    TransferApprovalsResponse:
      title: TransferApprovalsResponse
      required:
        - result_set
        - transfer_approvals
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        transfer_approvals:
          title: Transfer Approvals
          type: array
          items:
            $ref: '#/components/schemas/TransferApprovalResponse'
      description: transfer approvals
    TransferHistoryResponse:
      title: TransferHistoryResponse
      required:
        - result_set
        - transfer_history
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        transfer_history:
          title: Transfer History
          type: array
          items:
            $ref: '#/components/schemas/TransferResponse'
      description: transfer history
    TransferResponse:
      title: TransferResponse
      required:
        - transaction_hash
        - token_address
        - from_address
        - to_address
        - amount
        - source_event
        - block_timestamp
      type: object
      properties:
        transaction_hash:
          title: Transaction Hash
          type: string
        token_address:
          title: Token Address
          type: string
        from_address:
          title: From Address
          type: string
        to_address:
          title: To Address
          type: string
        amount:
          title: Amount
          type: integer
        source_event:
          allOf:
            - $ref: '#/components/schemas/TransferSourceEventType'
          description: Source Event
        data:
          title: Data
          type: object
          description: Event data
        block_timestamp:
          title: Block Timestamp
          type: string
      description: transfer data
    TransferSourceEventType:
      title: TransferSourceEventType
      enum:
        - Transfer
        - Unlock
      type: string
      description: An enumeration.
    TxData:
      title: TxData
      required:
        - hash
        - block_hash
        - block_number
        - transaction_index
        - from_address
      type: object
      properties:
        hash:
          title: Hash
          type: string
          description: Transaction hash
        block_hash:
          title: Block Hash
          type: string
        block_number:
          title: Block Number
          minimum: 0
          type: integer
        transaction_index:
          title: Transaction Index
          minimum: 0
          type: integer
        from_address:
          title: From Address
          type: string
        to_address:
          title: To Address
          type: string
    TxDataDetail:
      title: TxDataDetail
      required:
        - hash
        - block_hash
        - block_number
        - transaction_index
        - from_address
        - gas
        - gas_price
        - value
        - nonce
      type: object
      properties:
        hash:
          title: Hash
          type: string
          description: Transaction hash
        block_hash:
          title: Block Hash
          type: string
        block_number:
          title: Block Number
          minimum: 0
          type: integer
        transaction_index:
          title: Transaction Index
          minimum: 0
          type: integer
        from_address:
          title: From Address
          type: string
        to_address:
          title: To Address
          type: string
        contract_name:
          title: Contract Name
          type: string
        contract_function:
          title: Contract Function
          type: string
        contract_parameters:
          title: Contract Parameters
          type: object
        gas:
          title: Gas
          minimum: 0
          type: integer
        gas_price:
          title: Gas Price
          minimum: 0
          type: integer
        value:
          title: Value
          minimum: 0
          type: integer
        nonce:
          title: Nonce
          minimum: 0
          type: integer
    TxDataListResponse:
      title: TxDataListResponse
      required:
        - result_set
        - tx_data
      type: object
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tx_data:
          title: Tx Data
          type: array
          items:
            $ref: '#/components/schemas/TxData'
    TxDataResponse:
      $ref: '#/components/schemas/TxDataDetail'
      title: TxDataResponse
    UnlockInfoMetaInfo:
      title: UnlockInfoMetaInfo
      required:
        - token_address
        - token_type
        - lock_address
        - account_address
        - recipient_address
        - value
        - data
      type: object
      properties:
        token_address:
          title: Token Address
          type: string
        token_type:
          $ref: '#/components/schemas/TokenType'
        lock_address:
          title: Lock Address
          type: string
        account_address:
          title: Account Address
          type: string
        recipient_address:
          title: Recipient Address
          type: string
        value:
          title: Value
          type: integer
        data:
          title: Data
          type: object
    UnlockInfoNotification:
      title: UnlockInfoNotification
      required:
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      type: object
      properties:
        notice_id:
          title: Notice Id
          type: string
        issuer_address:
          title: Issuer Address
          type: string
        priority:
          title: Priority
          type: integer
        notice_code:
          title: Notice Code
          maximum: 0
          minimum: 0
          type: integer
          description: |2
             - 0: Balance is unlocked
        created:
          title: Created
          type: string
        notice_type:
          title: Notice Type
          enum:
            - UnlockInfo
          type: string
        metainfo:
          $ref: '#/components/schemas/UnlockInfoMetaInfo'
    UpdateTransferApprovalOperationType:
      title: UpdateTransferApprovalOperationType
      enum:
        - approve
        - cancel
      type: string
      description: An enumeration.
    UpdateTransferApprovalRequest:
      title: UpdateTransferApprovalRequest
      required:
        - operation_type
      type: object
      properties:
        operation_type:
          $ref: '#/components/schemas/UpdateTransferApprovalOperationType'
      description: Update Transfer Approval schema (Request)
    UploadFileRequest:
      title: UploadFileRequest
      required:
        - file_name
        - content
      type: object
      properties:
        relation:
          title: Relation
          maxLength: 50
          type: string
        file_name:
          title: File Name
          maxLength: 256
          type: string
        content:
          title: Content
          type: string
          description: |-
            Base64-encoded content.
            Max length of binary data before encoding is 100000000.
        description:
          title: Description
          maxLength: 1000
          type: string
        label:
          title: Label
          maxLength: 200
          type: string
      description: Upload File schema (Request)
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
tags:
  - name: root
    description: ''
  - name: common
    description: Common functions
  - name: account
    description: Issuer account management
  - name: notification
    description: Notifications for accounts
  - name: token_common
    description: Common functions for tokens
  - name: bond
    description: Bond token management
  - name: share
    description: Share token management
  - name: utility
    description: Utility functions
  - name: messaging
    description: Messaging functions with external systems
  - name: blockchain_explorer
    description: Blockchain explorer
