openapi: 3.1.0
info:
  title: ibet Prime
  description: Security token management system for ibet network
  version: '25.9'
paths:
  /:
    get:
      tags:
        - root
      summary: Root
      operationId: root__get
      responses:
        '200':
          description: Successful Response
  /e2ee:
    get:
      tags:
        - common
      summary: E2E Encryption Key
      description: Get E2EE public key
      operationId: GetE2EEncryptionKey
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EEResponse'
  /healthcheck:
    get:
      tags:
        - common
      summary: Service Health Check
      description: |-
        Service health check

        Check following services are available:
        - Database
        - ibet Node
        - Ethereum Node (if IbetWST feature is enabled)
        - E2EE Setting
      operationId: ServiceHealthCheck
      responses:
        '200':
          description: Successful Response
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /block_number:
    get:
      tags:
        - common
      summary: Get Latest Block Number
      description: Get the latest block number
      operationId: GetLatestBlockNumber
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockNumberResponse'
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /accounts:
    get:
      tags:
        - account
      summary: List All Issuers
      description: List all issuer accounts
      operationId: ListAllIssuers
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountResponse'
                type: array
                title: Response Listallissuers
    post:
      tags:
        - account
      summary: Create Issuer Key
      description: Create Issuer Key
      operationId: CreateIssuerKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateKeyRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /accounts/{issuer_address}:
    get:
      tags:
        - account
      summary: Retrieve Issuer
      description: Retrieve an issuer account
      operationId: RetrieveIssuer
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    delete:
      tags:
        - account
      summary: Delete Issuer
      description: Logically delete an issuer account
      operationId: DeleteIssuer
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /accounts/{issuer_address}/eoa_password:
    post:
      tags:
        - account
      summary: Change Issuer Eoa Password
      description: Change Issuer's EOA-Password
      operationId: ChangeIssuerEOAPassword
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountChangeEOAPasswordRequest'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /accounts/{issuer_address}/rsakey:
    post:
      tags:
        - account
      summary: Create Issuer Rsa Key
      description: Create issuer's RSA key
      operationId: CreateIssuerRSAKey
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGenerateRsaKeyRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /accounts/{issuer_address}/rsa_passphrase:
    post:
      tags:
        - account
      summary: Change Issuer Rsa Passphrase
      description: Change issuer's RSA-Passphrase
      operationId: ChangeIssuerRSAPassphrase
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountChangeRSAPassphraseRequest'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /accounts/{issuer_address}/auth_token:
    post:
      tags:
        - account
      summary: Generate Issuer Auth Token
      description: Generate issuer's auth token
      operationId: GenerateIssuerAuthToken
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAuthTokenRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAuthTokenResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthTokenAlreadyExistsErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 Generateissuerauthtoken
    delete:
      tags:
        - account
      summary: Delete Issuer Auth Token
      description: Delete issuer's auth token
      operationId: DeleteIssuerAuthToken
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorResponse'
  /accounts/{issuer_address}/child_accounts:
    post:
      tags:
        - account
      summary: Create Child Account
      description: Create the child account
      operationId: CreateChildAccount
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateChildAccountRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChildAccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/OperationNotPermittedForOlderIssuersResponse'
                  - $ref: '#/components/schemas/PersonalInfoExceedsSizeLimitResponse'
                title: Response 400 Createchildaccount
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
    get:
      tags:
        - account
      summary: List All Child Account
      description: List all child accounts
      operationId: ListAllChildAccount
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: child_account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Child account address (partial match)
            title: Child Account Address
          description: Child account address (partial match)
        - name: name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Child account name (partial match)
            title: Name
          description: Child account name (partial match)
        - name: created_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Personal information created datetime (From)
            title: Created From
          description: Personal information created datetime (From)
        - name: created_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Personal information created datetime (To)
            title: Created To
          description: Personal information created datetime (To)
        - name: modified_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Personal information modified datetime (From)
            title: Modified From
          description: Personal information modified datetime (From)
        - name: modified_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Personal information modified datetime (To)
            title: Modified To
          description: Personal information modified datetime (To)
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListAllChildAccountSortItem'
              - type: 'null'
            description: Sort item
            default: child_account_index
            title: Sort Item
          description: Sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllChildAccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /accounts/{issuer_address}/child_accounts/batch:
    post:
      tags:
        - account
      summary: Create Child Account In Batch
      operationId: CreateChildAccountInBatch
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateChildAccountRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateChildAccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/BatchPersonalInfoRegistrationValidationErrorResponse'
                  - $ref: '#/components/schemas/OperationNotPermittedForOlderIssuersResponse'
                title: Response 400 Createchildaccountinbatch
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponse'
  /accounts/{issuer_address}/child_accounts/{child_account_index}:
    get:
      tags:
        - account
      summary: Retrieve Child Account
      description: Retrieve the child account
      operationId: RetrieveChildAccount
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
        - name: child_account_index
          in: path
          required: true
          schema:
            type: integer
            title: Child Account Index
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildAccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    post:
      tags:
        - account
      summary: Update Child Account
      description: Update the personal information of the child account
      operationId: UpdateChildAccount
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
        - name: child_account_index
          in: path
          required: true
          schema:
            type: integer
            title: Child Account Index
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateChildAccountRequest'
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalInfoExceedsSizeLimitResponse'
    delete:
      tags:
        - account
      summary: Delete Child Account
      description: Delete the child account and its off-chain personal 
        information
      operationId: DeleteChildAccount
      parameters:
        - name: issuer_address
          in: path
          required: true
          schema:
            type: string
            title: Issuer Address
        - name: child_account_index
          in: path
          required: true
          schema:
            type: integer
            title: Child Account Index
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /bond/tokens:
    post:
      tags:
        - bond
      summary: Issue Bond Token
      description: Issue ibetStraightBond token
      operationId: IssueBondToken
      parameters:
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAddressResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Issuebondtoken
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractRevertErrorResponse'
    get:
      tags:
        - bond
      summary: List All Bond Tokens
      description: List all issued bond tokens
      operationId: ListAllBondTokens
      parameters:
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IbetStraightBondResponse'
                title: Response Listallbondtokens
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/tokens/{token_address}:
    get:
      tags:
        - bond
      summary: Retrieve Bond Token
      description: Retrieve the bond token
      operationId: RetrieveBondToken
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetStraightBondResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - bond
      summary: Update Bond Token
      description: Update the bond token
      operationId: UpdateBondToken
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondUpdate'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Updatebondtoken
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/OperationNotSupportedVersionErrorResponse'
                title: Response 400 Updatebondtoken
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /bond/tokens/{token_address}/history:
    get:
      tags:
        - bond
      summary: List Bond Operation Log History
      description: List all bond token operation log history
      operationId: ListBondOperationLogHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: modified_contents
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Modified contents query
            title: Modified Contents
          description: Modified contents query
        - name: operation_category
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TokenUpdateOperationCategory'
              - type: 'null'
            description: Trigger of change
            title: Operation Category
          description: Trigger of change
        - name: created_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Created datetime (From)
            title: Created From
          description: Created datetime (From)
        - name: created_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Created datetime (To)
            title: Created To
          description: Created datetime (To)
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListTokenHistorySortItem'
              - type: 'null'
            description: Sort item
            default: created
            title: Sort Item
          description: Sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokenOperationLogHistoryResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /bond/tokens/{token_address}/additional_issue:
    get:
      tags:
        - bond
      summary: List Bond Additional Issuance History
      description: List bond additional issuance history
      operationId: ListBondAdditionalIssuanceHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/IssueRedeemSortItem'
              - type: 'null'
            default: block_timestamp
            title: Sort Item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueRedeemHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - bond
      summary: Issue Additional Bond
      description: Issue additional bonds
      operationId: IssueAdditionalBond
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondAdditionalIssue'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Issueadditionalbond
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 Issueadditionalbond
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /bond/tokens/{token_address}/additional_issue/batch:
    get:
      tags:
        - bond
      summary: List All Batch Additional Bond Issue
      description: List all bond batch additional issues
      operationId: ListAllBatchAdditionalBondIssue
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: processed
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Process status
            title: Processed
          description: Process status
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchIssueRedeemUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - bond
      summary: Issue Additional Bonds In Batch
      description: Issue additional bonds in batch
      operationId: IssueAdditionalBondsInBatch
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IbetStraightBondAdditionalIssue'
              title: Data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchIssueRedeemUploadIdResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Issueadditionalbondsinbatch
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /bond/tokens/{token_address}/additional_issue/batch/{batch_id}:
    get:
      tags:
        - bond
      summary: Retrieve Batch Additional Bond Issue Status
      description: Retrieve detailed status of additional bond batch issuance
      operationId: RetrieveBatchAdditionalBondIssueStatus
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: batch_id
          in: path
          required: true
          schema:
            type: string
            title: Batch Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchIssueRedeemResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /bond/tokens/{token_address}/redeem:
    get:
      tags:
        - bond
      summary: List Bond Redemption History
      description: List the history of bond redemptions
      operationId: ListBondRedemptionHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/IssueRedeemSortItem'
              - type: 'null'
            default: block_timestamp
            title: Sort Item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueRedeemHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - bond
      summary: Redeem Bond
      description: Redeem bond token
      operationId: RedeemBond
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondRedeem'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Redeembond
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 Redeembond
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /bond/tokens/{token_address}/redeem/batch:
    get:
      tags:
        - bond
      summary: List All Batch Bond Redemption
      description: List all batch bond redemptions
      operationId: ListAllBatchBondRedemption
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: processed
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Process status
            title: Processed
          description: Process status
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchIssueRedeemUploadResponseWithResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - bond
      summary: Redeem Bonds In Batch
      description: Redeem bonds in batch
      operationId: RedeemBondsInBatch
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IbetStraightBondRedeem'
              title: Data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchIssueRedeemUploadIdResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Redeembondsinbatch
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /bond/tokens/{token_address}/redeem/batch/{batch_id}:
    get:
      tags:
        - bond
      summary: Retrieve Batch Bond Redemption Status
      description: Retrieve detailed status of batch bond redemption
      operationId: RetrieveBatchBondRedemptionStatus
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: batch_id
          in: path
          required: true
          schema:
            type: string
            title: Batch Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchIssueRedeemResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /bond/tokens/{token_address}/scheduled_events:
    get:
      tags:
        - bond
      summary: List All Scheduled Bond Token Update Events
      description: List all scheduled bond token update events
      operationId: ListAllScheduledBondTokenUpdateEvents
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScheduledEventResponse'
                title: Response Listallscheduledbondtokenupdateevents
    post:
      tags:
        - bond
      summary: Schedule Bond Token Update Event
      description: Schedule a new bond token update event
      operationId: ScheduleBondTokenUpdateEvent
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondScheduledUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventIdResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Schedulebondtokenupdateevent
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/OperationNotSupportedVersionErrorResponse'
                title: Response 400 Schedulebondtokenupdateevent
  /bond/tokens/{token_address}/scheduled_events/batch:
    post:
      tags:
        - bond
      summary: Schedule Bond Token Update Events In Batch
      description: Schedule bond token update events in batch
      operationId: ScheduleBondTokenUpdateEventsInBatch
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IbetStraightBondScheduledUpdate'
              title: Event Data List
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventIdListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Schedulebondtokenupdateeventsinbatch
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/OperationNotSupportedVersionErrorResponse'
                title: Response 400 Schedulebondtokenupdateeventsinbatch
  /bond/tokens/{token_address}/scheduled_events/{scheduled_event_id}:
    get:
      tags:
        - bond
      summary: Retrieve Scheduled Bond Token Update Event
      description: Retrieve a scheduled bond token update event
      operationId: RetrieveScheduledBondTokenUpdateEvent
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: scheduled_event_id
          in: path
          required: true
          schema:
            type: string
            title: Scheduled Event Id
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    delete:
      tags:
        - bond
      summary: Delete Scheduled Bond Token Update Event
      description: Delete a scheduled bond token update event
      operationId: DeleteScheduledBondTokenUpdateEvent
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: scheduled_event_id
          in: path
          required: true
          schema:
            type: string
            title: Scheduled Event Id
        - name: soft_delete
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Soft delete flag
            default: false
            title: Soft Delete
          description: Soft delete flag
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Deletescheduledbondtokenupdateevent
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /bond/tokens/{token_address}/holders:
    get:
      tags:
        - bond
      summary: List All Bond Token Holders
      description: List all bond token holders
      operationId: ListAllBondTokenHolders
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: include_former_holder
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Include Former Holder
        - name: key_manager_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/KeyManagerType'
              - type: 'null'
            description: Key manager type (**this affects total number**)
            title: Key Manager Type
          description: Key manager type (**this affects total number**)
        - name: key_manager
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: key manager(partial match)
            title: Key Manager
          description: key manager(partial match)
        - name: balance
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: Token balance
            title: Balance
          description: Token balance
        - name: balance_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: Search condition of balance(0:equal, 1:greater than or 
              equal, 2:less than or equal）
            default: 0
            title: Balance Operator
          description: Search condition of balance(0:equal, 1:greater than or 
            equal, 2:less than or equal）
        - name: pending_transfer
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: Pending transfer amount
            title: Pending Transfer
          description: Pending transfer amount
        - name: pending_transfer_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: Search condition of pending transfer(0:equal, 1:greater
              than or equal, 2:less than or equal）
            default: 0
            title: Pending Transfer Operator
          description: Search condition of pending transfer(0:equal, 1:greater 
            than or equal, 2:less than or equal）
        - name: locked
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: Locked amount
            title: Locked
          description: Locked amount
        - name: locked_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: search condition of locked amount(0:equal, 1:greater 
              than or equal, 2:less than or equal）
            default: 0
            title: Locked Operator
          description: search condition of locked amount(0:equal, 1:greater than
            or equal, 2:less than or equal）
        - name: balance_and_pending_transfer
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: number of balance plus pending transfer amount
            title: Balance And Pending Transfer
          description: number of balance plus pending transfer amount
        - name: balance_and_pending_transfer_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: search condition of balance plus pending 
              transfer(0:equal, 1:greater than or equal, 2:less than or equal）
            default: 0
            title: Balance And Pending Transfer Operator
          description: search condition of balance plus pending 
            transfer(0:equal, 1:greater than or equal, 2:less than or equal）
        - name: account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: account address(partial match)
            title: Account Address
          description: account address(partial match)
        - name: holder_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: holder name(partial match)
            title: Holder Name
          description: holder name(partial match)
        - name: sort_item
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ListAllHoldersSortItem'
            description: Sort Item
            default: created
          description: Sort Item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HoldersResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /bond/tokens/{token_address}/holders/count:
    get:
      tags:
        - bond
      summary: Count Bond Token Holders
      description: Count the number of bond token holders
      operationId: CountBondTokenHolders
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderCountResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /bond/tokens/{token_address}/holders/{account_address}:
    get:
      tags:
        - bond
      summary: Retrieve Bond Token Holder
      description: Retrieve bond token holder
      operationId: RetrieveBondTokenHolder
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /bond/tokens/{token_address}/holders/{account_address}/holder_extra_info:
    post:
      tags:
        - bond
      summary: Register Bond Token Holder Extra Info
      operationId: RegisterBondTokenHolderExtraInfo
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterHolderExtraInfoRequest'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /bond/tokens/{token_address}/personal_info:
    post:
      tags:
        - bond
      summary: Register Bond Token Holder Personal Info
      description: Register personal information of bond token holders
      operationId: RegisterBondTokenHolderPersonalInfo
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPersonalInfoRequest'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Registerbondtokenholderpersonalinfo
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/PersonalInfoExceedsSizeLimitResponse'
                title: Response 400 Registerbondtokenholderpersonalinfo
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /bond/tokens/{token_address}/personal_info/batch:
    get:
      tags:
        - bond
      summary: List All Bond Token Batch Personal Info Registration
      description: List all personal information batch registration
      operationId: ListAllBondTokenBatchPersonalInfoRegistration
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Status
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchRegisterPersonalInfoUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - bond
      summary: Initiate Bond Token Batch Personal Info Registration
      description: Initiate bond token batch personal information registration
      operationId: InitiateBondTokenBatchPersonalInfoRegistration
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RegisterPersonalInfoRequest'
              title: Personal Info List
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRegisterPersonalInfoUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 
                  Initiatebondtokenbatchpersonalinforegistration
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/BatchPersonalInfoRegistrationValidationErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 
                  Initiatebondtokenbatchpersonalinforegistration
  /bond/tokens/{token_address}/personal_info/batch/{batch_id}:
    get:
      tags:
        - bond
      summary: Retrieve Bond Token Personal Info Batch Registration Status
      description: Retrieve the status of bond token personal information batch 
        registration
      operationId: RetrieveBondTokenPersonalInfoBatchRegistrationStatus
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: batch_id
          in: path
          required: true
          schema:
            type: string
            title: Batch Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchRegisterPersonalInfoResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /bond/tokens/{token_address}/lock_events:
    get:
      tags:
        - bond
      summary: List Bond Token Lock Unlock Events
      description: List all lock/unlock bond token events
      operationId: ListBondTokenLockUnlockEvents
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Account address
            title: Account Address
          description: Account address
        - name: msg_sender
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Msg sender
            title: Msg Sender
          description: Msg sender
        - name: lock_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Lock address
            title: Lock Address
          description: Lock address
        - name: recipient_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Recipient address
            title: Recipient Address
          description: Recipient address
        - name: category
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/LockEventCategory'
              - type: 'null'
            description: Event category
            title: Category
          description: Event category
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListAllTokenLockEventsSortItem'
              - type: 'null'
            description: Sort item
            default: block_timestamp
            title: Sort Item
          description: Sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllTokenLockEventsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/transfers:
    post:
      tags:
        - bond
      summary: Transfer Bond Token Ownership
      description: Transfer bond token ownership
      operationId: TransferBondTokenOwnership
      parameters:
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondTransfer'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Transferbondtokenownership
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 Transferbondtokenownership
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /bond/transfers/{token_address}:
    get:
      tags:
        - bond
      summary: List Bond Token Transfer History
      description: List bond token transfer history
      operationId: ListBondTokenTransferHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: block_timestamp_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Block timestamp (From)
            title: Block Timestamp From
          description: Block timestamp (From)
        - name: block_timestamp_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Block timestamp (To)
            title: Block Timestamp To
          description: Block timestamp (To)
        - name: from_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Transfer source address
            title: From Address
          description: Transfer source address
        - name: to_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Transfer destination address
            title: To Address
          description: Transfer destination address
        - name: from_address_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Name of transfer source address
            title: From Address Name
          description: Name of transfer source address
        - name: to_address_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Name of transfer destination address
            title: To Address Name
          description: Name of transfer destination address
        - name: amount
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: Transfer amount
            title: Amount
          description: Transfer amount
        - name: amount_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: 'Value filter condition(0: equal, 1: greater than, 2: less
              than)'
            default: 0
            title: Amount Operator
          description: 'Value filter condition(0: equal, 1: greater than, 2: less
            than)'
        - name: source_event
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TransferSourceEventType'
              - type: 'null'
            description: Source event of transfer
            title: Source Event
          description: Source event of transfer
        - name: data
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: source event data
            title: Data
          description: source event data
        - name: message
          in: query
          required: false
          schema:
            anyOf:
              - const: garnishment
                type: string
              - const: force_unlock
                type: string
              - const: ibet_wst_bridge
                type: string
              - type: 'null'
            description: message field in source event data
            title: Message
          description: message field in source event data
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListTransferHistorySortItem'
              - type: 'null'
            description: Sort item
            default: block_timestamp
            title: Sort Item
          description: Sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /bond/transfer_approvals:
    get:
      tags:
        - bond
      summary: List All Bond Token Transfer Approval History
      description: List all bond token transfer approval history
      operationId: ListAllBondTokenTransferApprovalHistory
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/transfer_approvals/{token_address}:
    get:
      tags:
        - bond
      summary: List Specific Bond Token Transfer Approval History
      description: List specific bond token transfer approval history
      operationId: ListSpecificBondTokenTransferApprovalHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: from_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Transfer from
            title: From Address
          description: Transfer from
        - name: to_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Transfer to
            title: To Address
          description: Transfer to
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  $ref: '#/components/schemas/TransferApprovalStatus'
              - type: 'null'
            description: 0:unapproved, 1:escrow_finished, 2:transferred, 
              3:canceled
            title: Status
          description: 0:unapproved, 1:escrow_finished, 2:transferred, 
            3:canceled
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListTransferApprovalHistorySortItem'
              - type: 'null'
            default: id
            title: Sort Item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /bond/transfer_approvals/{token_address}/{id}:
    post:
      tags:
        - bond
      summary: Update Bond Token Transfer Approval Status
      description: Update bond token transfer approval status
      operationId: UpdateBondTokenTransferApprovalStatus
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: id
          in: path
          required: true
          schema:
            type: integer
            title: Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransferApprovalRequest'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Updatebondtokentransferapprovalstatus
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/OperationNotAllowedStateErrorResponse'
                title: Response 400 Updatebondtokentransferapprovalstatus
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
    get:
      tags:
        - bond
      summary: Retrieve Bond Token Transfer Approval Status
      description: Retrieve bond token transfer approval status
      operationId: RetrieveBondTokenTransferApprovalStatus
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: id
          in: path
          required: true
          schema:
            type: integer
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalTokenDetailResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /bond/bulk_transfer:
    post:
      tags:
        - bond
      summary: Bulk Transfer Bond Token Ownership
      description: |-
        Bulk transfer bond token ownership

        - All `token_address` must be the same.
      operationId: BulkTransferBondTokenOwnership
      parameters:
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetStraightBondBulkTransferRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkTransferUploadIdResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Bulktransferbondtokenownership
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/MultipleTokenTransferNotAllowedErrorResponse'
                  - $ref: '#/components/schemas/NonTransferableTokenErrorResponse'
                  - $ref: '#/components/schemas/TokenNotExistErrorResponse'
                title: Response 400 Bulktransferbondtokenownership
    get:
      tags:
        - bond
      summary: List Bond Token Bulk Transfers
      description: List bond token bulk transfers
      operationId: ListBondTokenBulkTransfers
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: token_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Token address (**this affects total number**)
            title: Token Address
          description: Token address (**this affects total number**)
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkTransferUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /bond/bulk_transfer/{upload_id}:
    get:
      tags:
        - bond
      summary: Retrieve Bond Token Bulk Transfer
      description: Retrieve bond token bulk transfer upload records
      operationId: RetrieveBondTokenBulkTransfer
      parameters:
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
            title: Upload Id
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkTransferUploadRecordResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /e2e_messaging/accounts:
    get:
      tags:
        - '[misc] messaging'
      summary: List All E2E Messaging Accounts
      description: List all e2e messaging accounts
      operationId: ListAllE2EMessagingAccounts
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/E2EMessagingAccountResponse'
                type: array
                title: Response Listalle2Emessagingaccounts
    post:
      tags:
        - '[misc] messaging'
      summary: Create E2E Messaging Account
      description: Create E2EMessaging account
      operationId: CreateE2EMessagingAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E2EMessagingAccountCreateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EMessagingAccountResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 Createe2Emessagingaccount
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /e2e_messaging/accounts/{account_address}:
    get:
      tags:
        - '[misc] messaging'
      summary: Retrieve E2E Messaging Account
      description: Retrieve an e2e messaging account
      operationId: RetrieveE2EMessagingAccount
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EMessagingAccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    delete:
      tags:
        - '[misc] messaging'
      summary: Delete E2E Messaging Account
      description: Logically delete an e2e messaging account
      operationId: DeleteE2EMessagingAccount
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EMessagingAccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /e2e_messaging/accounts/{account_address}/rsa_key:
    post:
      tags:
        - '[misc] messaging'
      summary: Update E2E Messaging Account Rsa Key
      description: Update an e2e messaging account rsa key
      operationId: UpdateE2EMessagingAccountRSAKey
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E2EMessagingAccountUpdateRsaKeyRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EMessagingAccountResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /e2e_messaging/accounts/{account_address}/eoa_password:
    post:
      tags:
        - '[misc] messaging'
      summary: Change E2E Messaging Account Eoa Password
      description: Change E2EMessaging account's EOA password
      operationId: ChangeE2EMessagingAccountEOAPassword
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E2EMessagingAccountChangeEOAPasswordRequest'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /e2e_messaging/accounts/{account_address}/rsa_passphrase:
    post:
      tags:
        - '[misc] messaging'
      summary: Change E2E Messaging Account Rsa Passphrase
      description: Change E2EMessaging account's RSA passphrase
      operationId: ChangeE2EMessagingAccountRSAPassphrase
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/E2EMessagingAccountChangeRSAPassphraseRequest'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /e2e_messaging/messages:
    get:
      tags:
        - '[misc] messaging'
      summary: List All E2E Messages
      description: List all e2e messages
      operationId: ListAllE2EMessages
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: from_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: From Address
        - name: to_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: To Address
        - name: type
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Type
        - name: message
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: partial match
            title: Message
          description: partial match
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllE2EMessagingResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /e2e_messaging/messages/{id}:
    get:
      tags:
        - '[misc] messaging'
      summary: Retrieve E2E Messaging
      description: Retrieve an e2e message
      operationId: RetrieveE2EMessage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/E2EMessagingResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /files:
    get:
      tags:
        - utility
      summary: List All Upload Files
      description: List all upload files
      operationId: ListAllUploadFiles
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: relation
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Relation
            title: Relation
          description: Relation
        - name: file_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: File name (partial match)
            title: File Name
          description: File name (partial match)
        - name: label
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Label (partial match)
            title: Label
          description: Label (partial match)
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllFilesResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - utility
      summary: Upload File
      description: Upload file
      operationId: UploadFile
      parameters:
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadFileRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /files/{file_id}:
    get:
      tags:
        - utility
      summary: Download File
      description: Download file
      operationId: DownloadFile
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
            title: File Id
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadFileResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    delete:
      tags:
        - utility
      summary: Delete File
      description: Delete file
      operationId: DeleteFile
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
            title: File Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /ledger/{token_address}/history:
    get:
      tags:
        - token_common
      summary: List All Ledger History
      description: List all ledger history
      operationId: ListAllLedgerHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            title: Offset
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            title: Limit
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllLedgerHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /ledger/{token_address}/history/{ledger_id}:
    get:
      tags:
        - token_common
      summary: Retrieve Ledger History
      description: Retrieve ledger history
      operationId: RetrieveLedgerHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: ledger_id
          in: path
          required: true
          schema:
            type: integer
            title: Ledger Id
        - name: latest_flg
          in: query
          required: true
          schema:
            type: integer
            maximum: 1
            minimum: 0
            title: Latest Flg
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveLedgerHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/Integer64bitLimitExceededErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 Retrieveledgerhistory
  /ledger/{token_address}/template:
    get:
      tags:
        - token_common
      summary: Retrieve Ledger Template
      description: Retrieve ledger template
      operationId: RetrieveLedgerTemplate
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerTemplateResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - token_common
      summary: Create Update Ledger Template
      description: Create or Update Ledger Template
      operationId: CreateUpdateLedgerTemplate
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateLedgerTemplateRequest'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    delete:
      tags:
        - token_common
      summary: Delete Ledger Template
      description: Delete ledger template
      operationId: DeleteLedgerTemplate
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /ledger/{token_address}/details_data:
    get:
      tags:
        - token_common
      summary: List All Ledger Details Data
      description: List all ledger details data
      operationId: ListAllLedgerDetailsData
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            title: Offset
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            title: Limit
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllLedgerDetailsDataResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - token_common
      summary: Create Ledger Details Data
      description: Create ledger details data
      operationId: CreateLedgerDetailsData
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUpdateLedgerDetailsDataRequest'
              title: Data List
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerDetailsDataResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /ledger/{token_address}/details_data/{data_id}:
    get:
      tags:
        - token_common
      summary: Retrieve Ledger Details Data
      description: Retrieve ledger details data
      operationId: RetrieveLedgerDetailsData
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: data_id
          in: path
          required: true
          schema:
            type: string
            title: Data Id
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RetrieveLedgerDetailsDataResponse'
                title: Response Retrieveledgerdetailsdata
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - token_common
      summary: Update Ledger Details Data
      description: Update ledger details data
      operationId: UpdateLedgerDetailsData
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: data_id
          in: path
          required: true
          schema:
            type: string
            title: Data Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUpdateLedgerDetailsDataRequest'
              title: Data List
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    delete:
      tags:
        - token_common
      summary: Delete Ledger Details Data
      description: Delete ledger details data
      operationId: DeleteLedgerDetailsData
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: data_id
          in: path
          required: true
          schema:
            type: string
            title: Data Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /notifications:
    get:
      tags:
        - notification
      summary: List All Notifications
      description: List all notifications
      operationId: ListAllNotifications
      parameters:
        - name: notice_type
          in: query
          required: false
          schema:
            type: string
            title: Notice Type
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            title: Offset
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            title: Limit
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllNotificationsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /notifications/{notice_id}:
    delete:
      tags:
        - notification
      summary: Delete Notification
      description: Delete notification
      operationId: DeleteNotification
      parameters:
        - name: notice_id
          in: path
          required: true
          schema:
            type: string
            title: Notice Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /positions/{account_address}:
    get:
      tags:
        - token_common
      summary: List All Positions
      description: List all positions
      operationId: ListAllPositions
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: include_former_position
          in: query
          required: false
          schema:
            type: boolean
            description: Whether to include positions that were held in the past
              but currently have a zero balance.
            default: false
            title: Include Former Position
          description: Whether to include positions that were held in the past 
            but currently have a zero balance.
        - name: include_token_attributes
          in: query
          required: false
          schema:
            type: boolean
            description: Whether to include token attribute information in the 
              response.
            default: false
            title: Include Token Attributes
          description: Whether to include token attribute information in the 
            response.
        - name: token_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TokenType'
              - type: 'null'
            description: Token type
            title: Token Type
          description: Token type
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllPositionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /positions/{account_address}/lock:
    get:
      tags:
        - token_common
      summary: List All Locked Position
      description: List all locked position
      operationId: ListAllLockedPosition
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: token_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TokenType'
              - type: 'null'
            description: Token type
            title: Token Type
          description: Token type
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllLockedPositionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /positions/{account_address}/lock/events:
    get:
      tags:
        - token_common
      summary: List Account Lock Unlock Events
      description: List all lock/unlock events in the account
      operationId: ListAccountLockUnlockEvents
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: token_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Token address
            title: Token Address
          description: Token address
        - name: token_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TokenType'
              - type: 'null'
            description: Token type
            title: Token Type
          description: Token type
        - name: msg_sender
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Msg sender
            title: Msg Sender
          description: Msg sender
        - name: lock_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Lock address
            title: Lock Address
          description: Lock address
        - name: recipient_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Recipient address
            title: Recipient Address
          description: Recipient address
        - name: category
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/LockEventCategory'
              - type: 'null'
            description: Event category
            title: Category
          description: Event category
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListAllLockEventsSortItem'
              - type: 'null'
            description: Sort item
            default: block_timestamp
            title: Sort Item
          description: Sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllLockEventsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /positions/{account_address}/force_lock:
    post:
      tags:
        - token_common
      summary: Force Lock
      description: |-
        Force unlock the locked position

        - This feature is not available for tokens issued prior to v25.6.
      operationId: ForceLock
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForceLockRequest'
      responses:
        '200':
          description: Successful Response
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Forcelock
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/OperationNotSupportedVersionErrorResponse'
                title: Response 400 Forcelock
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /positions/{account_address}/force_unlock:
    post:
      tags:
        - token_common
      summary: Force Unlock
      description: Force unlock the locked position
      operationId: ForceUnlock
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForceUnlockRequest'
      responses:
        '200':
          description: Successful Response
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Forceunlock
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 Forceunlock
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /positions/{account_address}/{token_address}:
    get:
      tags:
        - token_common
      summary: Retrieve Position
      description: Retrieve token position for account
      operationId: RetrieveTokenPositionForAccount
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /share/tokens:
    post:
      tags:
        - share
      summary: Issue Share Token
      description: Issue ibetShare token
      operationId: IssueShareToken
      parameters:
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAddressResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Issuesharetoken
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractRevertErrorResponse'
    get:
      tags:
        - share
      summary: List All Share Tokens
      description: List all issued share tokens
      operationId: ListAllShareTokens
      parameters:
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IbetShareResponse'
                title: Response Listallsharetokens
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/tokens/{token_address}:
    get:
      tags:
        - share
      summary: Retrieve Share Token
      description: Retrieve the share token
      operationId: RetrieveShareToken
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetShareResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - share
      summary: Update Share Token
      description: Update the share token
      operationId: UpdateShareToken
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareUpdate'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Updatesharetoken
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/OperationNotSupportedVersionErrorResponse'
                title: Response 400 Updatesharetoken
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /share/tokens/{token_address}/history:
    get:
      tags:
        - share
      summary: List Share Operation Log History
      description: List all share token operation log history
      operationId: ListShareOperationLogHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: modified_contents
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Modified contents query
            title: Modified Contents
          description: Modified contents query
        - name: operation_category
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TokenUpdateOperationCategory'
              - type: 'null'
            description: Trigger of change
            title: Operation Category
          description: Trigger of change
        - name: created_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Created datetime (From)
            title: Created From
          description: Created datetime (From)
        - name: created_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Created datetime (To)
            title: Created To
          description: Created datetime (To)
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListTokenHistorySortItem'
              - type: 'null'
            description: Sort item
            default: created
            title: Sort Item
          description: Sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokenOperationLogHistoryResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /share/tokens/{token_address}/additional_issue:
    get:
      tags:
        - share
      summary: List Share Additional Issuance History
      description: List share additional issuance history
      operationId: ListShareAdditionalIssuanceHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/IssueRedeemSortItem'
              - type: 'null'
            default: block_timestamp
            title: Sort Item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueRedeemHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - share
      summary: Issuer Additional Share
      description: Issuer additional shares
      operationId: IssueAdditionalShare
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareAdditionalIssue'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Issueadditionalshare
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 Issueadditionalshare
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /share/tokens/{token_address}/additional_issue/batch:
    get:
      tags:
        - share
      summary: List All Batch Additional Share Issue
      description: List all share batch additional issues
      operationId: ListAllBatchAdditionalShareIssue
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: processed
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Process status
            title: Processed
          description: Process status
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchIssueRedeemUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - share
      summary: Issue Additional Shares In Batch
      description: Issue additional shares in batch
      operationId: IssueAdditionalSharesInBatch
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IbetShareAdditionalIssue'
              title: Data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchIssueRedeemUploadIdResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Issueadditionalsharesinbatch
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /share/tokens/{token_address}/additional_issue/batch/{batch_id}:
    get:
      tags:
        - share
      summary: Retrieve Batch Additional Share Issue Status
      description: Retrieve detailed status of additional share batch issuance
      operationId: RetrieveBatchAdditionalShareIssueStatus
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: batch_id
          in: path
          required: true
          schema:
            type: string
            title: Batch Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchIssueRedeemResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /share/tokens/{token_address}/redeem:
    get:
      tags:
        - share
      summary: List Share Redeem History
      description: List share redemption history
      operationId: ListShareRedemptionHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/IssueRedeemSortItem'
              - type: 'null'
            default: block_timestamp
            title: Sort Item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueRedeemHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - share
      summary: Redeem Share
      description: Redeem share token
      operationId: RedeemShare
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareRedeem'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Redeemshare
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 Redeemshare
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /share/tokens/{token_address}/redeem/batch:
    get:
      tags:
        - share
      summary: List All Batch Share Redemption
      description: List all batch share redemptions
      operationId: ListAllBatchShareRedemption
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: processed
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Process status
            title: Processed
          description: Process status
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchIssueRedeemUploadResponseWithResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
    post:
      tags:
        - share
      summary: Redeem Shares In Batch
      description: Redeem shares in batch
      operationId: RedeemSharesInBatch
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IbetShareRedeem'
              title: Data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchIssueRedeemUploadIdResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Redeemsharesinbatch
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /share/tokens/{token_address}/redeem/batch/{batch_id}:
    get:
      tags:
        - share
      summary: Retrieve Batch Redeem
      description: Retrieve detailed status of batch share redemption
      operationId: RetrieveBatchShareRedemptionStatus
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: batch_id
          in: path
          required: true
          schema:
            type: string
            title: Batch Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchIssueRedeemResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /share/tokens/{token_address}/scheduled_events:
    get:
      tags:
        - share
      summary: List All Scheduled Share Token Update Events
      description: List all scheduled share token update events
      operationId: ListAllScheduledShareTokenUpdateEvents
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScheduledEventResponse'
                title: Response Listallscheduledsharetokenupdateevents
    post:
      tags:
        - share
      summary: Schedule Share Token Update Event
      description: Schedule a new share token update event
      operationId: ScheduleShareTokenUpdateEvent
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareScheduledUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventIdResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Schedulesharetokenupdateevent
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/OperationNotSupportedVersionErrorResponse'
                title: Response 400 Schedulesharetokenupdateevent
  /share/tokens/{token_address}/scheduled_events/batch:
    post:
      tags:
        - share
      summary: Schedule Share Token Update Events In Batch
      description: Schedule share token update events in batch
      operationId: ScheduleShareTokenUpdateEventsInBatch
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IbetShareScheduledUpdate'
              title: Event Data List
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventIdListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Schedulesharetokenupdateeventsinbatch
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/OperationNotSupportedVersionErrorResponse'
                title: Response 400 Schedulesharetokenupdateeventsinbatch
  /share/tokens/{token_address}/scheduled_events/{scheduled_event_id}:
    get:
      tags:
        - share
      summary: Retrieve Scheduled Share Token Update Event
      description: Retrieve a scheduled share token update event
      operationId: RetrieveScheduledShareTokenUpdateEvent
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: scheduled_event_id
          in: path
          required: true
          schema:
            type: string
            title: Scheduled Event Id
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
    delete:
      tags:
        - share
      summary: Delete Scheduled Share Token Update Event
      description: Delete a scheduled share token update event
      operationId: DeleteScheduledShareTokenUpdateEvent
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: scheduled_event_id
          in: path
          required: true
          schema:
            type: string
            title: Scheduled Event Id
        - name: soft_delete
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Soft delete flag
            default: false
            title: Soft Delete
          description: Soft delete flag
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledEventResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Deletescheduledsharetokenupdateevent
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /share/tokens/{token_address}/holders:
    get:
      tags:
        - share
      summary: List All Share Token Holders
      description: List all share token holders
      operationId: ListAllShareTokenHolders
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: include_former_holder
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Include Former Holder
        - name: key_manager_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/KeyManagerType'
              - type: 'null'
            description: Key manager type (**this affects total number**)
            title: Key Manager Type
          description: Key manager type (**this affects total number**)
        - name: key_manager
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: key manager(partial match)
            title: Key Manager
          description: key manager(partial match)
        - name: balance
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: Token balance
            title: Balance
          description: Token balance
        - name: balance_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: Search condition of balance(0:equal, 1:greater than or 
              equal, 2:less than or equal）
            default: 0
            title: Balance Operator
          description: Search condition of balance(0:equal, 1:greater than or 
            equal, 2:less than or equal）
        - name: pending_transfer
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: Pending transfer amount
            title: Pending Transfer
          description: Pending transfer amount
        - name: pending_transfer_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: Search condition of pending transfer(0:equal, 1:greater
              than or equal, 2:less than or equal）
            default: 0
            title: Pending Transfer Operator
          description: Search condition of pending transfer(0:equal, 1:greater 
            than or equal, 2:less than or equal）
        - name: locked
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: Locked amount
            title: Locked
          description: Locked amount
        - name: locked_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: search condition of locked amount(0:equal, 1:greater 
              than or equal, 2:less than or equal）
            default: 0
            title: Locked Operator
          description: search condition of locked amount(0:equal, 1:greater than
            or equal, 2:less than or equal）
        - name: balance_and_pending_transfer
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: number of balance plus pending transfer amount
            title: Balance And Pending Transfer
          description: number of balance plus pending transfer amount
        - name: balance_and_pending_transfer_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: search condition of balance plus pending 
              transfer(0:equal, 1:greater than or equal, 2:less than or equal）
            default: 0
            title: Balance And Pending Transfer Operator
          description: search condition of balance plus pending 
            transfer(0:equal, 1:greater than or equal, 2:less than or equal）
        - name: account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: account address(partial match)
            title: Account Address
          description: account address(partial match)
        - name: holder_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: holder name(partial match)
            title: Holder Name
          description: holder name(partial match)
        - name: sort_item
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ListAllHoldersSortItem'
            description: Sort Item
            default: created
          description: Sort Item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HoldersResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /share/tokens/{token_address}/holders/count:
    get:
      tags:
        - share
      summary: Count Share Token Holders
      description: Count the number of share token holders
      operationId: CountShareTokenHolders
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderCountResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /share/tokens/{token_address}/holders/{account_address}:
    get:
      tags:
        - share
      summary: Retrieve Share Token Holder
      description: Retrieve share token holder
      operationId: RetrieveShareTokenHolder
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /share/tokens/{token_address}/holders/{account_address}/holder_extra_info:
    post:
      tags:
        - share
      summary: Register Share Token Holder Extra Info
      operationId: RegisterShareTokenHolderExtraInfo
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterHolderExtraInfoRequest'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationErrorResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /share/tokens/{token_address}/personal_info:
    post:
      tags:
        - share
      summary: Register Share Token Holder Personal Info
      description: Register personal information of share token holders
      operationId: RegisterShareTokenHolderPersonalInfo
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPersonalInfoRequest'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Registersharetokenholderpersonalinfo
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/PersonalInfoExceedsSizeLimitResponse'
                title: Response 400 Registersharetokenholderpersonalinfo
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /share/tokens/{token_address}/personal_info/batch:
    get:
      tags:
        - share
      summary: List All Share Token Batch Personal Info Registration
      description: List all personal information batch registration
      operationId: ListAllShareTokenBatchPersonalInfoRegistration
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Status
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchRegisterPersonalInfoUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - share
      summary: Initiate Share Token Batch Personal Info Registration
      description: Initiate share token batch personal information registration
      operationId: InitiateShareTokenBatchPersonalInfoRegistration
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RegisterPersonalInfoRequest'
              title: Personal Info List
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRegisterPersonalInfoUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 
                  Initiatesharetokenbatchpersonalinforegistration
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/BatchPersonalInfoRegistrationValidationErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 
                  Initiatesharetokenbatchpersonalinforegistration
  /share/tokens/{token_address}/personal_info/batch/{batch_id}:
    get:
      tags:
        - share
      summary: Retrieve Share Token Personal Info Batch Registration Status
      description: Retrieve the status of share token personal information batch
        registration
      operationId: RetrieveShareTokenPersonalInfoBatchRegistrationStatus
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: batch_id
          in: path
          required: true
          schema:
            type: string
            title: Batch Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBatchRegisterPersonalInfoResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /share/tokens/{token_address}/lock_events:
    get:
      tags:
        - share
      summary: List Share Token Lock Unlock Events
      description: List all lock/unlock share token events
      operationId: ListShareTokenLockUnlockEvents
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Account address
            title: Account Address
          description: Account address
        - name: msg_sender
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Msg sender
            title: Msg Sender
          description: Msg sender
        - name: lock_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Lock address
            title: Lock Address
          description: Lock address
        - name: recipient_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Recipient address
            title: Recipient Address
          description: Recipient address
        - name: category
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/LockEventCategory'
              - type: 'null'
            description: Event category
            title: Category
          description: Event category
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListAllTokenLockEventsSortItem'
              - type: 'null'
            description: Sort item
            default: block_timestamp
            title: Sort Item
          description: Sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllTokenLockEventsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/transfers:
    post:
      tags:
        - share
      summary: Transfer Share Token Ownership
      description: Transfer share token ownership
      operationId: TransferShareTokenOwnership
      parameters:
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareTransfer'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Transfersharetokenownership
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                title: Response 400 Transfersharetokenownership
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /share/transfers/{token_address}:
    get:
      tags:
        - share
      summary: List Share Token Transfer History
      description: List share token transfer history
      operationId: ListShareTokenTransferHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: block_timestamp_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Block timestamp (From)
            title: Block Timestamp From
          description: Block timestamp (From)
        - name: block_timestamp_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Block timestamp (To)
            title: Block Timestamp To
          description: Block timestamp (To)
        - name: from_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Transfer source address
            title: From Address
          description: Transfer source address
        - name: to_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Transfer destination address
            title: To Address
          description: Transfer destination address
        - name: from_address_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Name of transfer source address
            title: From Address Name
          description: Name of transfer source address
        - name: to_address_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Name of transfer destination address
            title: To Address Name
          description: Name of transfer destination address
        - name: amount
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: Transfer amount
            title: Amount
          description: Transfer amount
        - name: amount_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: 'Value filter condition(0: equal, 1: greater than, 2: less
              than)'
            default: 0
            title: Amount Operator
          description: 'Value filter condition(0: equal, 1: greater than, 2: less
            than)'
        - name: source_event
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TransferSourceEventType'
              - type: 'null'
            description: Source event of transfer
            title: Source Event
          description: Source event of transfer
        - name: data
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: source event data
            title: Data
          description: source event data
        - name: message
          in: query
          required: false
          schema:
            anyOf:
              - const: garnishment
                type: string
              - const: force_unlock
                type: string
              - const: ibet_wst_bridge
                type: string
              - type: 'null'
            description: message field in source event data
            title: Message
          description: message field in source event data
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListTransferHistorySortItem'
              - type: 'null'
            description: Sort item
            default: block_timestamp
            title: Sort Item
          description: Sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /share/transfer_approvals:
    get:
      tags:
        - share
      summary: List All Share Token Transfer Approval History
      description: List all share token transfer approval history
      operationId: ListAllShareTokenTransferApprovalHistory
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/transfer_approvals/{token_address}:
    get:
      tags:
        - share
      summary: List Specific Share Token Transfer Approval History
      description: List specific share token transfer approval history
      operationId: ListSpecificShareTokenTransferApprovalHistory
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: from_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Transfer from
            title: From Address
          description: Transfer from
        - name: to_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Transfer to
            title: To Address
          description: Transfer to
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  $ref: '#/components/schemas/TransferApprovalStatus'
              - type: 'null'
            description: 0:unapproved, 1:escrow_finished, 2:transferred, 
              3:canceled
            title: Status
          description: 0:unapproved, 1:escrow_finished, 2:transferred, 
            3:canceled
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListTransferApprovalHistorySortItem'
              - type: 'null'
            default: id
            title: Sort Item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /share/transfer_approvals/{token_address}/{id}:
    post:
      tags:
        - share
      summary: Update Share Token Transfer Approval Status
      description: Update share token transfer approval status
      operationId: UpdateShareTokenTransferApprovalStatus
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: id
          in: path
          required: true
          schema:
            type: integer
            title: Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransferApprovalRequest'
      responses:
        '200':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Updatesharetokentransferapprovalstatus
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ContractRevertErrorResponse'
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/OperationNotAllowedStateErrorResponse'
                title: Response 400 Updatesharetokentransferapprovalstatus
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
    get:
      tags:
        - share
      summary: Retrieve Share Token Transfer Approval Status
      description: Retrieve share token transfer approval status
      operationId: RetrieveShareTokenTransferApprovalStatus
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: id
          in: path
          required: true
          schema:
            type: integer
            title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferApprovalTokenDetailResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /share/bulk_transfer:
    post:
      tags:
        - share
      summary: Bulk Transfer Share Token Ownership
      description: |-
        Bulk transfer share token ownership

        - All `token_address` must be the same.
      operationId: BulkTransferShareTokenOwnership
      parameters:
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbetShareBulkTransferRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkTransferUploadIdResponse'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AuthorizationErrorResponse'
                  - $ref: '#/components/schemas/Error401Model'
                title: Response 401 Bulktransfersharetokenownership
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'
                  - $ref: '#/components/schemas/MultipleTokenTransferNotAllowedErrorResponse'
                  - $ref: '#/components/schemas/NonTransferableTokenErrorResponse'
                  - $ref: '#/components/schemas/TokenNotExistErrorResponse'
                title: Response 400 Bulktransfersharetokenownership
    get:
      tags:
        - share
      summary: List Share Token Bulk Transfers
      description: List share token bulk transfers
      operationId: ListShareTokenBulkTransfers
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: token_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Token address (**this affects total number**)
            title: Token Address
          description: Token address (**this affects total number**)
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkTransferUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /share/bulk_transfer/{upload_id}:
    get:
      tags:
        - share
      summary: Retrieve Share Token Bulk Transfer
      description: Retrieve share token bulk transfer upload records
      operationId: RetrieveShareTokenBulkTransfer
      parameters:
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
            title: Upload Id
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkTransferUploadRecordResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /tokens:
    get:
      tags:
        - token_common
      summary: List All Issued Tokens
      description: List all tokens issued from ibet-Prime
      operationId: ListAllIssuedTokens
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: token_address_list
          in: query
          required: false
          schema:
            anyOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            description: Token address to filter (**this affects total number**)
            title: Token Address List
          description: Token address to filter (**this affects total number**)
        - name: token_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TokenType'
              - type: 'null'
            description: Token type
            title: Token Type
          description: Token type
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListAllIssuedTokensSortItem'
              - type: 'null'
            default: created
            title: Sort Item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllIssuedTokensResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /tokens/scheduled_events:
    get:
      tags:
        - token_common
      summary: List All Scheduled Events
      description: List all scheduled token update events
      operationId: ListAllScheduledEvents
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: token_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TokenType'
              - type: 'null'
            description: Token type
            title: Token Type
          description: Token type
        - name: token_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Token address
            title: Token Address
          description: Token address
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ScheduledEventStatus'
              - type: 'null'
            description: Scheduled event processing status
            title: Status
          description: Scheduled event processing status
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListAllScheduledEventsSortItem'
              - type: 'null'
            default: created
            title: Sort Item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllScheduledEventsResponse'
  /tokens/{token_address}/ibet_wst/whitelists/add:
    post:
      tags:
        - token_common
      summary: Add Ibet Wst Whitelist
      description: |-
        Add an account to the IbetWST whitelist

        - This endpoint allows an issuer to add an account to the whitelist of an IbetWST contract.
      operationId: AddIbetWSTWhitelist
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddIbetWSTWhitelistRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetWSTTransactionResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /tokens/{token_address}/ibet_wst/whitelists/delete:
    post:
      tags:
        - token_common
      summary: Delete Ibet Wst Whitelist
      description: |-
        Delete an account from the IbetWST whitelist

        - This endpoint allows an issuer to delete an account from the whitelist of an IbetWST contract.
      operationId: DeleteIbetWSTWhitelist
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteIbetWSTWhitelistRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetWSTTransactionResponse'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /token/holders/personal_info:
    get:
      tags:
        - token_common
      summary: List All Token Holders Personal Info
      description: Lists the personal information of all registered holders 
        linked to the token issuer
      operationId: ListTokenHoldersPersonalInfo
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: key_manager_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/KeyManagerType'
              - type: 'null'
            description: Key manager type (**this affects total number**)
            title: Key Manager Type
          description: Key manager type (**this affects total number**)
        - name: account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Account address
            title: Account Address
          description: Account address
        - name: created_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Created datetime (From)
            title: Created From
          description: Created datetime (From)
        - name: created_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Created datetime (To)
            title: Created To
          description: Created datetime (To)
        - name: modified_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Modified datetime (From)
            title: Modified From
          description: Modified datetime (From)
        - name: modified_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Modified datetime (To)
            title: Modified To
          description: Modified datetime (To)
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListTokenHoldersPersonalInfoSortItem'
              - type: 'null'
            description: Sort item
            default: created
            title: Sort Item
          description: Sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokenHoldersPersonalInfoResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /token/holders/personal_info/history:
    get:
      tags:
        - token_common
      summary: List All Token Holders Personal Info History
      description: List personal information historical data
      operationId: ListTokenHoldersPersonalInfoHistory
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: key_manager_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/KeyManagerType'
              - type: 'null'
            description: Key manager type (**this affects total number**)
            title: Key Manager Type
          description: Key manager type (**this affects total number**)
        - name: account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Account address
            title: Account Address
          description: Account address
        - name: event_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/PersonalInfoEventType'
              - type: 'null'
            description: event type
            title: Event Type
          description: event type
        - name: block_timestamp_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: block timestamp datetime (From)
            title: Block Timestamp From
          description: block timestamp datetime (From)
        - name: block_timestamp_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: block timestamp datetime (To)
            title: Block Timestamp To
          description: block timestamp datetime (To)
        - name: created_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Created datetime (From)
            title: Created From
          description: Created datetime (From)
        - name: created_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Created datetime (To)
            title: Created To
          description: Created datetime (To)
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokenHoldersPersonalInfoHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /token/holders/{token_address}/collection:
    post:
      tags:
        - token_common
      summary: Create Token Holders Collection
      description: Create token holders collection
      operationId: CreateTokenHoldersCollection
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            examples:
              - '0xABCdeF1234567890abcdEf123456789000000000'
            title: Token Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenHoldersListRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTokenHoldersListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    get:
      tags:
        - token_common
      summary: List All Token Holders Collections
      description: List all token holders collections
      operationId: ListAllTokenHoldersCollections
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TokenHolderBatchStatus'
              - type: 'null'
            title: Status
        - name: sort_order
          in: query
          required: false
          schema:
            type: integer
            maximum: 1
            minimum: 0
            description: 0:asc, 1:desc (created)
            default: 1
            title: Sort Order
          description: 0:asc, 1:desc (created)
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            title: Offset
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            title: Limit
        - name: issuer-address
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllTokenHolderCollectionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /token/holders/{token_address}/collection/{list_id}:
    get:
      tags:
        - token_common
      summary: Retrieve Token Holders Collection
      description: Retrieve token holders collection
      operationId: RetrieveTokenHoldersCollection
      parameters:
        - name: token_address
          in: path
          required: true
          schema:
            type: string
            title: Token Address
        - name: list_id
          in: path
          required: true
          schema:
            type: string
            description: UUID v4 required
            examples:
              - cfd83622-34dc-4efe-a68b-2cc275d3d824
            title: List Id
          description: UUID v4 required
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: hold_balance
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: Hold balance
            title: Hold Balance
          description: Hold balance
        - name: hold_balance_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: Search condition of hold balance(0:equal, 1:greater 
              than or equal, 2:less than or equal）
            default: 0
            title: Hold Balance Operator
          description: Search condition of hold balance(0:equal, 1:greater than 
            or equal, 2:less than or equal）
        - name: locked_balance
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: Locked balance
            title: Locked Balance
          description: Locked balance
        - name: locked_balance_operator
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ValueOperator'
              - type: 'null'
            description: Search condition of locked balance(0:equal, 1:greater 
              than or equal, 2:less than or equal）
            default: 0
            title: Locked Balance Operator
          description: Search condition of locked balance(0:equal, 1:greater 
            than or equal, 2:less than or equal）
        - name: account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Account address(partial match)
            title: Account Address
          description: Account address(partial match)
        - name: key_manager
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Key manager(partial match)
            title: Key Manager
          description: Key manager(partial match)
        - name: tax_category
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            description: Tax category
            title: Tax Category
          description: Tax category
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/RetrieveTokenHoldersCollectionSortItem'
              - type: 'null'
            description: Sort item
            default: account_address
            title: Sort Item
          description: Sort item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveTokenHoldersListResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /settlement/dvp/{exchange_address}/deliveries:
    get:
      tags:
        - settlement
      summary: List All Dvp Deliveries
      description: List all DVP deliveries
      operationId: ListAllDVPDeliveries
      parameters:
        - name: exchange_address
          in: path
          required: true
          schema:
            type: string
            title: Exchange Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: token_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Token address
            title: Token Address
          description: Token address
        - name: seller_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Seller address
            title: Seller Address
          description: Seller address
        - name: buyer_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Buyer address
            title: Buyer Address
          description: Buyer address
        - name: agent_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Agent address
            title: Agent Address
          description: Agent address
        - name: valid
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Valid flag
            title: Valid
          description: Valid flag
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/DeliveryStatus'
              - type: 'null'
            description: Delivery status
            title: Status
          description: Delivery status
        - name: create_blocktimestamp_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Create block timestamp filter(From)
            title: Create Blocktimestamp From
          description: Create block timestamp filter(From)
        - name: create_blocktimestamp_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Create block timestamp filter(To)
            title: Create Blocktimestamp To
          description: Create block timestamp filter(To)
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllDVPDeliveriesResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - settlement
      summary: Create Dvp Delivery
      operationId: CreateDVPDelivery
      parameters:
        - name: exchange_address
          in: path
          required: true
          schema:
            type: string
            title: Exchange Address
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDVPDeliveryRequest'
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /settlement/dvp/{exchange_address}/delivery/{delivery_id}:
    get:
      tags:
        - settlement
      summary: Retrieve Dvp Delivery
      description: Retrieve a dvp delivery
      operationId: RetrieveDVPDelivery
      parameters:
        - name: exchange_address
          in: path
          required: true
          schema:
            type: string
            title: Exchange Address
        - name: delivery_id
          in: path
          required: true
          schema:
            type: integer
            title: Delivery Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveDVPDeliveryResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
    post:
      tags:
        - settlement
      summary: Update Dvp Delivery
      operationId: UpdateDVPDelivery
      parameters:
        - name: exchange_address
          in: path
          required: true
          schema:
            type: string
            title: Exchange Address
        - name: delivery_id
          in: path
          required: true
          schema:
            type: integer
            title: Delivery Id
        - name: issuer-address
          in: header
          required: true
          schema:
            type: string
            title: Issuer-Address
        - name: eoa-password
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Eoa-Password
        - name: auth-token
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Auth-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelDVPDeliveryRequest'
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /sealed_tx/personal_info:
    post:
      tags:
        - '[misc] sealed_tx'
      summary: Sealed Tx Register Personal Info
      operationId: SealedTxRegisterPersonalInfo
      parameters:
        - name: X-SealedTx-Signature
          in: header
          required: true
          schema:
            type: string
            title: X-Sealedtx-Signature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SealedTxRegisterPersonalInfoRequest'
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /sealed_tx/holder_extra_info:
    post:
      tags:
        - '[misc] sealed_tx'
      summary: Sealed Tx Register Holder Extra Info
      operationId: SealedTxRegisterHolderExtraInfo
      parameters:
        - name: X-SealedTx-Signature
          in: header
          required: true
          schema:
            type: string
            title: X-Sealedtx-Signature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SealedTxRegisterHolderExtraInfoRequest'
      responses:
        '200':
          description: Successful Response
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /ibet_wst/tokens:
    get:
      tags:
        - '[misc] ibet_wst'
      summary: List All Ibet Wst Tokens
      description: |-
        List all IbetWST tokens

        - This endpoint retrieves all IbetWST tokens based on the provided query parameters.
        - Only tokens whose deployment has already been finalized will be returned.
      operationId: ListAllIbetWSTTokens
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: issuer_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Issuer address (**This affects total number**)
            title: Issuer Address
          description: Issuer address (**This affects total number**)
        - name: ibet_wst_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
        - name: ibet_token_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: ibet token contract address
            title: Ibet Token Address
          description: ibet token contract address
        - name: token_type
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/TokenType'
              - type: 'null'
            description: Token type
            title: Token Type
          description: Token type
        - name: sort_item
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/ListAllIbetWSTTokensSortItem'
              - type: 'null'
            default: created
            title: Sort Item
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllIbetWSTTokensResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ibet_wst/balances/{account_address}/{ibet_wst_address}:
    get:
      tags:
        - '[misc] ibet_wst'
      summary: Get Ibet Wst Balance
      description: |-
        Get IbetWST balance for a specific account address

        - This endpoint retrieves the IbetWST balance for the specified account address.
      operationId: GetIbetWSTBalance
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: Account address
            title: Account Address
          description: Account address
        - name: ibet_wst_address
          in: path
          required: true
          schema:
            type: string
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIbetWSTBalanceResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ibet_wst/balances/{account_address}/{ibet_wst_address}/burn:
    post:
      tags:
        - '[misc] ibet_wst'
      summary: Burn Ibet Wst Balance
      description: |-
        Burn IbetWST balance
        - This endpoint allows a user to send burnWithAuthorization transaction to the IbetWST contract.
      operationId: BurnIbetWSTBalance
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: Account address
            title: Account Address
          description: Account address
        - name: ibet_wst_address
          in: path
          required: true
          schema:
            type: string
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BurnIbetWSTRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetWSTTransactionResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetWSTInsufficientBalanceErrorResponse'
  /ibet_wst/transactions:
    get:
      tags:
        - '[misc] ibet_wst'
      summary: List Ibet Wst Transactions
      description: |-
        List IbetWST transactions

        - This endpoint retrieves all IbetWST transactions based on the provided query parameters.
      operationId: ListIbetWSTTransactions
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: ibet_wst_address
          in: query
          required: true
          schema:
            type: string
            description: 'IbetWST contract address (**This affects total number**) '
            title: Ibet Wst Address
          description: 'IbetWST contract address (**This affects total number**) '
        - name: tx_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Transaction ID
            title: Tx Id
          description: Transaction ID
        - name: tx_type
          in: query
          required: false
          schema:
            anyOf:
              - enum:
                  - deploy
                  - mint
                  - burn
                  - add_whitelist
                  - delete_whitelist
                  - transfer
                  - request_trade
                  - cancel_trade
                  - accept_trade
                  - reject_trade
                type: string
              - type: 'null'
            description: Transaction type
            title: Tx Type
          description: Transaction type
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/IbetWSTTxStatus'
              - type: 'null'
            description: 'Transaction status (0: PENDING, 1: SENT, 2: SUCCEEDED, 3:
              FAILED)'
            title: Status
          description: 'Transaction status (0: PENDING, 1: SENT, 2: SUCCEEDED, 3:
            FAILED)'
        - name: tx_hash
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Transaction hash
            title: Tx Hash
          description: Transaction hash
        - name: authorizer
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Authorizer address
            title: Authorizer
          description: Authorizer address
        - name: finalized
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: True if the block is finalized, False otherwise
            title: Finalized
          description: True if the block is finalized, False otherwise
        - name: created_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Created datetime (From)
            title: Created From
          description: Created datetime (From)
        - name: created_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Created datetime (To)
            title: Created To
          description: Created datetime (To)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIbetWSTTransactionsResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /ibet_wst/transactions/{tx_id}:
    get:
      tags:
        - '[misc] ibet_wst'
      summary: Get Ibet Wst Transaction
      description: |-
        Get IbetWST transaction details

        - This endpoint retrieves the details of a specific IbetWST transaction by its ID.
      operationId: GetIbetWSTTransaction
      parameters:
        - name: tx_id
          in: path
          required: true
          schema:
            type: string
            description: IbetWST transaction ID
            title: Tx Id
          description: IbetWST transaction ID
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIbetWSTTransactionResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /ibet_wst/whitelists/{ibet_wst_address}:
    get:
      tags:
        - '[misc] ibet_wst'
      summary: Retrieve Ibet Wst Whitelist Accounts
      description: |-
        Retrieve all whitelisted accounts for a specific IbetWST contract address

        - This endpoint retrieves all accounts that are whitelisted for the specified IbetWST contract address.
      operationId: RetrieveIbetWSTWhitelistAccounts
      parameters:
        - name: ibet_wst_address
          in: path
          required: true
          schema:
            type: string
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveIbetWSTWhitelistAccountsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ibet_wst/whitelists/{ibet_wst_address}/{account_address}:
    get:
      tags:
        - '[misc] ibet_wst'
      summary: Get Ibet Wst Whitelist
      description: |-
        Get IbetWST whitelist status for a specific account address

        - This endpoint retrieves the whitelist status of an account address for the specified IbetWST contract.
      operationId: GetIbetWSTWhitelist
      parameters:
        - name: ibet_wst_address
          in: path
          required: true
          schema:
            type: string
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            description: Account address
            title: Account Address
          description: Account address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIbetWSTWhitelistResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ibet_wst/transfers/{ibet_wst_address}:
    post:
      tags:
        - '[misc] ibet_wst'
      summary: Transfer Ibet Wst
      description: |-
        Transfer IbetWST tokens

        - This endpoint allows a user to send transferWithAuthorization transaction to the IbetWST contract.
      operationId: TransferIbetWST
      parameters:
        - name: ibet_wst_address
          in: path
          required: true
          schema:
            type: string
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferIbetWSTRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetWSTTransactionResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetWSTInsufficientBalanceErrorResponse'
  /ibet_wst/trades/{ibet_wst_address}/request:
    post:
      tags:
        - '[misc] ibet_wst'
      summary: Request Ibet Wst Trade
      description: |-
        Request an IbetWST trade

        - This endpoint allows a user to send requestTradeWithAuthorization transaction to the IbetWST contract.
      operationId: RequestIbetWSTTrade
      parameters:
        - name: ibet_wst_address
          in: path
          required: true
          schema:
            type: string
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestIbetWSTTradeRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetWSTTransactionResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ibet_wst/trades/{ibet_wst_address}/cancel:
    post:
      tags:
        - '[misc] ibet_wst'
      summary: Cancel Ibet Wst Trade
      description: |-
        Cancel an IbetWST trade

        - This endpoint allows a user to send cancelTradeWithAuthorization transaction to the IbetWST contract.
      operationId: CancelIbetWSTTrade
      parameters:
        - name: ibet_wst_address
          in: path
          required: true
          schema:
            type: string
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelIbetWSTTradeRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetWSTTransactionResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ibet_wst/trades/{ibet_wst_address}/accept:
    post:
      tags:
        - '[misc] ibet_wst'
      summary: Accept Ibet Wst Trade
      description: |-
        Accept an IbetWST trade

        - This endpoint allows a user to send acceptTradeWithAuthorization transaction to the IbetWST contract.
        - If seller's ST token balance is insufficient, an IbetWSTInsufficientBalanceError will be raised.
        - If buyer's SC token allowance is insufficient, an ERC20InsufficientAllowanceError will be raised.
      operationId: AcceptIbetWSTTrade
      parameters:
        - name: ibet_wst_address
          in: path
          required: true
          schema:
            type: string
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptIbetWSTTradeRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetWSTTransactionResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ERC20InsufficientAllowanceErrorResponse'
                  - $ref: '#/components/schemas/IbetWSTInsufficientBalanceErrorResponse'
                title: Response 400 Acceptibetwsttrade
  /ibet_wst/trades/{ibet_wst_address}/reject:
    post:
      tags:
        - '[misc] ibet_wst'
      summary: Reject Ibet Wst Trade
      description: |-
        Reject an IbetWST trade

        - This endpoint allows a user to send rejectTradeWithAuthorization transaction to the IbetWST contract.
      operationId: RejectIbetWSTTrade
      parameters:
        - name: ibet_wst_address
          in: path
          required: true
          schema:
            type: string
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectIbetWSTTradeRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbetWSTTransactionResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ibet_wst/trades/{ibet_wst_address}:
    get:
      tags:
        - '[misc] ibet_wst'
      summary: List Ibet Wst Trades
      description: |-
        List IbetWST trades

        - This endpoint retrieves a list of trades from the IbetWST contract based on the provided query parameters.
      operationId: ListIbetWSTTrades
      parameters:
        - name: ibet_wst_address
          in: path
          required: true
          schema:
            type: string
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: seller_st_account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: IbetWST seller account address
            title: Seller St Account Address
          description: IbetWST seller account address
        - name: buyer_st_account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: IbetWST buyer account address
            title: Buyer St Account Address
          description: IbetWST buyer account address
        - name: sc_token_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: SC token contract address
            title: Sc Token Address
          description: SC token contract address
        - name: seller_sc_account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: SC seller account address
            title: Seller Sc Account Address
          description: SC seller account address
        - name: buyer_sc_account_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: SC buyer account address
            title: Buyer Sc Account Address
          description: SC buyer account address
        - name: state
          in: query
          required: false
          schema:
            anyOf:
              - enum:
                  - Pending
                  - Executed
                  - Cancelled
                type: string
              - type: 'null'
            description: Trade state
            title: State
          description: Trade state
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIbetWSTTradesResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ibet_wst/trades/{ibet_wst_address}/{index}:
    get:
      tags:
        - '[misc] ibet_wst'
      summary: Get Ibet Wst Trade
      description: |-
        Get details of a specific IbetWST trade

        - This endpoint retrieves the details of a specific trade by its index from the IbetWST contract.
      operationId: GetIbetWSTTrade
      parameters:
        - name: ibet_wst_address
          in: path
          required: true
          schema:
            type: string
            description: IbetWST contract address
            title: Ibet Wst Address
          description: IbetWST contract address
        - name: index
          in: path
          required: true
          schema:
            type: integer
            description: Trade index
            title: Index
          description: Trade index
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIbetWSTTradeResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ibet_wst/erc20/balance:
    get:
      tags:
        - '[misc] ibet_wst'
      summary: Get Erc20 Balance
      description: |-
        Get ERC20 token balance

        - This endpoint retrieves the balance of a specific ERC20 token for a given account address.
        - Now, it supports only ERC20 tokens that are deployed on the Ethereum network.
      operationId: GetERC20Balance
      parameters:
        - name: token_address
          in: query
          required: true
          schema:
            type: string
            description: Token contract address to check balance
            title: Token Address
          description: Token contract address to check balance
        - name: account_address
          in: query
          required: true
          schema:
            type: string
            description: Account address to check balance
            title: Account Address
          description: Account address to check balance
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetERC20BalanceResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /ibet_wst/erc20/allowance:
    get:
      tags:
        - '[misc] ibet_wst'
      summary: Get Erc20 Allowance
      description: |-
        Get ERC20 token allowance

        - This endpoint retrieves the allowance of a specific ERC20 token for a given account address.
        - Now, it supports only ERC20 tokens that are deployed on the Ethereum network.
      operationId: GetERC20Allowance
      parameters:
        - name: token_address
          in: query
          required: true
          schema:
            type: string
            description: Token contract address to check allowance
            title: Token Address
          description: Token contract address to check allowance
        - name: account_address
          in: query
          required: true
          schema:
            type: string
            description: Account address to check allowance
            title: Account Address
          description: Account address to check allowance
        - name: spender_address
          in: query
          required: true
          schema:
            type: string
            description: Spender address to check allowance
            title: Spender Address
          description: Spender address to check allowance
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetERC20AllowanceResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
  /settlement/dvp/agent/accounts:
    get:
      tags:
        - '[misc] settlement_agent'
      summary: List All Accounts
      description: List all DVP-Payment Agent accounts
      operationId: ListAllDVPAgentAccounts
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllDVPAgentAccountResponse'
    post:
      tags:
        - '[misc] settlement_agent'
      summary: Create Account
      description: Create DVP-Payment Agent Account
      operationId: CreateDVPAgentAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDVPAgentAccountRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DVPAgentAccountResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /settlement/dvp/agent/account/{account_address}:
    delete:
      tags:
        - '[misc] settlement_agent'
      summary: Delete Account
      description: Logically delete an DVP-Payment Agent Account
      operationId: DeleteDVPAgentAccount
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DVPAgentAccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /settlement/dvp/agent/account/{account_address}/eoa_password:
    post:
      tags:
        - '[misc] settlement_agent'
      summary: Change Eoa Password
      description: Change Agent's EOA Password
      operationId: ChangeDVPAgentAccountPassword
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DVPAgentAccountChangeEOAPasswordRequest'
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /settlement/dvp/agent/{exchange_address}/deliveries:
    get:
      tags:
        - '[misc] settlement_agent'
      summary: List All Dvp Agent Deliveries
      description: List all DVP deliveries for paying agent
      operationId: ListAllDVPAgentDeliveries
      parameters:
        - name: exchange_address
          in: path
          required: true
          schema:
            type: string
            title: Exchange Address
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: agent_address
          in: query
          required: true
          schema:
            type: string
            description: Agent address
            title: Agent Address
          description: Agent address
        - name: token_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Token address
            title: Token Address
          description: Token address
        - name: seller_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Seller address
            title: Seller Address
          description: Seller address
        - name: buyer_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Buyer address
            title: Buyer Address
          description: Buyer address
        - name: valid
          in: query
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: 'null'
            description: Valid flag
            title: Valid
          description: Valid flag
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/DeliveryStatus'
              - type: 'null'
            description: Delivery status
            title: Status
          description: Delivery status
        - name: create_blocktimestamp_from
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Create block timestamp filter(From)
            title: Create Blocktimestamp From
          description: Create block timestamp filter(From)
        - name: create_blocktimestamp_to
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Create block timestamp filter(To)
            title: Create Blocktimestamp To
          description: Create block timestamp filter(To)
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 1
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllDVPAgentDeliveriesResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /settlement/dvp/agent/{exchange_address}/delivery/{delivery_id}:
    post:
      tags:
        - '[misc] settlement_agent'
      summary: Update Dvp Agent Delivery
      description: Finish/Abort DVP delivery
      operationId: UpdateDVPAgentDelivery
      parameters:
        - name: exchange_address
          in: path
          required: true
          schema:
            type: string
            title: Exchange Address
        - name: delivery_id
          in: path
          required: true
          schema:
            type: string
            title: Delivery Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/FinishDVPDeliveryRequest'
                - $ref: '#/components/schemas/AbortDVPDeliveryRequest'
              title: Data
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /blockchain_explorer/block_data:
    get:
      tags:
        - '[misc] blockchain_explorer'
      summary: '[ibet Blockchain Explorer] List block data'
      description: |-
        Returns a list of block data within the specified block number range.
        The maximum number of search results is 1000.
      operationId: ListBlockData
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: from_block_number
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            title: From Block Number
        - name: to_block_number
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            title: To Block Number
        - name: sort_order
          in: query
          required: false
          schema:
            anyOf:
              - $ref: '#/components/schemas/SortOrder'
              - type: 'null'
            description: 'Sort order (0: ASC, 1: DESC)'
            default: 0
            title: Sort Order
          description: 'Sort order (0: ASC, 1: DESC)'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockDataListResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseLimitExceededErrorResponse'
  /blockchain_explorer/block_data/{block_number}:
    get:
      tags:
        - '[misc] blockchain_explorer'
      summary: '[ibet Blockchain Explorer] Retrieve block data'
      description: Returns block data in the specified block number.
      operationId: GetBlockData
      parameters:
        - name: block_number
          in: path
          required: true
          schema:
            type: integer
            minimum: 0
            description: Block number
            title: Block Number
          description: Block number
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockDataResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /blockchain_explorer/tx_data:
    get:
      tags:
        - '[misc] blockchain_explorer'
      summary: '[ibet Blockchain Explorer] List tx data'
      description: |-
        Returns a list of transactions by various search parameters.
        The maximum number of search results is 10000.
      operationId: ListTxData
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Offset for pagination
            title: Offset
          description: Offset for pagination
        - name: limit
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: Limit for pagination
            title: Limit
          description: Limit for pagination
        - name: block_number
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
                minimum: 0
              - type: 'null'
            description: block number
            title: Block Number
          description: block number
        - name: from_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tx from
            title: From Address
          description: tx from
        - name: to_address
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: tx to
            title: To Address
          description: tx to
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxDataListResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseLimitExceededErrorResponse'
  /blockchain_explorer/tx_data/{hash}:
    get:
      tags:
        - '[misc] blockchain_explorer'
      summary: '[ibet Blockchain Explorer] Retrieve transaction data'
      description: Searching for the transaction by transaction hash
      operationId: GetTxData
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
            description: Transaction hash
            title: Hash
          description: Transaction hash
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxDataResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /freeze_log/accounts:
    get:
      tags:
        - '[misc] freeze_log'
      summary: List All Accounts
      description: List all freeze-logging accounts
      operationId: ListAllFreezeLogAccount
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllFreezeLogAccountResponse'
    post:
      tags:
        - '[misc] freeze_log'
      summary: Create Account
      description: Create Freeze-Logging Account
      operationId: CreateFreezeLogAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFreezeLogAccountRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreezeLogAccountResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /freeze_log/accounts/{account_address}:
    delete:
      tags:
        - '[misc] freeze_log'
      summary: Delete Account
      description: Logically delete an freeze-logging account
      operationId: DeleteFreezeLogAccount
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreezeLogAccountResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
  /freeze_log/accounts/{account_address}/eoa_password:
    post:
      tags:
        - '[misc] freeze_log'
      summary: Change Eoa Password
      description: Change Account's EOA Password
      operationId: ChangeFreezeLogAccountPassword
      parameters:
        - name: account_address
          in: path
          required: true
          schema:
            type: string
            title: Account Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreezeLogAccountChangeEOAPasswordRequest'
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
  /freeze_log/logs:
    post:
      tags:
        - '[misc] freeze_log'
      summary: Record New Log
      operationId: RecordNewFreezeLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordNewFreezeLogRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordNewFreezeLogResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
  /freeze_log/logs/{log_index}:
    post:
      tags:
        - '[misc] freeze_log'
      summary: Update Log
      operationId: UpdateFreezeLog
      parameters:
        - name: log_index
          in: path
          required: true
          schema:
            type: integer
            description: Log index
            title: Log Index
          description: Log index
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFreezeLogRequest'
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error422Model'
        '400':
          description: Invalid Parameter Error / Send Transaction Error / 
            Contract Revert Error etc
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterErrorResponse'
        '503':
          description: Service Unavailable Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTransactionErrorResponse'
    get:
      tags:
        - '[misc] freeze_log'
      summary: Retrieve Log
      operationId: RetrieveFreezeLog
      parameters:
        - name: log_index
          in: path
          required: true
          schema:
            type: integer
            description: Log index
            title: Log Index
          description: Log index
        - name: account_address
          in: query
          required: true
          schema:
            type: string
            description: Logging account address
            title: Account Address
          description: Logging account address
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveFreezeLogResponse'
        '404':
          description: Not Found Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Model'
components:
  schemas:
    AbortDVPDeliveryRequest:
      properties:
        operation_type:
          type: string
          const: Abort
          title: Operation Type
        account_address:
          type: string
          title: Account Address
          description: Agent account address
        eoa_password:
          type: string
          title: Eoa Password
          description: Agent account key file password
      type: object
      required:
        - operation_type
        - account_address
        - eoa_password
      title: AbortDVPDeliveryRequest
      description: DVP delivery abort schema (REQUEST)
    AcceptIbetWSTTradeRequest:
      properties:
        index:
          type: integer
          exclusiveMinimum: 0.0
          title: Index
          description: Trade index
        authorizer:
          type: string
          title: Authorizer
          description: Authorizer address
        authorization:
          $ref: '#/components/schemas/IbetWSTAuthorization'
          description: Authorization for the transaction
      type: object
      required:
        - index
        - authorizer
        - authorization
      title: AcceptIbetWSTTradeRequest
      description: AcceptIbetWSTTrade request schema
    Account:
      properties:
        issuer_address:
          type: string
          title: Issuer Address
        rsa_public_key:
          anyOf:
            - type: string
            - type: 'null'
          title: Rsa Public Key
        rsa_status:
          $ref: '#/components/schemas/AccountRsaStatus'
        is_deleted:
          type: boolean
          title: Is Deleted
      type: object
      required:
        - issuer_address
        - rsa_public_key
        - rsa_status
        - is_deleted
      title: Account
      description: Account schema
    AccountAuthTokenRequest:
      properties:
        valid_duration:
          type: integer
          maximum: 259200.0
          minimum: 0.0
          title: Valid Duration
      type: object
      title: AccountAuthTokenRequest
      description: Account Create Auth Token schema (REQUEST)
    AccountAuthTokenResponse:
      properties:
        auth_token:
          type: string
          title: Auth Token
        usage_start:
          type: string
          format: date-time
          title: Usage Start
        valid_duration:
          type: integer
          title: Valid Duration
      type: object
      required:
        - auth_token
        - usage_start
        - valid_duration
      title: AccountAuthTokenResponse
      description: Account Auth Token schema (RESPONSE)
    AccountChangeEOAPasswordRequest:
      properties:
        old_eoa_password:
          type: string
          title: Old Eoa Password
        eoa_password:
          type: string
          title: Eoa Password
      type: object
      required:
        - old_eoa_password
        - eoa_password
      title: AccountChangeEOAPasswordRequest
      description: Account Change EOA Password schema (REQUEST)
    AccountChangeRSAPassphraseRequest:
      properties:
        old_rsa_passphrase:
          type: string
          title: Old Rsa Passphrase
        rsa_passphrase:
          type: string
          title: Rsa Passphrase
      type: object
      required:
        - old_rsa_passphrase
        - rsa_passphrase
      title: AccountChangeRSAPassphraseRequest
      description: Account Change RSA Passphrase schema (REQUEST)
    AccountCreateKeyRequest:
      properties:
        eoa_password:
          type: string
          title: Eoa Password
      type: object
      required:
        - eoa_password
      title: AccountCreateKeyRequest
      description: Account Create Key schema (REQUEST)
    AccountGenerateRsaKeyRequest:
      properties:
        rsa_passphrase:
          anyOf:
            - type: string
            - type: 'null'
          title: Rsa Passphrase
      type: object
      title: AccountGenerateRsaKeyRequest
      description: Account Change Rsa Key schema (REQUEST)
    AccountResponse:
      $ref: '#/components/schemas/Account'
      title: AccountResponse
      description: Account schema (Response)
    AccountRsaStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      title: AccountRsaStatus
      description: |-
        0:UNSET
        1:CREATING
        2:CHANGING
        3:SET
    AddIbetWSTWhitelistRequest:
      properties:
        st_account_address:
          type: string
          title: St Account Address
          description: ST account address to be added to the whitelist
        sc_account_address_in:
          type: string
          title: Sc Account Address In
          description: SC account address for deposits
        sc_account_address_out:
          type: string
          title: Sc Account Address Out
          description: SC account address for withdrawals
      type: object
      required:
        - st_account_address
        - sc_account_address_in
        - sc_account_address_out
      title: AddIbetWSTWhitelistRequest
      description: AddIbetWSTWhitelist request schema
    AuthTokenAlreadyExistsErrorCode:
      type: integer
      enum:
        - 3
      title: AuthTokenAlreadyExistsErrorCode
    AuthTokenAlreadyExistsErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/AuthTokenAlreadyExistsErrorCode'
          examples:
            - 3
        title:
          type: string
          title: Title
          examples:
            - AuthTokenAlreadyExistsError
      type: object
      required:
        - code
        - title
      title: AuthTokenAlreadyExistsErrorMetainfo
    AuthTokenAlreadyExistsErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/AuthTokenAlreadyExistsErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: AuthTokenAlreadyExistsErrorResponse
    AuthorizationErrorCode:
      type: integer
      enum:
        - 1
      title: AuthorizationErrorCode
    AuthorizationErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/AuthorizationErrorCode'
          examples:
            - 1
        title:
          type: string
          title: Title
          examples:
            - AuthorizationError
      type: object
      required:
        - code
        - title
      title: AuthorizationErrorMetainfo
    AuthorizationErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/AuthorizationErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: AuthorizationErrorResponse
    BatchCreateChildAccountRequest:
      properties:
        personal_information_list:
          items:
            $ref: '#/components/schemas/PersonalInfoInput'
          type: array
          title: Personal Information List
      type: object
      required:
        - personal_information_list
      title: BatchCreateChildAccountRequest
      description: Batch create issuer's child accounts schema (REQUEST)
    BatchCreateChildAccountResponse:
      properties:
        child_account_index_list:
          items:
            type: integer
          type: array
          title: Child Account Index List
      type: object
      required:
        - child_account_index_list
      title: BatchCreateChildAccountResponse
      description: Batch create issuer's child accounts schema (RESPONSE)
    BatchIssueRedeemProcessedMetaInfo:
      properties:
        category:
          $ref: '#/components/schemas/BatchIssueRedeemProcessingCategory'
        upload_id:
          type: string
          title: Upload Id
        error_data_id:
          items:
            type: integer
          type: array
          title: Error Data Id
        token_address:
          type: string
          title: Token Address
        token_type:
          $ref: '#/components/schemas/TokenType'
      type: object
      required:
        - category
        - upload_id
        - error_data_id
        - token_address
        - token_type
      title: BatchIssueRedeemProcessedMetaInfo
    BatchIssueRedeemProcessedNotification:
      properties:
        id:
          type: integer
          title: Id
        notice_id:
          type: string
          title: Notice Id
        issuer_address:
          type: string
          title: Issuer Address
        priority:
          type: integer
          title: Priority
        notice_code:
          type: integer
          maximum: 3.0
          minimum: 0.0
          title: Notice Code
          description: |2-
             - 0: All records successfully processed
             - 1: Issuer does not exist
             - 2: Failed to decode keyfile
             - 3: Some records are failed to send transaction
        created:
          type: string
          title: Created
        notice_type:
          type: string
          const: BatchIssueProcessed
          title: Notice Type
        metainfo:
          $ref: '#/components/schemas/BatchIssueRedeemProcessedMetaInfo'
      type: object
      required:
        - id
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      title: BatchIssueRedeemProcessedNotification
    BatchIssueRedeemProcessingCategory:
      type: string
      enum:
        - Issue
        - Redeem
      title: BatchIssueRedeemProcessingCategory
      description: Batch Issue/Redeem Category
    BatchIssueRedeemUpload:
      properties:
        batch_id:
          type: string
          title: Batch Id
          description: UUID v4 required
        issuer_address:
          type: string
          title: Issuer Address
        token_type:
          $ref: '#/components/schemas/TokenType'
        token_address:
          type: string
          title: Token Address
        processed:
          type: boolean
          title: Processed
        created:
          type: string
          title: Created
      type: object
      required:
        - batch_id
        - issuer_address
        - token_type
        - token_address
        - processed
        - created
      title: BatchIssueRedeemUpload
      description: Batch issue/redeem Upload
      examples:
        - batch_id: cfd83622-34dc-4efe-a68b-2cc275d3d824
          created: '2022-09-02T19:49:33.370874+09:00'
          issuer_address: '0x0000000000000000000000000000000000000000'
          processed: true
          token_address: '0x0000000000000000000000000000000000000000'
          token_type: Bond
    BatchIssueRedeemUploadIdResponse:
      properties:
        batch_id:
          type: string
          title: Batch Id
      type: object
      required:
        - batch_id
      title: BatchIssueRedeemUploadIdResponse
      description: Batch issue/redeem upload id (RESPONSE)
    BatchIssueRedeemUploadWithResult:
      properties:
        batch_id:
          type: string
          title: Batch Id
          description: UUID v4 required
        issuer_address:
          type: string
          title: Issuer Address
        token_type:
          $ref: '#/components/schemas/TokenType'
        token_address:
          type: string
          title: Token Address
        processed:
          type: boolean
          title: Processed
        created:
          type: string
          title: Created
        results:
          items:
            $ref: '#/components/schemas/GetBatchIssueRedeemResult'
          type: array
          title: Results
      type: object
      required:
        - batch_id
        - issuer_address
        - token_type
        - token_address
        - processed
        - created
        - results
      title: BatchIssueRedeemUploadWithResult
      description: Batch issue/redeem Upload
      examples:
        - batch_id: cfd83622-34dc-4efe-a68b-2cc275d3d824
          created: '2022-09-02T19:49:33.370874+09:00'
          issuer_address: '0x0000000000000000000000000000000000000000'
          processed: true
          results:
            - account_address: string
              amount: 0
              personal_information:
                address: string
                birth: string
                email: string
                is_corporate: true
                key_manager: string
                name: string
                postal_code: string
                tax_category: 0
              status: 0
          token_address: '0x0000000000000000000000000000000000000000'
          token_type: Bond
    BatchPersonalInfoRegistrationValidationErrorCode:
      type: integer
      enum:
        - 12
      title: BatchPersonalInfoRegistrationValidationErrorCode
    BatchPersonalInfoRegistrationValidationErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/BatchPersonalInfoRegistrationValidationErrorCode'
          examples:
            - 12
        title:
          type: string
          title: Title
          examples:
            - BatchPersonalInfoRegistrationValidationError
      type: object
      required:
        - code
        - title
      title: BatchPersonalInfoRegistrationValidationErrorMetainfo
    BatchPersonalInfoRegistrationValidationErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/BatchPersonalInfoRegistrationValidationErrorMetainfo'
        detail:
          $ref: '#/components/schemas/InvalidUploadErrorDetail'
      type: object
      required:
        - meta
        - detail
      title: BatchPersonalInfoRegistrationValidationErrorResponse
      description: The uploaded list of batch personal info registration has 
        invalid records
    BatchRegisterPersonalInfoErrorMetaInfo:
      properties:
        upload_id:
          type: string
          title: Upload Id
        token_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Token Address
        error_registration_id:
          items:
            type: integer
          type: array
          title: Error Registration Id
      type: object
      required:
        - upload_id
        - error_registration_id
      title: BatchRegisterPersonalInfoErrorMetaInfo
    BatchRegisterPersonalInfoErrorNotification:
      properties:
        id:
          type: integer
          title: Id
        notice_id:
          type: string
          title: Notice Id
        issuer_address:
          type: string
          title: Issuer Address
        priority:
          type: integer
          title: Priority
        notice_code:
          type: integer
          maximum: 1.0
          minimum: 0.0
          title: Notice Code
          description: |2
             - 0: Issuer does not exist
             - 1: Failed to send transaction
        created:
          type: string
          title: Created
        notice_type:
          type: string
          const: BatchRegisterPersonalInfoError
          title: Notice Type
        metainfo:
          $ref: '#/components/schemas/BatchRegisterPersonalInfoErrorMetaInfo'
      type: object
      required:
        - id
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      title: BatchRegisterPersonalInfoErrorNotification
    BatchRegisterPersonalInfoResult:
      properties:
        status:
          type: integer
          title: Status
        account_address:
          type: string
          title: Account Address
        key_manager:
          type: string
          title: Key Manager
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        postal_code:
          anyOf:
            - type: string
            - type: 'null'
          title: Postal Code
        address:
          anyOf:
            - type: string
            - type: 'null'
          title: Address
        email:
          anyOf:
            - type: string
            - type: 'null'
          title: Email
        birth:
          anyOf:
            - type: string
            - type: 'null'
          title: Birth
        is_corporate:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Corporate
        tax_category:
          anyOf:
            - type: integer
            - type: 'null'
          title: Tax Category
      type: object
      required:
        - status
        - account_address
        - key_manager
        - name
        - postal_code
        - address
        - email
        - birth
        - is_corporate
        - tax_category
      title: BatchRegisterPersonalInfoResult
      description: Result of Creating Batch Register PersonalInfo schema 
        (RESPONSE)
    BatchRegisterPersonalInfoUploadResponse:
      properties:
        batch_id:
          type: string
          title: Batch Id
          description: UUID v4 required
        status:
          $ref: '#/components/schemas/BatchRegisterPersonalInfoUploadStatus'
        created:
          type: string
          title: Created
      type: object
      required:
        - batch_id
        - status
        - created
      title: BatchRegisterPersonalInfoUploadResponse
      description: Batch Register PersonalInfo schema (RESPONSE)
      examples:
        - batch_id: cfd83622-34dc-4efe-a68b-2cc275d3d824
          created: '2022-09-02T19:49:33.370874+09:00'
          status: pending
    BatchRegisterPersonalInfoUploadStatus:
      type: string
      enum:
        - pending
        - done
        - failed
      title: BatchRegisterPersonalInfoUploadStatus
      description: Batch Register PersonalInfo Upload Status
    BlockData:
      properties:
        number:
          type: integer
          minimum: 0.0
          title: Number
          description: Block number
        hash:
          type: string
          title: Hash
          description: Block hash
        transactions:
          items:
            type: string
          type: array
          title: Transactions
          description: Transaction list
        timestamp:
          type: integer
          title: Timestamp
        gas_limit:
          type: integer
          title: Gas Limit
        gas_used:
          type: integer
          title: Gas Used
        size:
          type: integer
          minimum: 0.0
          title: Size
      type: object
      required:
        - number
        - hash
        - transactions
        - timestamp
        - gas_limit
        - gas_used
        - size
      title: BlockData
    BlockDataDetail:
      properties:
        number:
          type: integer
          minimum: 0.0
          title: Number
          description: Block number
        parent_hash:
          type: string
          title: Parent Hash
        sha3_uncles:
          type: string
          title: Sha3 Uncles
        miner:
          type: string
          title: Miner
        state_root:
          type: string
          title: State Root
        transactions_root:
          type: string
          title: Transactions Root
        receipts_root:
          type: string
          title: Receipts Root
        logs_bloom:
          type: string
          title: Logs Bloom
        difficulty:
          type: integer
          title: Difficulty
        gas_limit:
          type: integer
          title: Gas Limit
        gas_used:
          type: integer
          title: Gas Used
        timestamp:
          type: integer
          title: Timestamp
        proof_of_authority_data:
          type: string
          title: Proof Of Authority Data
        mix_hash:
          type: string
          title: Mix Hash
        nonce:
          type: string
          title: Nonce
        hash:
          type: string
          title: Hash
          description: Block hash
        size:
          type: integer
          minimum: 0.0
          title: Size
        transactions:
          items:
            type: string
          type: array
          title: Transactions
          description: Transaction list
      type: object
      required:
        - number
        - parent_hash
        - sha3_uncles
        - miner
        - state_root
        - transactions_root
        - receipts_root
        - logs_bloom
        - difficulty
        - gas_limit
        - gas_used
        - timestamp
        - proof_of_authority_data
        - mix_hash
        - nonce
        - hash
        - size
        - transactions
      title: BlockDataDetail
    BlockDataListResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        block_data:
          items:
            $ref: '#/components/schemas/BlockData'
          type: array
          title: Block Data
      type: object
      required:
        - result_set
        - block_data
      title: BlockDataListResponse
    BlockDataResponse:
      $ref: '#/components/schemas/BlockDataDetail'
      title: BlockDataResponse
    BlockNumberResponse:
      properties:
        block_number:
          type: integer
          title: Block Number
      type: object
      required:
        - block_number
      title: BlockNumberResponse
      description: Block Number schema (Response)
    BulkTransferErrorMetaInfo:
      properties:
        upload_id:
          type: string
          title: Upload Id
        token_type:
          $ref: '#/components/schemas/TokenType'
        token_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Token Address
        error_transfer_id:
          items:
            type: integer
          type: array
          title: Error Transfer Id
      type: object
      required:
        - upload_id
        - token_type
        - error_transfer_id
      title: BulkTransferErrorMetaInfo
    BulkTransferErrorNotification:
      properties:
        id:
          type: integer
          title: Id
        notice_id:
          type: string
          title: Notice Id
        issuer_address:
          type: string
          title: Issuer Address
        priority:
          type: integer
          title: Priority
        notice_code:
          type: integer
          maximum: 2.0
          minimum: 0.0
          title: Notice Code
          description: |2
             - 0: Issuer does not exist
             - 1: Could not get the private key of the issuer
             - 2: Failed to send transaction
        created:
          type: string
          title: Created
        notice_type:
          type: string
          const: BulkTransferError
          title: Notice Type
        metainfo:
          $ref: '#/components/schemas/BulkTransferErrorMetaInfo'
      type: object
      required:
        - id
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      title: BulkTransferErrorNotification
    BulkTransferUpload:
      properties:
        upload_id:
          type: string
          title: Upload Id
          description: Upload id
        issuer_address:
          type: string
          title: Issuer Address
          description: Issuer account address
        token_type:
          $ref: '#/components/schemas/TokenType'
          description: Token type
        token_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Token Address
          description: Token address
        status:
          type: integer
          title: Status
          description: Processing status
        created:
          type: string
          title: Created
          description: Upload created datetime (ISO8601)
      type: object
      required:
        - upload_id
        - issuer_address
        - token_type
        - token_address
        - status
        - created
      title: BulkTransferUpload
      description: Bulk transfer upload
    BulkTransferUploadIdResponse:
      properties:
        upload_id:
          type: string
          title: Upload Id
          description: Upload id
      type: object
      required:
        - upload_id
      title: BulkTransferUploadIdResponse
      description: bulk transfer upload id
    BulkTransferUploadRecord:
      properties:
        upload_id:
          type: string
          title: Upload Id
          description: Upload id
        issuer_address:
          type: string
          title: Issuer Address
          description: Issuer account address
        token_address:
          type: string
          title: Token Address
          description: Token address
        token_type:
          $ref: '#/components/schemas/TokenType'
          description: Token type
        from_address:
          type: string
          title: From Address
          description: Transfer source address
        from_address_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
          description: Personal information of the from_address
        to_address:
          type: string
          title: To Address
          description: Transfer destination address
        to_address_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
          description: Personal information of the to_address
        amount:
          type: integer
          title: Amount
          description: Transfer amount
        status:
          type: integer
          title: Status
          description: Transfer status
        transaction_error_code:
          anyOf:
            - type: integer
            - type: 'null'
          title: Transaction Error Code
          description: Transfer error code
        transaction_error_message:
          anyOf:
            - type: string
            - type: 'null'
          title: Transaction Error Message
          description: Transfer error message
      type: object
      required:
        - upload_id
        - issuer_address
        - token_address
        - token_type
        - from_address
        - from_address_personal_information
        - to_address
        - to_address_personal_information
        - amount
        - status
        - transaction_error_code
        - transaction_error_message
      title: BulkTransferUploadRecord
      description: Bulk transfer upload record
    BulkTransferUploadRecordResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        bulk_transfer_upload_records:
          items:
            $ref: '#/components/schemas/BulkTransferUploadRecord'
          type: array
          title: Bulk Transfer Upload Records
      type: object
      required:
        - result_set
        - bulk_transfer_upload_records
      title: BulkTransferUploadRecordResponse
      description: Bulk transfer upload records
    BulkTransferUploadResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        bulk_transfer_uploads:
          items:
            $ref: '#/components/schemas/BulkTransferUpload'
          type: array
          title: Bulk Transfer Uploads
          description: Bulk transfer uploads
          default: []
      type: object
      required:
        - result_set
      title: BulkTransferUploadResponse
      description: Bulk transfer uploads
    BurnIbetWSTRequest:
      properties:
        value:
          type: integer
          exclusiveMinimum: 0.0
          title: Value
          description: Amount of IbetWST to burn
        authorizer:
          type: string
          title: Authorizer
          description: Authorizer address
        authorization:
          $ref: '#/components/schemas/IbetWSTAuthorization'
          description: Authorization for the transaction
      type: object
      required:
        - value
        - authorizer
        - authorization
      title: BurnIbetWSTRequest
      description: BurnIbetWST request schema
    CancelDVPDeliveryRequest:
      properties:
        operation_type:
          type: string
          const: Cancel
          title: Operation Type
      type: object
      required:
        - operation_type
      title: CancelDVPDeliveryRequest
      description: DVP delivery cancel schema (REQUEST)
    CancelIbetWSTTradeRequest:
      properties:
        index:
          type: integer
          exclusiveMinimum: 0.0
          title: Index
          description: Trade index
        authorizer:
          type: string
          title: Authorizer
          description: Authorizer address
        authorization:
          $ref: '#/components/schemas/IbetWSTAuthorization'
          description: Authorization for the transaction
      type: object
      required:
        - index
        - authorizer
        - authorization
      title: CancelIbetWSTTradeRequest
      description: CancelIbetWSTTrade request schema
    ChildAccount:
      properties:
        issuer_address:
          type: string
          title: Issuer Address
        child_account_index:
          type: integer
          title: Child Account Index
        child_account_address:
          type: string
          title: Child Account Address
        personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
        created:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created
        modified:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Modified
      type: object
      required:
        - issuer_address
        - child_account_index
        - child_account_address
        - personal_information
        - created
        - modified
      title: ChildAccount
      description: Child account schema
    ChildAccountResponse:
      $ref: '#/components/schemas/ChildAccount'
      title: ChildAccountResponse
      description: Child account schema (Response)
    ContractRevertErrorCode:
      type: integer
      enum:
        - 0
        - 100001
        - 100002
        - 100101
        - 100102
        - 110001
        - 110002
        - 110101
        - 110102
        - 110201
        - 110202
        - 110301
        - 110401
        - 110402
        - 110501
        - 110502
        - 110503
        - 110504
        - 110601
        - 110701
        - 110702
        - 110801
        - 110802
        - 110901
        - 110902
        - 111001
        - 111002
        - 111101
        - 111102
        - 111201
        - 111301
        - 111401
        - 111501
        - 111601
        - 111701
        - 120001
        - 120002
        - 120101
        - 120102
        - 120201
        - 120202
        - 120301
        - 120401
        - 120402
        - 120501
        - 120502
        - 120503
        - 120601
        - 120701
        - 120702
        - 120801
        - 120802
        - 120901
        - 120902
        - 121001
        - 121002
        - 121101
        - 121102
        - 121201
        - 121301
        - 121401
        - 121501
        - 121601
        - 121701
        - 130001
        - 130101
        - 130102
        - 130201
        - 130202
        - 130203
        - 130301
        - 130401
        - 130501
        - 130502
        - 130601
        - 140001
        - 140101
        - 140102
        - 140201
        - 140202
        - 140203
        - 140301
        - 140401
        - 140402
        - 140501
        - 150001
        - 150101
        - 150201
        - 150202
        - 150301
        - 150401
        - 200001
        - 210001
        - 210101
        - 210102
        - 210103
        - 210104
        - 210201
        - 210202
        - 210203
        - 210204
        - 210301
        - 210302
        - 210401
        - 210402
        - 210403
        - 210501
        - 210502
        - 210503
        - 210504
        - 210601
        - 220001
        - 230001
        - 230002
        - 230003
        - 230101
        - 230102
        - 230103
        - 230104
        - 230201
        - 230202
        - 230203
        - 230204
        - 230301
        - 240001
        - 240002
        - 240003
        - 240101
        - 240102
        - 240103
        - 240104
        - 240201
        - 240202
        - 240203
        - 240204
        - 240205
        - 240301
        - 240302
        - 240303
        - 240304
        - 240401
        - 250001
        - 260001
        - 260002
        - 260003
        - 260004
        - 260101
        - 260102
        - 260103
        - 260104
        - 260201
        - 260202
        - 260203
        - 260204
        - 260205
        - 260206
        - 260301
        - 260302
        - 260303
        - 260304
        - 260305
        - 260306
        - 260401
        - 260402
        - 260403
        - 260404
        - 260501
        - 260601
        - 300001
        - 300101
        - 300201
        - 300301
        - 300401
        - 300501
        - 400001
        - 400002
        - 500001
        - 500101
        - 600001
        - 600002
        - 610001
        - 610011
        - 620001
      title: ContractRevertErrorCode
    ContractRevertErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/ContractRevertErrorCode'
          examples:
            - 0
        title:
          type: string
          title: Title
          examples:
            - ContractRevertError
      type: object
      required:
        - code
        - title
      title: ContractRevertErrorMetainfo
    ContractRevertErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/ContractRevertErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: ContractRevertErrorResponse
      description: |-
        Revert error occurs from smart-contract

        - Error code: https://github.com/BoostryJP/ibet-SmartContract/blob/master/docs/Errors.md
        - If contract doesn't throw error code, 0 is returned.
    CreateChildAccountResponse:
      properties:
        child_account_index:
          type: integer
          title: Child Account Index
      type: object
      required:
        - child_account_index
      title: CreateChildAccountResponse
      description: Create a issuer's child account schema (RESPONSE)
    CreateDVPAgentAccountRequest:
      properties:
        eoa_password:
          type: string
          title: Eoa Password
          description: EOA keyfile password
      type: object
      required:
        - eoa_password
      title: CreateDVPAgentAccountRequest
      description: DVP agent account create schema (REQUEST)
    CreateDVPDeliveryRequest:
      properties:
        token_address:
          type: string
          title: Token Address
        buyer_address:
          type: string
          title: Buyer Address
        amount:
          type: integer
          maximum: 1000000000000.0
          minimum: 1.0
          title: Amount
        agent_address:
          type: string
          title: Agent Address
        data:
          type: string
          title: Data
        settlement_service_type:
          type: string
          title: Settlement Service Type
      type: object
      required:
        - token_address
        - buyer_address
        - amount
        - agent_address
        - data
        - settlement_service_type
      title: CreateDVPDeliveryRequest
      description: DVP delivery create schema (REQUEST)
    CreateFreezeLogAccountRequest:
      properties:
        eoa_password:
          type: string
          title: Eoa Password
          description: EOA keyfile password
      type: object
      required:
        - eoa_password
      title: CreateFreezeLogAccountRequest
      description: Freeze-Logging account create schema (REQUEST)
    CreateLedgerInfoMetaInfo:
      properties:
        token_address:
          type: string
          title: Token Address
        token_type:
          $ref: '#/components/schemas/TokenType'
        ledger_id:
          type: integer
          title: Ledger Id
      type: object
      required:
        - token_address
        - token_type
        - ledger_id
      title: CreateLedgerInfoMetaInfo
    CreateLedgerInfoNotification:
      properties:
        id:
          type: integer
          title: Id
        notice_id:
          type: string
          title: Notice Id
        issuer_address:
          type: string
          title: Issuer Address
        priority:
          type: integer
          title: Priority
        notice_code:
          type: integer
          maximum: 0.0
          minimum: 0.0
          title: Notice Code
          description: " - 0: Created ledger info successfully\n"
        created:
          type: string
          title: Created
        notice_type:
          type: string
          const: CreateLedgerInfo
          title: Notice Type
        metainfo:
          $ref: '#/components/schemas/CreateLedgerInfoMetaInfo'
      type: object
      required:
        - id
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      title: CreateLedgerInfoNotification
    CreateTokenHoldersListRequest:
      properties:
        list_id:
          type: string
          title: List Id
          description: UUID v4 required
        block_number:
          type: integer
          minimum: 1.0
          title: Block Number
      type: object
      required:
        - list_id
        - block_number
      title: CreateTokenHoldersListRequest
      description: Create Token Holders List schema (REQUEST)
      examples:
        - block_number: 765
          list_id: cfd83622-34dc-4efe-a68b-2cc275d3d824
    CreateTokenHoldersListResponse:
      properties:
        list_id:
          type: string
          title: List Id
          description: UUID v4 required
        status:
          $ref: '#/components/schemas/TokenHolderBatchStatus'
      type: object
      required:
        - list_id
        - status
      title: CreateTokenHoldersListResponse
      description: Create Token Holders List schema (RESPONSE)
      examples:
        - list_id: cfd83622-34dc-4efe-a68b-2cc275d3d824
          status: pending
    CreateUpdateChildAccountRequest:
      properties:
        personal_information:
          $ref: '#/components/schemas/PersonalInfoInput'
      type: object
      required:
        - personal_information
      title: CreateUpdateChildAccountRequest
      description: Create or update a issuer's child account schema (REQUEST)
    CreateUpdateLedgerDetailsDataRequest:
      properties:
        name:
          anyOf:
            - type: string
              maxLength: 200
            - type: 'null'
          title: Name
        address:
          anyOf:
            - type: string
              maxLength: 200
            - type: 'null'
          title: Address
        amount:
          anyOf:
            - type: integer
              maximum: 1000000000000.0
              minimum: 0.0
            - type: 'null'
          title: Amount
        price:
          anyOf:
            - type: integer
              maximum: 1000000000000.0
              minimum: 0.0
            - type: 'null'
          title: Price
        balance:
          anyOf:
            - type: integer
              maximum: 9.223372036854776e+18
              minimum: 0.0
            - type: 'null'
          title: Balance
        acquisition_date:
          anyOf:
            - type: string
              maxLength: 10
              minLength: 10
            - type: 'null'
          title: Acquisition Date
          description: YYYY/MM/DD
      type: object
      title: CreateUpdateLedgerDetailsDataRequest
      description: Create or Update Ledger Details Data Structure schema 
        (Request)
    CreateUpdateLedgerDetailsDataTemplateRequest:
      properties:
        type:
          $ref: '#/components/schemas/LedgerDetailsDataType'
        source:
          anyOf:
            - type: string
              maxLength: 42
            - type: 'null'
          title: Source
      type: object
      required:
        - type
      title: CreateUpdateLedgerDetailsDataTemplateRequest
      description: Create or Update Ledger Details Data Template schema 
        (Request)
    CreateUpdateLedgerDetailsTemplateRequest:
      properties:
        token_detail_type:
          type: string
          maxLength: 100
          title: Token Detail Type
        headers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Headers
        data:
          $ref: '#/components/schemas/CreateUpdateLedgerDetailsDataTemplateRequest'
        footers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Footers
      type: object
      required:
        - token_detail_type
        - data
      title: CreateUpdateLedgerDetailsTemplateRequest
      description: Create or Update Ledger Details Template schema (Request)
    CreateUpdateLedgerTemplateRequest:
      properties:
        token_name:
          type: string
          maxLength: 200
          title: Token Name
        headers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Headers
        details:
          items:
            $ref: '#/components/schemas/CreateUpdateLedgerDetailsTemplateRequest'
          type: array
          title: Details
        footers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Footers
      type: object
      required:
        - token_name
        - details
      title: CreateUpdateLedgerTemplateRequest
      description: Create or Update Ledger Template schema (Request)
    DVPAgentAccountChangeEOAPasswordRequest:
      properties:
        old_eoa_password:
          type: string
          title: Old Eoa Password
          description: EOA keyfile password (old)
        eoa_password:
          type: string
          title: Eoa Password
          description: EOA keyfile password (new)
      type: object
      required:
        - old_eoa_password
        - eoa_password
      title: DVPAgentAccountChangeEOAPasswordRequest
      description: DVP agent account change EOA password schema (REQUEST)
    DVPAgentAccountResponse:
      properties:
        account_address:
          type: string
          title: Account Address
        is_deleted:
          type: boolean
          title: Is Deleted
      type: object
      required:
        - account_address
        - is_deleted
      title: DVPAgentAccountResponse
      description: DVP agent account reference schema (RESPONSE)
    DVPDeliveryData:
      properties:
        delivery_type:
          type: string
          enum:
            - offering
            - primary
          title: Delivery Type
        trade_date:
          type: string
          title: Trade Date
        settlement_date:
          type: string
          title: Settlement Date
        settlement_service_account_id:
          type: string
          title: Settlement Service Account Id
        value:
          type: integer
          title: Value
      type: object
      required:
        - delivery_type
        - trade_date
        - settlement_date
        - settlement_service_account_id
        - value
      title: DVPDeliveryData
    DVPDeliveryInfoMetaInfo:
      properties:
        exchange_address:
          type: string
          title: Exchange Address
        delivery_id:
          type: integer
          title: Delivery Id
        token_address:
          type: string
          title: Token Address
        token_type:
          $ref: '#/components/schemas/TokenType'
        seller_address:
          type: string
          title: Seller Address
        buyer_address:
          type: string
          title: Buyer Address
        agent_address:
          type: string
          title: Agent Address
        amount:
          type: integer
          title: Amount
      type: object
      required:
        - exchange_address
        - delivery_id
        - token_address
        - token_type
        - seller_address
        - buyer_address
        - agent_address
        - amount
      title: DVPDeliveryInfoMetaInfo
    DVPDeliveryInfoNotification:
      properties:
        id:
          type: integer
          title: Id
        notice_id:
          type: string
          title: Notice Id
        issuer_address:
          type: string
          title: Issuer Address
        priority:
          type: integer
          title: Priority
        notice_code:
          type: integer
          maximum: 1.0
          minimum: 0.0
          title: Notice Code
          description: |2-
             notice_type: DVPDeliveryInfo
             - 0: Delivery is confirmed
             - 1: Delivery is finished
        created:
          type: string
          title: Created
        notice_type:
          type: string
          const: DVPDeliveryInfo
          title: Notice Type
        metainfo:
          $ref: '#/components/schemas/DVPDeliveryInfoMetaInfo'
      type: object
      required:
        - id
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      title: DVPDeliveryInfoNotification
    DeleteIbetWSTWhitelistRequest:
      properties:
        st_account_address:
          type: string
          title: St Account Address
          description: ST account address to be removed from the whitelist
      type: object
      required:
        - st_account_address
      title: DeleteIbetWSTWhitelistRequest
      description: DeleteIbetWSTWhitelist request schema
    DeliveryStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      title: DeliveryStatus
      description: DVP Delivery Status
    DownloadFileResponse:
      properties:
        file_id:
          type: string
          title: File Id
        issuer_address:
          type: string
          title: Issuer Address
        relation:
          anyOf:
            - type: string
            - type: 'null'
          title: Relation
        file_name:
          type: string
          title: File Name
        content:
          type: string
          title: Content
          description: Base64-encoded content
        content_size:
          type: integer
          title: Content Size
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        label:
          type: string
          title: Label
      type: object
      required:
        - file_id
        - issuer_address
        - relation
        - file_name
        - content
        - content_size
        - description
        - label
      title: DownloadFileResponse
      description: Download File schema (Response)
    E2EEResponse:
      properties:
        public_key:
          anyOf:
            - type: string
            - type: 'null'
          title: Public Key
      type: object
      required:
        - public_key
      title: E2EEResponse
      description: E2EE schema (Response)
    E2EMessagingAccountChangeEOAPasswordRequest:
      properties:
        old_eoa_password:
          type: string
          title: Old Eoa Password
        eoa_password:
          type: string
          title: Eoa Password
      type: object
      required:
        - old_eoa_password
        - eoa_password
      title: E2EMessagingAccountChangeEOAPasswordRequest
      description: E2E Messaging Account Change EOA Password schema (REQUEST)
    E2EMessagingAccountChangeRSAPassphraseRequest:
      properties:
        old_rsa_passphrase:
          type: string
          title: Old Rsa Passphrase
        rsa_passphrase:
          type: string
          title: Rsa Passphrase
      type: object
      required:
        - old_rsa_passphrase
        - rsa_passphrase
      title: E2EMessagingAccountChangeRSAPassphraseRequest
      description: E2E Messaging Account Change RSA Passphrase schema (REQUEST)
    E2EMessagingAccountCreateRequest:
      properties:
        eoa_password:
          type: string
          title: Eoa Password
        rsa_passphrase:
          anyOf:
            - type: string
            - type: 'null'
          title: Rsa Passphrase
        rsa_key_generate_interval:
          anyOf:
            - type: integer
              maximum: 10000.0
              minimum: 0.0
            - type: 'null'
          title: Rsa Key Generate Interval
          description: 0 disables auto-generate(Unit is hour)
          default: 24
        rsa_generation:
          anyOf:
            - type: integer
              maximum: 100.0
              minimum: 0.0
            - type: 'null'
          title: Rsa Generation
          description: 0 disables generation
          default: 7
      type: object
      required:
        - eoa_password
      title: E2EMessagingAccountCreateRequest
      description: E2E Messaging Account Create schema (REQUEST)
    E2EMessagingAccountResponse:
      properties:
        account_address:
          type: string
          title: Account Address
        rsa_key_generate_interval:
          anyOf:
            - type: integer
            - type: 'null'
          title: Rsa Key Generate Interval
        rsa_generation:
          anyOf:
            - type: integer
            - type: 'null'
          title: Rsa Generation
        rsa_public_key:
          anyOf:
            - type: string
            - type: 'null'
          title: Rsa Public Key
        is_deleted:
          type: boolean
          title: Is Deleted
      type: object
      required:
        - account_address
        - rsa_key_generate_interval
        - rsa_generation
        - rsa_public_key
        - is_deleted
      title: E2EMessagingAccountResponse
      description: E2E Messaging Account schema (Response)
    E2EMessagingAccountUpdateRsaKeyRequest:
      properties:
        rsa_key_generate_interval:
          anyOf:
            - type: integer
              maximum: 10000.0
              minimum: 0.0
            - type: 'null'
          title: Rsa Key Generate Interval
          description: 0 disables auto-generate(Unit is hour)
          default: 24
        rsa_generation:
          anyOf:
            - type: integer
              maximum: 100.0
              minimum: 0.0
            - type: 'null'
          title: Rsa Generation
          description: 0 disables generation
          default: 7
      type: object
      title: E2EMessagingAccountUpdateRsaKeyRequest
      description: E2E Messaging Account Rsa Key Update schema (REQUEST)
    E2EMessagingResponse:
      properties:
        id:
          type: integer
          title: Id
        from_address:
          type: string
          title: From Address
        to_address:
          type: string
          title: To Address
        type:
          type: string
          title: Type
        message:
          anyOf:
            - type: string
            - additionalProperties: true
              type: object
            - items: {}
              type: array
          title: Message
        send_timestamp:
          type: string
          format: date-time
          title: Send Timestamp
      type: object
      required:
        - id
        - from_address
        - to_address
        - type
        - message
        - send_timestamp
      title: E2EMessagingResponse
      description: E2E Messaging schema (Response)
    ERC20InsufficientAllowanceErrorCode:
      type: integer
      enum:
        - 14
      title: ERC20InsufficientAllowanceErrorCode
    ERC20InsufficientAllowanceErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/ERC20InsufficientAllowanceErrorCode'
          examples:
            - 14
        title:
          type: string
          title: Title
          examples:
            - ERC20InsufficientAllowanceError
      type: object
      required:
        - code
        - title
      title: ERC20InsufficientAllowanceErrorMetainfo
    ERC20InsufficientAllowanceErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/ERC20InsufficientAllowanceErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: ERC20InsufficientAllowanceErrorResponse
      description: Insufficient allowance for ERC20 token transfer
    Error400MetaModel:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 0
            - 1
            - 2
            - 100001
        title:
          type: string
          title: Title
          examples:
            - InvalidParameterError
            - SendTransactionError
            - ContractRevertError
      type: object
      required:
        - code
        - title
      title: Error400MetaModel
    Error400Model:
      properties:
        meta:
          $ref: '#/components/schemas/Error400MetaModel'
        detail:
          type: string
          title: Detail
          examples:
            - this token is temporarily unavailable
            - failed to register token address token list
            - The address has already been registered.
      type: object
      required:
        - meta
        - detail
      title: Error400Model
    Error401MetaModel:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 1
        title:
          type: string
          title: Title
          examples:
            - AuthorizationError
      type: object
      required:
        - code
        - title
      title: Error401MetaModel
    Error401Model:
      properties:
        meta:
          $ref: '#/components/schemas/Error401MetaModel'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: Error401Model
    Error404MetaModel:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 1
        title:
          type: string
          title: Title
          examples:
            - NotFound
      type: object
      required:
        - code
        - title
      title: Error404MetaModel
    Error404Model:
      properties:
        meta:
          $ref: '#/components/schemas/Error404MetaModel'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: Error404Model
    Error422DetailModel:
      properties:
        loc:
          items:
            type: string
          type: array
          title: Loc
          examples:
            -   - header
                - issuer-address
        msg:
          type: string
          title: Msg
          examples:
            - field required
        type:
          type: string
          title: Type
          examples:
            - value_error.missing
      type: object
      required:
        - loc
        - msg
        - type
      title: Error422DetailModel
    Error422MetaModel:
      properties:
        code:
          type: integer
          title: Code
          examples:
            - 1
        title:
          type: string
          title: Title
          examples:
            - RequestValidationError
      type: object
      required:
        - code
        - title
      title: Error422MetaModel
    Error422Model:
      properties:
        meta:
          $ref: '#/components/schemas/Error422MetaModel'
        detail:
          items:
            $ref: '#/components/schemas/Error422DetailModel'
          type: array
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: Error422Model
    FileResponse:
      properties:
        file_id:
          type: string
          title: File Id
        issuer_address:
          type: string
          title: Issuer Address
        relation:
          anyOf:
            - type: string
            - type: 'null'
          title: Relation
        file_name:
          type: string
          title: File Name
        content_size:
          type: integer
          title: Content Size
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        label:
          type: string
          title: Label
        created:
          type: string
          format: date-time
          title: Created
      type: object
      required:
        - file_id
        - issuer_address
        - relation
        - file_name
        - content_size
        - description
        - label
        - created
      title: FileResponse
      description: File schema (Response)
    FinishDVPDeliveryRequest:
      properties:
        operation_type:
          type: string
          const: Finish
          title: Operation Type
        account_address:
          type: string
          title: Account Address
          description: Agent account address
        eoa_password:
          type: string
          title: Eoa Password
          description: Agent account key file password
      type: object
      required:
        - operation_type
        - account_address
        - eoa_password
      title: FinishDVPDeliveryRequest
      description: DVP delivery finish schema (REQUEST)
    ForceLockRequest:
      properties:
        token_address:
          type: string
          title: Token Address
          description: Token address
        lock_address:
          type: string
          title: Lock Address
          description: Lock address
        message:
          anyOf:
            - $ref: '#/components/schemas/LockMessage'
            - type: 'null'
          description: Lock message
          default: force_lock
        value:
          type: integer
          exclusiveMinimum: 0.0
          title: Value
          description: Lock amount
      type: object
      required:
        - token_address
        - lock_address
        - value
      title: ForceLockRequest
    ForceUnlockRequest:
      properties:
        token_address:
          type: string
          title: Token Address
          description: Token address
        lock_address:
          type: string
          title: Lock Address
          description: Lock address
        recipient_address:
          type: string
          title: Recipient Address
          description: Recipient address
        message:
          anyOf:
            - $ref: '#/components/schemas/UnlockMessage'
            - type: 'null'
          description: Unlock message
          default: force_unlock
        value:
          type: integer
          exclusiveMinimum: 0.0
          title: Value
          description: Unlock amount
      type: object
      required:
        - token_address
        - lock_address
        - recipient_address
        - value
      title: ForceUnlockRequest
    FreezeLogAccountChangeEOAPasswordRequest:
      properties:
        old_eoa_password:
          type: string
          title: Old Eoa Password
          description: EOA keyfile password (old)
        eoa_password:
          type: string
          title: Eoa Password
          description: EOA keyfile password (new)
      type: object
      required:
        - old_eoa_password
        - eoa_password
      title: FreezeLogAccountChangeEOAPasswordRequest
      description: Freeze-Logging account change EOA password schema (REQUEST)
    FreezeLogAccountResponse:
      properties:
        account_address:
          type: string
          title: Account Address
        is_deleted:
          type: boolean
          title: Is Deleted
      type: object
      required:
        - account_address
        - is_deleted
      title: FreezeLogAccountResponse
      description: Freeze-logging account reference schema (RESPONSE)
    GetBatchIssueRedeemResponse:
      properties:
        processed:
          type: boolean
          title: Processed
        results:
          items:
            $ref: '#/components/schemas/GetBatchIssueRedeemResult'
          type: array
          title: Results
      type: object
      required:
        - processed
        - results
      title: GetBatchIssueRedeemResponse
      description: Get Batch issue/redeem upload schema (RESPONSE)
    GetBatchIssueRedeemResult:
      properties:
        account_address:
          type: string
          title: Account Address
        amount:
          type: integer
          title: Amount
        status:
          type: integer
          title: Status
        personal_information:
          $ref: '#/components/schemas/PersonalInfo'
      type: object
      required:
        - account_address
        - amount
        - status
        - personal_information
      title: GetBatchIssueRedeemResult
      description: Result of Creating Batch issue/redeem schema (RESPONSE)
    GetBatchRegisterPersonalInfoResponse:
      properties:
        status:
          $ref: '#/components/schemas/BatchRegisterPersonalInfoUploadStatus'
        results:
          items:
            $ref: '#/components/schemas/BatchRegisterPersonalInfoResult'
          type: array
          title: Results
      type: object
      required:
        - status
        - results
      title: GetBatchRegisterPersonalInfoResponse
      description: Get Batch Register PersonalInfo schema (RESPONSE)
    GetERC20AllowanceResponse:
      properties:
        allowance:
          type: integer
          title: Allowance
          description: ERC20 token allowance
      type: object
      required:
        - allowance
      title: GetERC20AllowanceResponse
      description: GetERC20Allowance response schema
    GetERC20BalanceResponse:
      properties:
        balance:
          type: integer
          title: Balance
          description: ERC20 token balance
      type: object
      required:
        - balance
      title: GetERC20BalanceResponse
      description: GetERC20Balance response schema
    GetIbetWSTBalanceResponse:
      properties:
        balance:
          type: integer
          title: Balance
          description: IbetWST balance
      type: object
      required:
        - balance
      title: GetIbetWSTBalanceResponse
      description: GetIbetWSTBalance response schema
    GetIbetWSTTradeResponse:
      $ref: '#/components/schemas/IbetWSTTrade'
      title: GetIbetWSTTradeResponse
      description: IbetWSTToken response schema
    GetIbetWSTTransactionResponse:
      properties:
        tx_id:
          type: string
          title: Tx Id
          description: Transaction ID
        tx_type:
          type: string
          enum:
            - deploy
            - mint
            - burn
            - add_whitelist
            - delete_whitelist
            - transfer
            - request_trade
            - cancel_trade
            - accept_trade
            - reject_trade
          title: Tx Type
          description: Transaction type
        version:
          type: string
          title: Version
          description: IbetWST version
        status:
          $ref: '#/components/schemas/IbetWSTTxStatus'
          description: 'Transaction status(0: PENDING, 1: SENT, 2: SUCCEEDED, 3: FAILED)'
        ibet_wst_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Ibet Wst Address
          description: IbetWST contract address
        tx_sender:
          type: string
          title: Tx Sender
          description: Transaction sender address
        authorizer:
          anyOf:
            - type: string
            - type: 'null'
          title: Authorizer
          description: Authorizer address
        tx_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Tx Hash
          description: Transaction hash
        block_number:
          anyOf:
            - type: integer
            - type: 'null'
          title: Block Number
          description: Block number when transaction was mined
        finalized:
          type: boolean
          title: Finalized
          description: True if the block is finalized, False otherwise
        event_log:
          anyOf:
            - $ref: '#/components/schemas/IbetWSTEventLogMint'
            - $ref: '#/components/schemas/IbetWSTEventLogBurn'
            - $ref: '#/components/schemas/IbetWSTEventLogTransfer'
            - $ref: '#/components/schemas/IbetWSTEventLogAccountWhiteListAdded'
            - $ref: '#/components/schemas/IbetWSTEventLogAccountWhiteListDeleted'
            - $ref: '#/components/schemas/IbetWSTEventLogTrade'
            - type: 'null'
          title: Event Log
          description: Event log for the transaction (if applicable)
        created:
          type: string
          title: Created
          description: Transaction created datetime
      type: object
      required:
        - tx_id
        - tx_type
        - version
        - status
        - ibet_wst_address
        - tx_sender
        - authorizer
        - tx_hash
        - block_number
        - finalized
        - created
      title: GetIbetWSTTransactionResponse
      description: GetIbetWSTTransaction response schema
    GetIbetWSTWhitelistResponse:
      properties:
        st_account_address:
          type: string
          title: St Account Address
          description: ST account address of the whitelisted account
        sc_account_address_in:
          type: string
          title: Sc Account Address In
          description: SC account address for deposits
        sc_account_address_out:
          type: string
          title: Sc Account Address Out
          description: SC account address for withdrawals
        listed:
          type: boolean
          title: Listed
          description: True if the account is listed in the whitelist, False 
            otherwise
      type: object
      required:
        - st_account_address
        - sc_account_address_in
        - sc_account_address_out
        - listed
      title: GetIbetWSTWhitelistResponse
      description: GetIbetWSTWhitelist response schema
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HolderCountResponse:
      properties:
        count:
          type: integer
          title: Count
      type: object
      required:
        - count
      title: HolderCountResponse
      description: Holder count schema (Response)
    HolderExtraInfo:
      properties:
        external_id1_type:
          anyOf:
            - type: string
            - type: 'null'
          title: External Id1 Type
          description: The type of external-id1
        external_id1:
          anyOf:
            - type: string
            - type: 'null'
          title: External Id1
          description: external-id1
        external_id2_type:
          anyOf:
            - type: string
            - type: 'null'
          title: External Id2 Type
          description: The type of external-id2
        external_id2:
          anyOf:
            - type: string
            - type: 'null'
          title: External Id2
          description: external-id2
        external_id3_type:
          anyOf:
            - type: string
            - type: 'null'
          title: External Id3 Type
          description: The type of external-id3
        external_id3:
          anyOf:
            - type: string
            - type: 'null'
          title: External Id3
          description: external-id3
      type: object
      required:
        - external_id1_type
        - external_id1
        - external_id2_type
        - external_id2
        - external_id3_type
        - external_id3
      title: HolderExtraInfo
    HolderResponse:
      properties:
        account_address:
          type: string
          title: Account Address
          description: Holder's account address
        personal_information:
          $ref: '#/components/schemas/PersonalInfo'
          description: Holder's personal information
        holder_extra_info:
          $ref: '#/components/schemas/HolderExtraInfo'
          description: Holder's extra information
        balance:
          type: integer
          title: Balance
        exchange_balance:
          type: integer
          title: Exchange Balance
        exchange_commitment:
          type: integer
          title: Exchange Commitment
        pending_transfer:
          type: integer
          title: Pending Transfer
        locked:
          type: integer
          title: Locked
        modified:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Modified
      type: object
      required:
        - account_address
        - personal_information
        - holder_extra_info
        - balance
        - exchange_balance
        - exchange_commitment
        - pending_transfer
        - locked
        - modified
      title: HolderResponse
      description: Holder schema (Response)
    HoldersResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        holders:
          items:
            $ref: '#/components/schemas/HolderResponse'
          type: array
          title: Holders
      type: object
      required:
        - result_set
        - holders
      title: HoldersResponse
      description: Holders schema (Response)
    IbetShare:
      properties:
        issuer_address:
          type: string
          title: Issuer Address
        token_address:
          type: string
          title: Token Address
        name:
          type: string
          title: Name
        symbol:
          type: string
          title: Symbol
        issue_price:
          type: integer
          title: Issue Price
        principal_value:
          type: integer
          title: Principal Value
        total_supply:
          type: integer
          title: Total Supply
        dividends:
          type: number
          title: Dividends
        dividend_record_date:
          type: string
          title: Dividend Record Date
        dividend_payment_date:
          type: string
          title: Dividend Payment Date
        cancellation_date:
          type: string
          title: Cancellation Date
        transferable:
          type: boolean
          title: Transferable
        transfer_approval_required:
          type: boolean
          title: Transfer Approval Required
        status:
          type: boolean
          title: Status
        is_offering:
          type: boolean
          title: Is Offering
        tradable_exchange_contract_address:
          type: string
          title: Tradable Exchange Contract Address
        personal_info_contract_address:
          type: string
          title: Personal Info Contract Address
        require_personal_info_registered:
          type: boolean
          title: Require Personal Info Registered
        contact_information:
          type: string
          title: Contact Information
        privacy_policy:
          type: string
          title: Privacy Policy
        is_canceled:
          type: boolean
          title: Is Canceled
        memo:
          type: string
          title: Memo
      type: object
      required:
        - issuer_address
        - token_address
        - name
        - symbol
        - issue_price
        - principal_value
        - total_supply
        - dividends
        - dividend_record_date
        - dividend_payment_date
        - cancellation_date
        - transferable
        - transfer_approval_required
        - status
        - is_offering
        - tradable_exchange_contract_address
        - personal_info_contract_address
        - require_personal_info_registered
        - contact_information
        - privacy_policy
        - is_canceled
        - memo
      title: IbetShare
      description: IbetShare schema
    IbetShareAdditionalIssue:
      properties:
        account_address:
          type: string
          title: Account Address
        amount:
          type: integer
          maximum: 1000000000000.0
          minimum: 1.0
          title: Amount
      type: object
      required:
        - account_address
        - amount
      title: IbetShareAdditionalIssue
      description: ibet Share schema (Additional Issue)
    IbetShareBulkTransferRequest:
      properties:
        transfer_list:
          items:
            $ref: '#/components/schemas/IbetShareTransfer'
          type: array
          maxItems: 500000
          minItems: 1
          title: Transfer List
          description: List of data to be transferred
      type: object
      required:
        - transfer_list
      title: IbetShareBulkTransferRequest
    IbetShareContractVersion:
      type: string
      enum:
        - '22_12'
        - '24_06'
        - '24_09'
        - '25_06'
        - '25_09'
      title: IbetShareContractVersion
    IbetShareCreate:
      properties:
        name:
          type: string
          maxLength: 100
          title: Name
        issue_price:
          type: integer
          maximum: 5000000000.0
          minimum: 0.0
          title: Issue Price
        principal_value:
          type: integer
          maximum: 5000000000.0
          minimum: 0.0
          title: Principal Value
        total_supply:
          type: integer
          maximum: 1000000000000.0
          minimum: 0.0
          title: Total Supply
        symbol:
          anyOf:
            - type: string
              maxLength: 100
            - type: 'null'
          title: Symbol
        dividends:
          anyOf:
            - type: number
              maximum: 5000000000.0
              minimum: 0.0
            - type: 'null'
          title: Dividends
        dividend_record_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: string
              const: ''
            - type: 'null'
          title: Dividend Record Date
        dividend_payment_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: string
              const: ''
            - type: 'null'
          title: Dividend Payment Date
        cancellation_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: string
              const: ''
            - type: 'null'
          title: Cancellation Date
        transferable:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transferable
        status:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Status
        is_offering:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Offering
        tradable_exchange_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Tradable Exchange Contract Address
        personal_info_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Personal Info Contract Address
        require_personal_info_registered:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Require Personal Info Registered
        contact_information:
          anyOf:
            - type: string
              maxLength: 2000
            - type: 'null'
          title: Contact Information
        privacy_policy:
          anyOf:
            - type: string
              maxLength: 5000
            - type: 'null'
          title: Privacy Policy
        transfer_approval_required:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transfer Approval Required
        is_canceled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Canceled
        activate_ibet_wst:
          anyOf:
            - type: boolean
              const: true
            - type: 'null'
          title: Activate Ibet Wst
          description: Activate IbetWST
      type: object
      required:
        - name
        - issue_price
        - principal_value
        - total_supply
      title: IbetShareCreate
      description: ibet Share schema (Create)
    IbetShareRedeem:
      properties:
        account_address:
          type: string
          title: Account Address
        amount:
          type: integer
          maximum: 1000000000000.0
          minimum: 1.0
          title: Amount
      type: object
      required:
        - account_address
        - amount
      title: IbetShareRedeem
      description: ibet Share schema (Redeem)
    IbetShareResponse:
      properties:
        issuer_address:
          type: string
          title: Issuer Address
        token_address:
          type: string
          title: Token Address
        name:
          type: string
          title: Name
        symbol:
          type: string
          title: Symbol
        issue_price:
          type: integer
          title: Issue Price
        principal_value:
          type: integer
          title: Principal Value
        total_supply:
          type: integer
          title: Total Supply
        dividends:
          type: number
          title: Dividends
        dividend_record_date:
          type: string
          title: Dividend Record Date
        dividend_payment_date:
          type: string
          title: Dividend Payment Date
        cancellation_date:
          type: string
          title: Cancellation Date
        transferable:
          type: boolean
          title: Transferable
        transfer_approval_required:
          type: boolean
          title: Transfer Approval Required
        status:
          type: boolean
          title: Status
        is_offering:
          type: boolean
          title: Is Offering
        tradable_exchange_contract_address:
          type: string
          title: Tradable Exchange Contract Address
        personal_info_contract_address:
          type: string
          title: Personal Info Contract Address
        require_personal_info_registered:
          type: boolean
          title: Require Personal Info Registered
        contact_information:
          type: string
          title: Contact Information
        privacy_policy:
          type: string
          title: Privacy Policy
        is_canceled:
          type: boolean
          title: Is Canceled
        memo:
          type: string
          title: Memo
        issue_datetime:
          type: string
          title: Issue Datetime
          description: Issue datetime (ISO 8601 format)
        token_status:
          anyOf:
            - $ref: '#/components/schemas/TokenStatus'
            - type: 'null'
          description: Token deploy status
        contract_version:
          $ref: '#/components/schemas/IbetShareContractVersion'
          description: Contract version
        ibet_wst_activated:
          type: boolean
          title: Ibet Wst Activated
          description: IbetWST activated
        ibet_wst_version:
          anyOf:
            - type: string
            - type: 'null'
          title: Ibet Wst Version
          description: IbetWST version
        ibet_wst_deployed:
          type: boolean
          title: Ibet Wst Deployed
          description: IbetWST deployed
        ibet_wst_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Ibet Wst Address
          description: IbetWST contract address
      type: object
      required:
        - issuer_address
        - token_address
        - name
        - symbol
        - issue_price
        - principal_value
        - total_supply
        - dividends
        - dividend_record_date
        - dividend_payment_date
        - cancellation_date
        - transferable
        - transfer_approval_required
        - status
        - is_offering
        - tradable_exchange_contract_address
        - personal_info_contract_address
        - require_personal_info_registered
        - contact_information
        - privacy_policy
        - is_canceled
        - memo
        - issue_datetime
        - token_status
        - contract_version
        - ibet_wst_activated
        - ibet_wst_version
        - ibet_wst_deployed
        - ibet_wst_address
      title: IbetShareResponse
      description: ibet Share schema (Response)
    IbetShareScheduledUpdate:
      properties:
        scheduled_datetime:
          type: string
          format: date-time
          title: Scheduled Datetime
        event_type:
          $ref: '#/components/schemas/ScheduledEventType'
        data:
          $ref: '#/components/schemas/IbetShareScheduledUpdateData'
      type: object
      required:
        - scheduled_datetime
        - event_type
        - data
      title: IbetShareScheduledUpdate
      description: scheduled event (Request)
    IbetShareScheduledUpdateData:
      properties:
        cancellation_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: string
              const: ''
            - type: 'null'
          title: Cancellation Date
        dividend_record_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: string
              const: ''
            - type: 'null'
          title: Dividend Record Date
        dividend_payment_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: string
              const: ''
            - type: 'null'
          title: Dividend Payment Date
        dividends:
          anyOf:
            - type: number
              maximum: 5000000000.0
              minimum: 0.0
            - type: 'null'
          title: Dividends
        tradable_exchange_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Tradable Exchange Contract Address
        personal_info_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Personal Info Contract Address
        require_personal_info_registered:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Require Personal Info Registered
        transferable:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transferable
        status:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Status
        is_offering:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Offering
        contact_information:
          anyOf:
            - type: string
              maxLength: 2000
            - type: 'null'
          title: Contact Information
        privacy_policy:
          anyOf:
            - type: string
              maxLength: 5000
            - type: 'null'
          title: Privacy Policy
        transfer_approval_required:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transfer Approval Required
        principal_value:
          anyOf:
            - type: integer
              maximum: 5000000000.0
              minimum: 0.0
            - type: 'null'
          title: Principal Value
        is_canceled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Canceled
        memo:
          anyOf:
            - type: string
              maxLength: 10000
            - type: 'null'
          title: Memo
      type: object
      title: IbetShareScheduledUpdateData
      description: ibet Share scheduled update data schema
    IbetShareTransfer:
      properties:
        token_address:
          type: string
          title: Token Address
        from_address:
          type: string
          title: From Address
        to_address:
          type: string
          title: To Address
        amount:
          type: integer
          maximum: 1000000000000.0
          minimum: 1.0
          title: Amount
      type: object
      required:
        - token_address
        - from_address
        - to_address
        - amount
      title: IbetShareTransfer
      description: ibet Share schema (Transfer)
    IbetShareUpdate:
      properties:
        cancellation_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: string
              const: ''
            - type: 'null'
          title: Cancellation Date
        dividend_record_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: string
              const: ''
            - type: 'null'
          title: Dividend Record Date
        dividend_payment_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: string
              const: ''
            - type: 'null'
          title: Dividend Payment Date
        dividends:
          anyOf:
            - type: number
              maximum: 5000000000.0
              minimum: 0.0
            - type: 'null'
          title: Dividends
        tradable_exchange_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Tradable Exchange Contract Address
        personal_info_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Personal Info Contract Address
        require_personal_info_registered:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Require Personal Info Registered
        transferable:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transferable
        status:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Status
        is_offering:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Offering
        contact_information:
          anyOf:
            - type: string
              maxLength: 2000
            - type: 'null'
          title: Contact Information
        privacy_policy:
          anyOf:
            - type: string
              maxLength: 5000
            - type: 'null'
          title: Privacy Policy
        transfer_approval_required:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transfer Approval Required
        principal_value:
          anyOf:
            - type: integer
              maximum: 5000000000.0
              minimum: 0.0
            - type: 'null'
          title: Principal Value
        is_canceled:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Canceled
        memo:
          anyOf:
            - type: string
              maxLength: 10000
            - type: 'null'
          title: Memo
        activate_ibet_wst:
          anyOf:
            - type: boolean
              const: true
            - type: 'null'
          title: Activate Ibet Wst
          description: Activate IbetWST
      type: object
      title: IbetShareUpdate
      description: ibet Share schema (Update)
    IbetStraightBond:
      properties:
        issuer_address:
          type: string
          title: Issuer Address
        token_address:
          type: string
          title: Token Address
        name:
          type: string
          title: Name
        symbol:
          type: string
          title: Symbol
        total_supply:
          type: integer
          title: Total Supply
        face_value:
          type: integer
          title: Face Value
        face_value_currency:
          type: string
          title: Face Value Currency
        redemption_date:
          type: string
          title: Redemption Date
        redemption_value:
          type: integer
          title: Redemption Value
        redemption_value_currency:
          type: string
          title: Redemption Value Currency
        return_date:
          type: string
          title: Return Date
        return_amount:
          type: string
          title: Return Amount
        purpose:
          type: string
          title: Purpose
        interest_rate:
          type: number
          title: Interest Rate
        interest_payment_date:
          items:
            type: string
          type: array
          title: Interest Payment Date
        interest_payment_currency:
          type: string
          title: Interest Payment Currency
        base_fx_rate:
          type: number
          title: Base Fx Rate
        transferable:
          type: boolean
          title: Transferable
        is_redeemed:
          type: boolean
          title: Is Redeemed
        status:
          type: boolean
          title: Status
        is_offering:
          type: boolean
          title: Is Offering
        tradable_exchange_contract_address:
          type: string
          title: Tradable Exchange Contract Address
        personal_info_contract_address:
          type: string
          title: Personal Info Contract Address
        require_personal_info_registered:
          type: boolean
          title: Require Personal Info Registered
        contact_information:
          type: string
          title: Contact Information
        privacy_policy:
          type: string
          title: Privacy Policy
        transfer_approval_required:
          type: boolean
          title: Transfer Approval Required
        memo:
          type: string
          title: Memo
      type: object
      required:
        - issuer_address
        - token_address
        - name
        - symbol
        - total_supply
        - face_value
        - face_value_currency
        - redemption_date
        - redemption_value
        - redemption_value_currency
        - return_date
        - return_amount
        - purpose
        - interest_rate
        - interest_payment_date
        - interest_payment_currency
        - base_fx_rate
        - transferable
        - is_redeemed
        - status
        - is_offering
        - tradable_exchange_contract_address
        - personal_info_contract_address
        - require_personal_info_registered
        - contact_information
        - privacy_policy
        - transfer_approval_required
        - memo
      title: IbetStraightBond
      description: IbetStraightBond schema
    IbetStraightBondAdditionalIssue:
      properties:
        account_address:
          type: string
          title: Account Address
        amount:
          type: integer
          maximum: 1000000000000.0
          minimum: 1.0
          title: Amount
      type: object
      required:
        - account_address
        - amount
      title: IbetStraightBondAdditionalIssue
      description: ibet Straight Bond schema (Additional Issue)
    IbetStraightBondBulkTransferRequest:
      properties:
        transfer_list:
          items:
            $ref: '#/components/schemas/IbetStraightBondTransfer'
          type: array
          maxItems: 500000
          minItems: 1
          title: Transfer List
          description: List of data to be transferred
      type: object
      required:
        - transfer_list
      title: IbetStraightBondBulkTransferRequest
    IbetStraightBondContractVersion:
      type: string
      enum:
        - '22_12'
        - '23_12'
        - '24_06'
        - '24_09'
        - '25_06'
        - '25_09'
      title: IbetStraightBondContractVersion
    IbetStraightBondCreate:
      properties:
        name:
          type: string
          maxLength: 100
          title: Name
        total_supply:
          type: integer
          maximum: 1000000000000.0
          minimum: 0.0
          title: Total Supply
        face_value:
          type: integer
          maximum: 5000000000.0
          minimum: 0.0
          title: Face Value
        face_value_currency:
          type: string
          maxLength: 3
          minLength: 3
          title: Face Value Currency
        purpose:
          type: string
          maxLength: 2000
          title: Purpose
        symbol:
          anyOf:
            - type: string
              maxLength: 100
            - type: 'null'
          title: Symbol
        redemption_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: 'null'
          title: Redemption Date
        redemption_value:
          anyOf:
            - type: integer
              maximum: 5000000000.0
              minimum: 0.0
            - type: 'null'
          title: Redemption Value
        redemption_value_currency:
          anyOf:
            - type: string
              maxLength: 3
              minLength: 3
            - type: 'null'
          title: Redemption Value Currency
        return_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: 'null'
          title: Return Date
        return_amount:
          anyOf:
            - type: string
              maxLength: 2000
            - type: 'null'
          title: Return Amount
        interest_rate:
          anyOf:
            - type: number
              maximum: 100.0
              minimum: 0.0
            - type: 'null'
          title: Interest Rate
        interest_payment_date:
          anyOf:
            - items:
                type: string
                pattern: ^(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
              type: array
            - type: 'null'
          title: Interest Payment Date
        interest_payment_currency:
          anyOf:
            - type: string
              maxLength: 3
              minLength: 3
            - type: 'null'
          title: Interest Payment Currency
        base_fx_rate:
          anyOf:
            - type: number
              minimum: 0.0
            - type: 'null'
          title: Base Fx Rate
        transferable:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transferable
        is_redeemed:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Redeemed
        status:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Status
        is_offering:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Offering
        tradable_exchange_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Tradable Exchange Contract Address
        personal_info_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Personal Info Contract Address
        require_personal_info_registered:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Require Personal Info Registered
        image_url:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Image Url
        contact_information:
          anyOf:
            - type: string
              maxLength: 2000
            - type: 'null'
          title: Contact Information
        privacy_policy:
          anyOf:
            - type: string
              maxLength: 5000
            - type: 'null'
          title: Privacy Policy
        transfer_approval_required:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transfer Approval Required
        activate_ibet_wst:
          anyOf:
            - type: boolean
              const: true
            - type: 'null'
          title: Activate Ibet Wst
          description: Activate IbetWST
      type: object
      required:
        - name
        - total_supply
        - face_value
        - face_value_currency
        - purpose
      title: IbetStraightBondCreate
      description: ibet Straight Bond schema (Create)
    IbetStraightBondRedeem:
      properties:
        account_address:
          type: string
          title: Account Address
        amount:
          type: integer
          maximum: 1000000000000.0
          minimum: 1.0
          title: Amount
      type: object
      required:
        - account_address
        - amount
      title: IbetStraightBondRedeem
      description: ibet Straight Bond schema (Redeem)
    IbetStraightBondResponse:
      properties:
        issuer_address:
          type: string
          title: Issuer Address
        token_address:
          type: string
          title: Token Address
        name:
          type: string
          title: Name
        symbol:
          type: string
          title: Symbol
        total_supply:
          type: integer
          title: Total Supply
        face_value:
          type: integer
          title: Face Value
        face_value_currency:
          type: string
          title: Face Value Currency
        redemption_date:
          type: string
          title: Redemption Date
        redemption_value:
          type: integer
          title: Redemption Value
        redemption_value_currency:
          type: string
          title: Redemption Value Currency
        return_date:
          type: string
          title: Return Date
        return_amount:
          type: string
          title: Return Amount
        purpose:
          type: string
          title: Purpose
        interest_rate:
          type: number
          title: Interest Rate
        interest_payment_date:
          items:
            type: string
          type: array
          title: Interest Payment Date
        interest_payment_currency:
          type: string
          title: Interest Payment Currency
        base_fx_rate:
          type: number
          title: Base Fx Rate
        transferable:
          type: boolean
          title: Transferable
        is_redeemed:
          type: boolean
          title: Is Redeemed
        status:
          type: boolean
          title: Status
        is_offering:
          type: boolean
          title: Is Offering
        tradable_exchange_contract_address:
          type: string
          title: Tradable Exchange Contract Address
        personal_info_contract_address:
          type: string
          title: Personal Info Contract Address
        require_personal_info_registered:
          type: boolean
          title: Require Personal Info Registered
        contact_information:
          type: string
          title: Contact Information
        privacy_policy:
          type: string
          title: Privacy Policy
        transfer_approval_required:
          type: boolean
          title: Transfer Approval Required
        memo:
          type: string
          title: Memo
        issue_datetime:
          type: string
          title: Issue Datetime
          description: Issue datetime (ISO 8601 format)
        token_status:
          anyOf:
            - $ref: '#/components/schemas/TokenStatus'
            - type: 'null'
          description: Token deploy status
        contract_version:
          $ref: '#/components/schemas/IbetStraightBondContractVersion'
          description: Contract version
        ibet_wst_activated:
          type: boolean
          title: Ibet Wst Activated
          description: IbetWST activated
        ibet_wst_version:
          anyOf:
            - type: string
            - type: 'null'
          title: Ibet Wst Version
          description: IbetWST version
        ibet_wst_deployed:
          type: boolean
          title: Ibet Wst Deployed
          description: IbetWST deployed
        ibet_wst_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Ibet Wst Address
          description: IbetWST contract address
      type: object
      required:
        - issuer_address
        - token_address
        - name
        - symbol
        - total_supply
        - face_value
        - face_value_currency
        - redemption_date
        - redemption_value
        - redemption_value_currency
        - return_date
        - return_amount
        - purpose
        - interest_rate
        - interest_payment_date
        - interest_payment_currency
        - base_fx_rate
        - transferable
        - is_redeemed
        - status
        - is_offering
        - tradable_exchange_contract_address
        - personal_info_contract_address
        - require_personal_info_registered
        - contact_information
        - privacy_policy
        - transfer_approval_required
        - memo
        - issue_datetime
        - token_status
        - contract_version
        - ibet_wst_activated
        - ibet_wst_version
        - ibet_wst_deployed
        - ibet_wst_address
      title: IbetStraightBondResponse
      description: ibet Straight Bond schema (Response)
    IbetStraightBondScheduledUpdate:
      properties:
        scheduled_datetime:
          type: string
          format: date-time
          title: Scheduled Datetime
        event_type:
          $ref: '#/components/schemas/ScheduledEventType'
        data:
          $ref: '#/components/schemas/IbetStraightBondScheduledUpdateData'
      type: object
      required:
        - scheduled_datetime
        - event_type
        - data
      title: IbetStraightBondScheduledUpdate
      description: scheduled event (Request)
    IbetStraightBondScheduledUpdateData:
      properties:
        face_value:
          anyOf:
            - type: integer
              maximum: 5000000000.0
              minimum: 0.0
            - type: 'null'
          title: Face Value
        face_value_currency:
          anyOf:
            - type: string
              maxLength: 3
              minLength: 3
            - type: 'null'
          title: Face Value Currency
        purpose:
          anyOf:
            - type: string
              maxLength: 2000
            - type: 'null'
          title: Purpose
        interest_rate:
          anyOf:
            - type: number
              maximum: 100.0
              minimum: 0.0
            - type: 'null'
          title: Interest Rate
        interest_payment_date:
          anyOf:
            - items:
                type: string
                pattern: ^(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
              type: array
            - type: 'null'
          title: Interest Payment Date
        interest_payment_currency:
          anyOf:
            - type: string
              maxLength: 3
              minLength: 3
            - type: string
              const: ''
            - type: 'null'
          title: Interest Payment Currency
        redemption_value:
          anyOf:
            - type: integer
              maximum: 5000000000.0
              minimum: 0.0
            - type: 'null'
          title: Redemption Value
        redemption_value_currency:
          anyOf:
            - type: string
              maxLength: 3
              minLength: 3
            - type: string
              const: ''
            - type: 'null'
          title: Redemption Value Currency
        redemption_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: string
              const: ''
            - type: 'null'
          title: Redemption Date
        base_fx_rate:
          anyOf:
            - type: number
              minimum: 0.0
            - type: 'null'
          title: Base Fx Rate
        transferable:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transferable
        status:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Status
        is_offering:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Offering
        is_redeemed:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Redeemed
        tradable_exchange_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Tradable Exchange Contract Address
        personal_info_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Personal Info Contract Address
        require_personal_info_registered:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Require Personal Info Registered
        contact_information:
          anyOf:
            - type: string
              maxLength: 2000
            - type: 'null'
          title: Contact Information
        privacy_policy:
          anyOf:
            - type: string
              maxLength: 5000
            - type: 'null'
          title: Privacy Policy
        transfer_approval_required:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transfer Approval Required
        memo:
          anyOf:
            - type: string
              maxLength: 10000
            - type: 'null'
          title: Memo
      type: object
      title: IbetStraightBondScheduledUpdateData
      description: ibet Straight Bond scheduled update data schema
    IbetStraightBondTransfer:
      properties:
        token_address:
          type: string
          title: Token Address
        from_address:
          type: string
          title: From Address
        to_address:
          type: string
          title: To Address
        amount:
          type: integer
          maximum: 1000000000000.0
          minimum: 1.0
          title: Amount
      type: object
      required:
        - token_address
        - from_address
        - to_address
        - amount
      title: IbetStraightBondTransfer
      description: ibet Straight Bond schema (Transfer)
    IbetStraightBondUpdate:
      properties:
        face_value:
          anyOf:
            - type: integer
              maximum: 5000000000.0
              minimum: 0.0
            - type: 'null'
          title: Face Value
        face_value_currency:
          anyOf:
            - type: string
              maxLength: 3
              minLength: 3
            - type: 'null'
          title: Face Value Currency
        purpose:
          anyOf:
            - type: string
              maxLength: 2000
            - type: 'null'
          title: Purpose
        interest_rate:
          anyOf:
            - type: number
              maximum: 100.0
              minimum: 0.0
            - type: 'null'
          title: Interest Rate
        interest_payment_date:
          anyOf:
            - items:
                type: string
                pattern: ^(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
              type: array
            - type: 'null'
          title: Interest Payment Date
        interest_payment_currency:
          anyOf:
            - type: string
              maxLength: 3
              minLength: 3
            - type: string
              const: ''
            - type: 'null'
          title: Interest Payment Currency
        redemption_value:
          anyOf:
            - type: integer
              maximum: 5000000000.0
              minimum: 0.0
            - type: 'null'
          title: Redemption Value
        redemption_value_currency:
          anyOf:
            - type: string
              maxLength: 3
              minLength: 3
            - type: string
              const: ''
            - type: 'null'
          title: Redemption Value Currency
        redemption_date:
          anyOf:
            - type: string
              pattern: 
                ^(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$
            - type: string
              const: ''
            - type: 'null'
          title: Redemption Date
        base_fx_rate:
          anyOf:
            - type: number
              minimum: 0.0
            - type: 'null'
          title: Base Fx Rate
        transferable:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transferable
        status:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Status
        is_offering:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Offering
        is_redeemed:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Redeemed
        tradable_exchange_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Tradable Exchange Contract Address
        personal_info_contract_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Personal Info Contract Address
        require_personal_info_registered:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Require Personal Info Registered
        contact_information:
          anyOf:
            - type: string
              maxLength: 2000
            - type: 'null'
          title: Contact Information
        privacy_policy:
          anyOf:
            - type: string
              maxLength: 5000
            - type: 'null'
          title: Privacy Policy
        transfer_approval_required:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Transfer Approval Required
        memo:
          anyOf:
            - type: string
              maxLength: 10000
            - type: 'null'
          title: Memo
        activate_ibet_wst:
          anyOf:
            - type: boolean
              const: true
            - type: 'null'
          title: Activate Ibet Wst
          description: Activate IbetWST
      type: object
      title: IbetStraightBondUpdate
      description: ibet Straight Bond schema (Update)
    IbetWSTAuthorization:
      properties:
        nonce:
          type: string
          title: Nonce
          description: Nonce for the authorization (Hexadecimal string)
        v:
          type: integer
          title: V
          description: v value for the authorization signature
        r:
          type: string
          title: R
          description: r value for the authorization signature (Hexadecimal 
            string)
        s:
          type: string
          title: S
          description: s value for the authorization signature (Hexadecimal 
            string)
      type: object
      required:
        - nonce
        - v
        - r
        - s
      title: IbetWSTAuthorization
      description: IbetWST Authorization schema
    IbetWSTEventLogAccountWhiteListAdded:
      properties:
        account_address:
          type: string
          title: Account Address
          description: Address of the account added to the whitelist
      type: object
      required:
        - account_address
      title: IbetWSTEventLogAccountWhiteListAdded
      description: IbetWST AccountWhiteListAdded event log schema
    IbetWSTEventLogAccountWhiteListDeleted:
      properties:
        account_address:
          type: string
          title: Account Address
          description: Address of the account removed from the whitelist
      type: object
      required:
        - account_address
      title: IbetWSTEventLogAccountWhiteListDeleted
      description: IbetWST AccountWhiteListDeleted event log schema
    IbetWSTEventLogBurn:
      properties:
        from_address:
          type: string
          title: From Address
          description: Address from which the tokens were burned
        value:
          type: integer
          title: Value
          description: Amount of tokens burned
      type: object
      required:
        - from_address
        - value
      title: IbetWSTEventLogBurn
      description: IbetWST Burn event log schema
    IbetWSTEventLogMint:
      properties:
        to_address:
          type: string
          title: To Address
          description: Address to which the tokens were minted
        value:
          type: integer
          title: Value
          description: Amount of tokens minted
      type: object
      required:
        - to_address
        - value
      title: IbetWSTEventLogMint
      description: IbetWST Mint event log schema
    IbetWSTEventLogTrade:
      properties:
        index:
          type: integer
          title: Index
          description: Trade index
        seller_st_account_address:
          type: string
          title: Seller St Account Address
          description: IbetWST seller account address
        buyer_st_account_address:
          type: string
          title: Buyer St Account Address
          description: IbetWST buyer account address
        sc_token_address:
          type: string
          title: Sc Token Address
          description: SC token contract address
        seller_sc_account_address:
          type: string
          title: Seller Sc Account Address
          description: SC seller account address
        buyer_sc_account_address:
          type: string
          title: Buyer Sc Account Address
          description: SC buyer account address
        st_value:
          type: integer
          title: St Value
          description: Value of IbetWST to trade
        sc_value:
          type: integer
          title: Sc Value
          description: Value of SC token to trade
      type: object
      required:
        - index
        - seller_st_account_address
        - buyer_st_account_address
        - sc_token_address
        - seller_sc_account_address
        - buyer_sc_account_address
        - st_value
        - sc_value
      title: IbetWSTEventLogTrade
      description: IbetWST 
        TradeRequested/TradeCancelled/TradeAccepted/TradeRejected event log 
        schema
    IbetWSTEventLogTransfer:
      properties:
        from_address:
          type: string
          title: From Address
          description: Address from which the tokens were transferred
        to_address:
          type: string
          title: To Address
          description: Address to which the tokens were transferred
        value:
          type: integer
          title: Value
          description: Amount of tokens transferred
      type: object
      required:
        - from_address
        - to_address
        - value
      title: IbetWSTEventLogTransfer
      description: IbetWST Transfer event log schema
    IbetWSTInsufficientBalanceErrorCode:
      type: integer
      enum:
        - 13
      title: IbetWSTInsufficientBalanceErrorCode
    IbetWSTInsufficientBalanceErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/IbetWSTInsufficientBalanceErrorCode'
          examples:
            - 13
        title:
          type: string
          title: Title
          examples:
            - IbetWSTInsufficientBalanceError
      type: object
      required:
        - code
        - title
      title: IbetWSTInsufficientBalanceErrorMetainfo
    IbetWSTInsufficientBalanceErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/IbetWSTInsufficientBalanceErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: IbetWSTInsufficientBalanceErrorResponse
      description: Insufficient balance for IbetWST token transfer
    IbetWSTToken:
      properties:
        issuer_address:
          type: string
          title: Issuer Address
          description: Issuer address
        ibet_wst_address:
          type: string
          title: Ibet Wst Address
          description: IbetWST contract address
        ibet_token_address:
          type: string
          title: Ibet Token Address
          description: ibet token contract address
        ibet_token_type:
          $ref: '#/components/schemas/TokenType'
          description: ibet token type
        ibet_token_attributes:
          anyOf:
            - $ref: '#/components/schemas/IbetStraightBond'
            - $ref: '#/components/schemas/IbetShare'
          title: Ibet Token Attributes
          description: ibet token attributes
        created:
          type: string
          title: Created
          description: Created datetime
      type: object
      required:
        - issuer_address
        - ibet_wst_address
        - ibet_token_address
        - ibet_token_type
        - ibet_token_attributes
        - created
      title: IbetWSTToken
      description: IbetWST Token schema
    IbetWSTTrade:
      properties:
        index:
          type: integer
          title: Index
          description: Trade index
        seller_st_account_address:
          type: string
          title: Seller St Account Address
          description: IbetWST seller account address
        buyer_st_account_address:
          type: string
          title: Buyer St Account Address
          description: IbetWST buyer account address
        sc_token_address:
          type: string
          title: Sc Token Address
          description: SC token contract address
        seller_sc_account_address:
          type: string
          title: Seller Sc Account Address
          description: SC seller account address
        buyer_sc_account_address:
          type: string
          title: Buyer Sc Account Address
          description: SC buyer account address
        st_value:
          type: integer
          title: St Value
          description: Value of IbetWST to trade
        sc_value:
          type: integer
          title: Sc Value
          description: Value of SC token to trade
        state:
          type: string
          enum:
            - Pending
            - Executed
            - Cancelled
          title: State
          description: Trade state
        memo:
          type: string
          title: Memo
          description: Memo for the trade
      type: object
      required:
        - index
        - seller_st_account_address
        - buyer_st_account_address
        - sc_token_address
        - seller_sc_account_address
        - buyer_sc_account_address
        - st_value
        - sc_value
        - state
        - memo
      title: IbetWSTTrade
      description: IbetWST Trade schema
    IbetWSTTransactionResponse:
      properties:
        tx_id:
          type: string
          title: Tx Id
          description: Transaction ID
      type: object
      required:
        - tx_id
      title: IbetWSTTransactionResponse
      description: Common response schema for APIs that send IbetWST 
        transactions
    IbetWSTTxStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      title: IbetWSTTxStatus
      description: IbetWST Transaction Status Enum
    IbetWSTWhitelistAccount:
      properties:
        st_account_address:
          type: string
          title: St Account Address
          description: ST account address of the whitelisted account
        sc_account_address_in:
          type: string
          title: Sc Account Address In
          description: SC account address for deposits
        sc_account_address_out:
          type: string
          title: Sc Account Address Out
          description: SC account address for withdrawals
      type: object
      required:
        - st_account_address
        - sc_account_address_in
        - sc_account_address_out
      title: IbetWSTWhitelistAccount
      description: IbetWST Whitelist Account schema
    Integer64bitLimitExceededErrorCode:
      type: integer
      enum:
        - 5
      title: Integer64bitLimitExceededErrorCode
    Integer64bitLimitExceededErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/Integer64bitLimitExceededErrorCode'
          examples:
            - 5
        title:
          type: string
          title: Title
          examples:
            - Integer64bitLimitExceededError
      type: object
      required:
        - code
        - title
      title: Integer64bitLimitExceededErrorMetainfo
    Integer64bitLimitExceededErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/Integer64bitLimitExceededErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: Integer64bitLimitExceededErrorResponse
    InvalidParameterErrorCode:
      type: integer
      enum:
        - 1
      title: InvalidParameterErrorCode
    InvalidParameterErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/InvalidParameterErrorCode'
          examples:
            - 1
        title:
          type: string
          title: Title
          examples:
            - InvalidParameterError
      type: object
      required:
        - code
        - title
      title: InvalidParameterErrorMetainfo
    InvalidParameterErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/InvalidParameterErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: InvalidParameterErrorResponse
    InvalidUploadErrorDetail:
      properties:
        record_error_details:
          items:
            $ref: '#/components/schemas/RecordErrorDetail'
          type: array
          title: Record Error Details
      type: object
      required:
        - record_error_details
      title: InvalidUploadErrorDetail
    IssueErrorMetaInfo:
      properties:
        token_address:
          type: string
          title: Token Address
        token_type:
          $ref: '#/components/schemas/TokenType'
        arguments:
          additionalProperties: true
          type: object
          title: Arguments
      type: object
      required:
        - token_address
        - token_type
        - arguments
      title: IssueErrorMetaInfo
    IssueErrorNotification:
      properties:
        id:
          type: integer
          title: Id
        notice_id:
          type: string
          title: Notice Id
        issuer_address:
          type: string
          title: Issuer Address
        priority:
          type: integer
          title: Priority
        notice_code:
          type: integer
          maximum: 2.0
          minimum: 0.0
          title: Notice Code
          description: |2
             - 0: Issuer does not exist
             - 1: Could not get the private key of the issuer
             - 2: Failed to send transaction
        created:
          type: string
          title: Created
        notice_type:
          type: string
          const: IssueError
          title: Notice Type
        metainfo:
          $ref: '#/components/schemas/IssueErrorMetaInfo'
      type: object
      required:
        - id
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      title: IssueErrorNotification
    IssueRedeemEvent:
      properties:
        transaction_hash:
          type: string
          title: Transaction Hash
        token_address:
          type: string
          title: Token Address
        locked_address:
          type: string
          title: Locked Address
        target_address:
          type: string
          title: Target Address
        amount:
          type: integer
          title: Amount
        block_timestamp:
          type: string
          title: Block Timestamp
      type: object
      required:
        - transaction_hash
        - token_address
        - locked_address
        - target_address
        - amount
        - block_timestamp
      title: IssueRedeemEvent
      description: Issue/Redeem event
    IssueRedeemHistoryResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        history:
          items:
            $ref: '#/components/schemas/IssueRedeemEvent'
          type: array
          title: History
      type: object
      required:
        - result_set
        - history
      title: IssueRedeemHistoryResponse
      description: Issue/Redeem history
    IssueRedeemSortItem:
      type: string
      enum:
        - block_timestamp
        - locked_address
        - target_address
        - amount
      title: IssueRedeemSortItem
      description: Issue/Redeem sort item
    IssuedToken:
      properties:
        issuer_address:
          type: string
          title: Issuer Address
          description: Issuer address
        token_address:
          type: string
          title: Token Address
          description: Token address
        token_type:
          $ref: '#/components/schemas/TokenType'
          description: Token type
        created:
          type: string
          title: Created
          description: Created(Issued) datetime
        token_status:
          anyOf:
            - $ref: '#/components/schemas/TokenStatus'
            - type: 'null'
          description: Token status
        contract_version:
          anyOf:
            - $ref: '#/components/schemas/IbetStraightBondContractVersion'
            - $ref: '#/components/schemas/IbetShareContractVersion'
          title: Contract Version
          description: Contract version
        token_attributes:
          anyOf:
            - $ref: '#/components/schemas/IbetStraightBond'
            - $ref: '#/components/schemas/IbetShare'
          title: Token Attributes
          description: Token attributes
      type: object
      required:
        - issuer_address
        - token_address
        - token_type
        - created
        - token_status
        - contract_version
        - token_attributes
      title: IssuedToken
      description: Issued Token
    KeyManagerType:
      type: string
      enum:
        - SELF
        - OTHERS
      title: KeyManagerType
    LedgerDetailsDataListAllResponse:
      properties:
        data_id:
          type: string
          title: Data Id
        count:
          type: integer
          title: Count
        created:
          type: string
          format: date-time
          title: Created
      type: object
      required:
        - data_id
        - count
        - created
      title: LedgerDetailsDataListAllResponse
      description: Ledger Details Data(List All) schema (Response)
    LedgerDetailsDataResponse:
      properties:
        data_id:
          type: string
          title: Data Id
      type: object
      required:
        - data_id
      title: LedgerDetailsDataResponse
      description: Ledger Details Data schema (Response)
    LedgerDetailsDataTemplateResponse:
      properties:
        type:
          $ref: '#/components/schemas/LedgerDetailsDataType'
        source:
          anyOf:
            - type: string
            - type: 'null'
          title: Source
      type: object
      required:
        - type
        - source
      title: LedgerDetailsDataTemplateResponse
      description: Ledger Details Data Template schema (Response)
    LedgerDetailsDataType:
      type: string
      enum:
        - ibetfin
        - db
      title: LedgerDetailsDataType
    LedgerDetailsTemplateResponse:
      properties:
        token_detail_type:
          type: string
          title: Token Detail Type
        headers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Headers
        data:
          $ref: '#/components/schemas/LedgerDetailsDataTemplateResponse'
        footers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Footers
      type: object
      required:
        - token_detail_type
        - headers
        - data
        - footers
      title: LedgerDetailsTemplateResponse
      description: Ledger Details Template schema (Response)
    LedgerResponse:
      properties:
        id:
          type: integer
          title: Id
        token_address:
          type: string
          title: Token Address
        token_type:
          $ref: '#/components/schemas/TokenType'
        created:
          type: string
          format: date-time
          title: Created
      type: object
      required:
        - id
        - token_address
        - token_type
        - created
      title: LedgerResponse
      description: Ledger schema (Response)
    LedgerTemplateResponse:
      properties:
        token_name:
          type: string
          title: Token Name
        headers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Headers
        details:
          items:
            $ref: '#/components/schemas/LedgerDetailsTemplateResponse'
          type: array
          title: Details
        footers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Footers
      type: object
      required:
        - token_name
        - headers
        - details
        - footers
      title: LedgerTemplateResponse
      description: Ledger Template schema (Response)
    ListAllChildAccountResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        child_accounts:
          items:
            $ref: '#/components/schemas/ChildAccount'
          type: array
          title: Child Accounts
      type: object
      required:
        - result_set
        - child_accounts
      title: ListAllChildAccountResponse
      description: List all child accounts schema (RESPONSE)
    ListAllChildAccountSortItem:
      type: string
      enum:
        - child_account_index
        - child_account_address
        - name
        - created
        - modified
      title: ListAllChildAccountSortItem
    ListAllDVPAgentAccountResponse:
      items:
        $ref: '#/components/schemas/DVPAgentAccountResponse'
      type: array
      title: ListAllDVPAgentAccountResponse
      description: DVP agent account list reference schema (RESPONSE)
    ListAllDVPAgentDeliveriesResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        deliveries:
          items:
            $ref: '#/components/schemas/RetrieveDVPAgentDeliveryResponse'
          type: array
          title: Deliveries
      type: object
      required:
        - result_set
        - deliveries
      title: ListAllDVPAgentDeliveriesResponse
      description: List all DVP delivery schema for paying agent (Response)
    ListAllDVPDeliveriesResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        deliveries:
          items:
            $ref: '#/components/schemas/RetrieveDVPDeliveryResponse'
          type: array
          title: Deliveries
      type: object
      required:
        - result_set
        - deliveries
      title: ListAllDVPDeliveriesResponse
      description: List all DVP delivery schema (Response)
    ListAllE2EMessagingResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        e2e_messages:
          items:
            $ref: '#/components/schemas/E2EMessagingResponse'
          type: array
          title: E2E Messages
      type: object
      required:
        - result_set
        - e2e_messages
      title: ListAllE2EMessagingResponse
      description: List All E2E Messaging schema (Response)
    ListAllFilesResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        files:
          items:
            $ref: '#/components/schemas/FileResponse'
          type: array
          title: Files
      type: object
      required:
        - result_set
        - files
      title: ListAllFilesResponse
      description: List All Files schema (Response)
    ListAllFreezeLogAccountResponse:
      items:
        $ref: '#/components/schemas/FreezeLogAccountResponse'
      type: array
      title: ListAllFreezeLogAccountResponse
      description: Freeze-logging account list reference schema (RESPONSE)
    ListAllHoldersSortItem:
      type: string
      enum:
        - created
        - account_address
        - balance
        - pending_transfer
        - locked
        - balance_and_pending_transfer
        - key_manager
        - holder_name
      title: ListAllHoldersSortItem
    ListAllIbetWSTTokensResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tokens:
          items:
            $ref: '#/components/schemas/IbetWSTToken'
          type: array
          title: Tokens
      type: object
      required:
        - result_set
        - tokens
      title: ListAllIbetWSTTokensResponse
      description: ListAllIbetWSTTokens response schema
    ListAllIbetWSTTokensSortItem:
      type: string
      enum:
        - created
        - token_address
      title: ListAllIbetWSTTokensSortItem
    ListAllIssuedTokensResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tokens:
          items:
            $ref: '#/components/schemas/IssuedToken'
          type: array
          title: Tokens
      type: object
      required:
        - result_set
        - tokens
      title: ListAllIssuedTokensResponse
      description: List issued tokens schema
    ListAllIssuedTokensSortItem:
      type: string
      enum:
        - created
        - token_address
      title: ListAllIssuedTokensSortItem
    ListAllLedgerDetailsDataResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        details_data:
          items:
            $ref: '#/components/schemas/LedgerDetailsDataListAllResponse'
          type: array
          title: Details Data
      type: object
      required:
        - result_set
        - details_data
      title: ListAllLedgerDetailsDataResponse
      description: List All Ledger Details Data schema (Response)
    ListAllLedgerHistoryResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        ledgers:
          items:
            $ref: '#/components/schemas/LedgerResponse'
          type: array
          title: Ledgers
      type: object
      required:
        - result_set
        - ledgers
      title: ListAllLedgerHistoryResponse
      description: List All Ledger History schema (Response)
    ListAllLockEventsResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        events:
          items:
            $ref: '#/components/schemas/LockEvent'
          type: array
          title: Events
          description: Lock/Unlock event list
      type: object
      required:
        - result_set
        - events
      title: ListAllLockEventsResponse
      description: List All Lock/Unlock events (Response)
    ListAllLockEventsSortItem:
      type: string
      enum:
        - token_address
        - lock_address
        - recipient_address
        - value
        - block_timestamp
      title: ListAllLockEventsSortItem
    ListAllLockedPositionResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        locked_positions:
          items:
            $ref: '#/components/schemas/LockedPosition'
          type: array
          title: Locked Positions
          description: Locked position list
      type: object
      required:
        - result_set
        - locked_positions
      title: ListAllLockedPositionResponse
      description: List All Locked Position schema (Response)
    ListAllNotificationsResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        notifications:
          items:
            $ref: '#/components/schemas/NotificationsListResponse'
          type: array
          title: Notifications
      type: object
      required:
        - result_set
        - notifications
      title: ListAllNotificationsResponse
      description: List All Notifications schema (Response)
    ListAllPositionResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        positions:
          items:
            $ref: '#/components/schemas/Position'
          type: array
          title: Positions
          description: Position list
      type: object
      required:
        - result_set
        - positions
      title: ListAllPositionResponse
      description: List All Position schema (Response)
    ListAllScheduledEventsResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        scheduled_events:
          items:
            $ref: '#/components/schemas/ScheduledEventWithTokenAttributes'
          type: array
          title: Scheduled Events
      type: object
      required:
        - result_set
        - scheduled_events
      title: ListAllScheduledEventsResponse
      description: List scheduled events schema
    ListAllScheduledEventsSortItem:
      type: string
      enum:
        - created
        - scheduled_datetime
        - token_address
      title: ListAllScheduledEventsSortItem
    ListAllTokenHolderCollectionsResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        collections:
          items:
            $ref: '#/components/schemas/RetrieveTokenHolderCollectionResponse'
          type: array
          title: Collections
      type: object
      required:
        - result_set
        - collections
      title: ListAllTokenHolderCollectionsResponse
      description: List All Token Holders Collections schema (RESPONSE)
    ListAllTokenLockEventsResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        events:
          items:
            $ref: '#/components/schemas/LockEvent'
          type: array
          title: Events
          description: Lock/Unlock event list
      type: object
      required:
        - result_set
        - events
      title: ListAllTokenLockEventsResponse
      description: List All Lock/Unlock events (Response)
    ListAllTokenLockEventsSortItem:
      type: string
      enum:
        - account_address
        - lock_address
        - recipient_address
        - value
        - block_timestamp
      title: ListAllTokenLockEventsSortItem
    ListBatchIssueRedeemUploadResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        uploads:
          items:
            $ref: '#/components/schemas/BatchIssueRedeemUpload'
          type: array
          title: Uploads
      type: object
      required:
        - result_set
        - uploads
      title: ListBatchIssueRedeemUploadResponse
      description: List All Batch issue/redeem Upload(RESPONSE)
    ListBatchIssueRedeemUploadResponseWithResult:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        uploads:
          items:
            $ref: '#/components/schemas/BatchIssueRedeemUploadWithResult'
          type: array
          title: Uploads
      type: object
      required:
        - result_set
        - uploads
      title: ListBatchIssueRedeemUploadResponseWithResult
      description: List All Batch issue/redeem Upload(RESPONSE)
    ListBatchRegisterPersonalInfoUploadResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        uploads:
          items:
            $ref: '#/components/schemas/BatchRegisterPersonalInfoUploadResponse'
          type: array
          title: Uploads
      type: object
      required:
        - result_set
        - uploads
      title: ListBatchRegisterPersonalInfoUploadResponse
      description: List All Batch Register PersonalInfo Upload (Response)
    ListIbetWSTTradesResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        trades:
          items:
            $ref: '#/components/schemas/IbetWSTTrade'
          type: array
          title: Trades
          description: List of IbetWST trades
      type: object
      required:
        - result_set
        - trades
      title: ListIbetWSTTradesResponse
      description: ListIbetWSTTrades response schema
    ListIbetWSTTransactionsResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        transactions:
          items:
            $ref: '#/components/schemas/GetIbetWSTTransactionResponse'
          type: array
          title: Transactions
          description: List of IbetWST transactions
      type: object
      required:
        - result_set
        - transactions
      title: ListIbetWSTTransactionsResponse
      description: ListIbetWSTTransactions response schema
    ListTokenHistorySortItem:
      type: string
      enum:
        - created
        - operation_category
      title: ListTokenHistorySortItem
      description: Sort item of token history
    ListTokenHoldersPersonalInfoHistoryResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        personal_info:
          items:
            $ref: '#/components/schemas/PersonalInfoHistory'
          type: array
          title: Personal Info
      type: object
      required:
        - result_set
        - personal_info
      title: ListTokenHoldersPersonalInfoHistoryResponse
      description: List All Token Holders PersonalInfo Histories (Response)
    ListTokenHoldersPersonalInfoResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        personal_info:
          items:
            $ref: '#/components/schemas/PersonalInfoIndex'
          type: array
          title: Personal Info
      type: object
      required:
        - result_set
        - personal_info
      title: ListTokenHoldersPersonalInfoResponse
      description: List All Token Holders PersonalInfo (Response)
    ListTokenHoldersPersonalInfoSortItem:
      type: string
      enum:
        - account_address
        - created
        - modified
      title: ListTokenHoldersPersonalInfoSortItem
    ListTokenOperationLogHistoryResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        history:
          items:
            $ref: '#/components/schemas/TokenOperationLogResponse'
          type: array
          title: History
          description: token update histories
          default: []
      type: object
      required:
        - result_set
      title: ListTokenOperationLogHistoryResponse
    ListTransferApprovalHistorySortItem:
      type: string
      enum:
        - id
        - exchange_address
        - application_id
        - from_address
        - to_address
        - amount
        - application_datetime
        - approval_datetime
        - status
      title: ListTransferApprovalHistorySortItem
    ListTransferHistorySortItem:
      type: string
      enum:
        - block_timestamp
        - from_address
        - to_address
        - from_address_name
        - to_address_name
        - amount
      title: ListTransferHistorySortItem
    LockDataMessage:
      properties:
        message:
          $ref: '#/components/schemas/LockMessage'
      type: object
      required:
        - message
      title: LockDataMessage
    LockEvent:
      properties:
        category:
          $ref: '#/components/schemas/LockEventCategory'
          description: Event category
        is_forced:
          type: boolean
          title: Is Forced
          description: Set to `True` for force lock/unlock events
        transaction_hash:
          type: string
          title: Transaction Hash
          description: Transaction hash
        msg_sender:
          anyOf:
            - type: string
            - type: 'null'
          title: Msg Sender
          description: Message sender
        issuer_address:
          type: string
          title: Issuer Address
          description: Issuer address
        token_address:
          type: string
          title: Token Address
          description: Token address
        token_type:
          $ref: '#/components/schemas/TokenType'
          description: Token type
        token_name:
          type: string
          title: Token Name
          description: Token name
        lock_address:
          type: string
          title: Lock Address
          description: Lock address
        account_address:
          type: string
          title: Account Address
          description: Account address
        recipient_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Recipient Address
          description: Recipient address
        value:
          type: integer
          title: Value
          description: Lock/Unlock amount
        data:
          anyOf:
            - $ref: '#/components/schemas/LockDataMessage'
            - $ref: '#/components/schemas/UnlockDataMessage'
            - additionalProperties: true
              type: object
          title: Data
          description: Message at lock/unlock
        block_timestamp:
          type: string
          title: Block Timestamp
          description: block_timestamp when Lock log was emitted
      type: object
      required:
        - category
        - is_forced
        - transaction_hash
        - issuer_address
        - token_address
        - token_type
        - token_name
        - lock_address
        - account_address
        - value
        - data
        - block_timestamp
      title: LockEvent
      description: Lock/Unlock event
    LockEventCategory:
      type: string
      enum:
        - Lock
        - Unlock
      title: LockEventCategory
    LockInfoMetaInfo:
      properties:
        token_address:
          type: string
          title: Token Address
        token_type:
          $ref: '#/components/schemas/TokenType'
        lock_address:
          type: string
          title: Lock Address
        account_address:
          type: string
          title: Account Address
        value:
          type: integer
          title: Value
        data:
          additionalProperties: true
          type: object
          title: Data
      type: object
      required:
        - token_address
        - token_type
        - lock_address
        - account_address
        - value
        - data
      title: LockInfoMetaInfo
    LockInfoNotification:
      properties:
        id:
          type: integer
          title: Id
        notice_id:
          type: string
          title: Notice Id
        issuer_address:
          type: string
          title: Issuer Address
        priority:
          type: integer
          title: Priority
        notice_code:
          type: integer
          maximum: 0.0
          minimum: 0.0
          title: Notice Code
          description: " - 0: Balance is locked\n"
        created:
          type: string
          title: Created
        notice_type:
          type: string
          const: LockInfo
          title: Notice Type
        metainfo:
          $ref: '#/components/schemas/LockInfoMetaInfo'
      type: object
      required:
        - id
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      title: LockInfoNotification
    LockMessage:
      type: string
      enum:
        - garnishment
        - force_lock
        - ibet_wst_bridge
      title: LockMessage
    LockedPosition:
      properties:
        issuer_address:
          type: string
          title: Issuer Address
          description: Issuer address
        token_address:
          type: string
          title: Token Address
          description: Token address
        token_type:
          $ref: '#/components/schemas/TokenType'
          description: Token type
        token_name:
          type: string
          title: Token Name
          description: Token name
        lock_address:
          type: string
          title: Lock Address
          description: Lock address
        locked:
          type: integer
          title: Locked
          description: Locked amount
      type: object
      required:
        - issuer_address
        - token_address
        - token_type
        - token_name
        - lock_address
        - locked
      title: LockedPosition
      description: Locked Position
    MultipleTokenTransferNotAllowedErrorCode:
      type: integer
      enum:
        - 9
      title: MultipleTokenTransferNotAllowedErrorCode
    MultipleTokenTransferNotAllowedErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/MultipleTokenTransferNotAllowedErrorCode'
          examples:
            - 9
        title:
          type: string
          title: Title
          examples:
            - MultipleTokenTransferNotAllowedError
      type: object
      required:
        - code
        - title
      title: MultipleTokenTransferNotAllowedErrorMetainfo
    MultipleTokenTransferNotAllowedErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/MultipleTokenTransferNotAllowedErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: MultipleTokenTransferNotAllowedErrorResponse
      description: Transfer operations that do not allow specifying multiple 
        tokens at once
    NonTransferableTokenErrorCode:
      type: integer
      enum:
        - 8
      title: NonTransferableTokenErrorCode
    NonTransferableTokenErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/NonTransferableTokenErrorCode'
          examples:
            - 8
        title:
          type: string
          title: Title
          examples:
            - NonTransferableTokenError
      type: object
      required:
        - code
        - title
      title: NonTransferableTokenErrorMetainfo
    NonTransferableTokenErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/NonTransferableTokenErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: NonTransferableTokenErrorResponse
      description: Operations on non-transferable tokens
    NotificationsListResponse:
      anyOf:
        - $ref: '#/components/schemas/IssueErrorNotification'
        - $ref: '#/components/schemas/BulkTransferErrorNotification'
        - $ref: '#/components/schemas/ScheduleEventErrorNotification'
        - $ref: '#/components/schemas/TransferApprovalInfoNotification'
        - $ref: '#/components/schemas/CreateLedgerInfoNotification'
        - $ref: '#/components/schemas/BatchRegisterPersonalInfoErrorNotification'
        - $ref: '#/components/schemas/BatchIssueRedeemProcessedNotification'
        - $ref: '#/components/schemas/LockInfoNotification'
        - $ref: '#/components/schemas/UnlockInfoNotification'
        - $ref: '#/components/schemas/DVPDeliveryInfoNotification'
      title: NotificationsListResponse
      description: Notifications List schema (Response)
    OperationNotAllowedStateErrorCode:
      type: integer
      enum:
        - 101
      title: OperationNotAllowedStateErrorCode
    OperationNotAllowedStateErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/OperationNotAllowedStateErrorCode'
          examples:
            - 0
        title:
          type: string
          title: Title
          examples:
            - OperationNotAllowedStateError
      type: object
      required:
        - code
        - title
      title: OperationNotAllowedStateErrorMetainfo
    OperationNotAllowedStateErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/OperationNotAllowedStateErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: OperationNotAllowedStateErrorResponse
      description: Error returned when server-side data is not ready to process 
        the request
    OperationNotPermittedForOlderIssuersCode:
      type: integer
      enum:
        - 10
      title: OperationNotPermittedForOlderIssuersCode
    OperationNotPermittedForOlderIssuersMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/OperationNotPermittedForOlderIssuersCode'
          examples:
            - 10
        title:
          type: string
          title: Title
          examples:
            - OperationNotPermittedForOlderIssuers
      type: object
      required:
        - code
        - title
      title: OperationNotPermittedForOlderIssuersMetainfo
    OperationNotPermittedForOlderIssuersResponse:
      properties:
        meta:
          $ref: '#/components/schemas/OperationNotPermittedForOlderIssuersMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: OperationNotPermittedForOlderIssuersResponse
      description: An operation not permitted for older issuers
    OperationNotSupportedVersionErrorCode:
      type: integer
      enum:
        - 6
      title: OperationNotSupportedVersionErrorCode
    OperationNotSupportedVersionErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/OperationNotSupportedVersionErrorCode'
          examples:
            - 6
        title:
          type: string
          title: Title
          examples:
            - OperationNotSupportedVersionError
      type: object
      required:
        - code
        - title
      title: OperationNotSupportedVersionErrorMetainfo
    OperationNotSupportedVersionErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/OperationNotSupportedVersionErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: OperationNotSupportedVersionErrorResponse
      description: The token version for which the operation is not supported
    PersonalInfo:
      properties:
        key_manager:
          anyOf:
            - type: string
            - type: 'null'
          title: Key Manager
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        postal_code:
          anyOf:
            - type: string
            - type: 'null'
          title: Postal Code
        address:
          anyOf:
            - type: string
            - type: 'null'
          title: Address
        email:
          anyOf:
            - type: string
            - type: 'null'
          title: Email
        birth:
          anyOf:
            - type: string
            - type: 'null'
          title: Birth
        is_corporate:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Corporate
        tax_category:
          anyOf:
            - type: integer
            - type: 'null'
          title: Tax Category
      type: object
      required:
        - key_manager
        - name
        - postal_code
        - address
        - email
        - birth
        - is_corporate
        - tax_category
      title: PersonalInfo
    PersonalInfoDataSource:
      type: string
      enum:
        - on-chain
        - off-chain
      title: PersonalInfoDataSource
      description: Personal information data source
    PersonalInfoEventType:
      type: string
      enum:
        - register
        - modify
      title: PersonalInfoEventType
    PersonalInfoExceedsSizeLimitCode:
      type: integer
      enum:
        - 11
      title: PersonalInfoExceedsSizeLimitCode
    PersonalInfoExceedsSizeLimitMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/PersonalInfoExceedsSizeLimitCode'
          examples:
            - 11
        title:
          type: string
          title: Title
          examples:
            - PersonalInfoExceedsSizeLimit
      type: object
      required:
        - code
        - title
      title: PersonalInfoExceedsSizeLimitMetainfo
    PersonalInfoExceedsSizeLimitResponse:
      properties:
        meta:
          $ref: '#/components/schemas/PersonalInfoExceedsSizeLimitMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: PersonalInfoExceedsSizeLimitResponse
      description: Personal info exceeds size limit
    PersonalInfoHistory:
      properties:
        id:
          type: integer
          title: Id
        account_address:
          type: string
          title: Account Address
        event_type:
          $ref: '#/components/schemas/PersonalInfoEventType'
        personal_info:
          $ref: '#/components/schemas/PersonalInfo'
        block_timestamp:
          type: string
          format: date-time
          title: Block Timestamp
        created:
          type: string
          format: date-time
          title: Created
      type: object
      required:
        - id
        - account_address
        - event_type
        - personal_info
        - block_timestamp
        - created
      title: PersonalInfoHistory
      description: Personal Information History schema
    PersonalInfoIndex:
      properties:
        account_address:
          type: string
          title: Account Address
        personal_info:
          $ref: '#/components/schemas/PersonalInfo'
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
      type: object
      required:
        - account_address
        - personal_info
        - created
        - modified
      title: PersonalInfoIndex
      description: Personal Information Index schema
    PersonalInfoInput:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        postal_code:
          anyOf:
            - type: string
            - type: 'null'
          title: Postal Code
        address:
          anyOf:
            - type: string
            - type: 'null'
          title: Address
        email:
          anyOf:
            - type: string
            - type: 'null'
          title: Email
        birth:
          anyOf:
            - type: string
            - type: 'null'
          title: Birth
        is_corporate:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Corporate
        tax_category:
          anyOf:
            - type: integer
            - type: 'null'
          title: Tax Category
      type: object
      title: PersonalInfoInput
      description: Personal Information Input schema
    Position:
      properties:
        issuer_address:
          type: string
          title: Issuer Address
          description: Issuer address
        token_address:
          type: string
          title: Token Address
          description: Token address
        token_type:
          $ref: '#/components/schemas/TokenType'
          description: Token type
        token_name:
          type: string
          title: Token Name
          description: Token name
        token_attributes:
          anyOf:
            - $ref: '#/components/schemas/IbetStraightBond'
            - $ref: '#/components/schemas/IbetShare'
            - type: 'null'
          title: Token Attributes
          description: Token attributes
        balance:
          type: integer
          title: Balance
          description: Balance
        exchange_balance:
          type: integer
          title: Exchange Balance
          description: Balance on the exchange contract
        exchange_commitment:
          type: integer
          title: Exchange Commitment
          description: Commitment on the exchange contract
        pending_transfer:
          type: integer
          title: Pending Transfer
          description: Pending transfer amount
        locked:
          type: integer
          title: Locked
          description: Total locked amount
      type: object
      required:
        - issuer_address
        - token_address
        - token_type
        - token_name
        - token_attributes
        - balance
        - exchange_balance
        - exchange_commitment
        - pending_transfer
        - locked
      title: Position
      description: Position
    PositionResponse:
      $ref: '#/components/schemas/Position'
      title: PositionResponse
      description: Position schema (Response)
    RecordErrorDetail:
      properties:
        row_num:
          type: integer
          title: Row Num
        error_reason:
          type: string
          const: PersonalInfoExceedsSizeLimit
          title: Error Reason
      type: object
      required:
        - row_num
        - error_reason
      title: RecordErrorDetail
    RecordNewFreezeLogRequest:
      properties:
        account_address:
          type: string
          title: Account Address
          description: Logging account address
        eoa_password:
          type: string
          title: Eoa Password
          description: Logging account key file password
        log_message:
          type: string
          title: Log Message
          description: Log message
        freezing_grace_block_count:
          type: integer
          exclusiveMinimum: 0.0
          title: Freezing Grace Block Count
          description: Freezing grace block count
      type: object
      required:
        - account_address
        - eoa_password
        - log_message
        - freezing_grace_block_count
      title: RecordNewFreezeLogRequest
      description: Record new freeze log schema (REQUEST)
    RecordNewFreezeLogResponse:
      properties:
        log_index:
          type: integer
          title: Log Index
      type: object
      required:
        - log_index
      title: RecordNewFreezeLogResponse
      description: New freeze-log recording schema (RESPONSE)
    RegisterHolderExtraInfoRequest:
      properties:
        external_id1_type:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id1 Type
          description: The type of external-id1
        external_id1:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id1
          description: external-id1
        external_id2_type:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id2 Type
          description: The type of external-id2
        external_id2:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id2
          description: external-id2
        external_id3_type:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id3 Type
          description: The type of external-id3
        external_id3:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id3
          description: external-id3
      type: object
      title: RegisterHolderExtraInfoRequest
      description: Schema for holder's extra information registration (REQUEST)
    RegisterPersonalInfoRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        postal_code:
          anyOf:
            - type: string
            - type: 'null'
          title: Postal Code
        address:
          anyOf:
            - type: string
            - type: 'null'
          title: Address
        email:
          anyOf:
            - type: string
            - type: 'null'
          title: Email
        birth:
          anyOf:
            - type: string
            - type: 'null'
          title: Birth
        is_corporate:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Corporate
        tax_category:
          anyOf:
            - type: integer
            - type: 'null'
          title: Tax Category
        account_address:
          type: string
          title: Account Address
        key_manager:
          type: string
          title: Key Manager
        data_source:
          $ref: '#/components/schemas/PersonalInfoDataSource'
          default: on-chain
      type: object
      required:
        - account_address
        - key_manager
      title: RegisterPersonalInfoRequest
      description: Register Personal Information schema (REQUEST)
    RejectIbetWSTTradeRequest:
      properties:
        index:
          type: integer
          exclusiveMinimum: 0.0
          title: Index
          description: Trade index
        authorizer:
          type: string
          title: Authorizer
          description: Authorizer address
        authorization:
          $ref: '#/components/schemas/IbetWSTAuthorization'
          description: Authorization for the transaction
      type: object
      required:
        - index
        - authorizer
        - authorization
      title: RejectIbetWSTTradeRequest
      description: RejectIbetWSTTrade request schema
    RequestIbetWSTTradeRequest:
      properties:
        seller_st_account_address:
          type: string
          title: Seller St Account Address
          description: IbetWST seller account address
        buyer_st_account_address:
          type: string
          title: Buyer St Account Address
          description: IbetWST buyer account address
        sc_token_address:
          type: string
          title: Sc Token Address
          description: SC token contract address
        st_value:
          type: integer
          exclusiveMinimum: 0.0
          title: St Value
          description: Value of IbetWST to trade
        sc_value:
          type: integer
          exclusiveMinimum: 0.0
          title: Sc Value
          description: Value of SC token to trade
        memo:
          type: string
          title: Memo
          description: Memo for the trade
        authorizer:
          type: string
          title: Authorizer
          description: Authorizer address
        authorization:
          $ref: '#/components/schemas/IbetWSTAuthorization'
          description: Authorization for the transaction
      type: object
      required:
        - seller_st_account_address
        - buyer_st_account_address
        - sc_token_address
        - st_value
        - sc_value
        - memo
        - authorizer
        - authorization
      title: RequestIbetWSTTradeRequest
      description: RequestIbetWSTTrade request schema
    ResponseLimitExceededErrorCode:
      type: integer
      enum:
        - 4
      title: ResponseLimitExceededErrorCode
    ResponseLimitExceededErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/ResponseLimitExceededErrorCode'
          examples:
            - 4
        title:
          type: string
          title: Title
          examples:
            - ResponseLimitExceededError
      type: object
      required:
        - code
        - title
      title: ResponseLimitExceededErrorMetainfo
    ResponseLimitExceededErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/ResponseLimitExceededErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: ResponseLimitExceededErrorResponse
    ResultSet:
      properties:
        count:
          anyOf:
            - type: integer
            - type: 'null'
          title: Count
        offset:
          anyOf:
            - type: integer
            - type: 'null'
          title: Offset
        limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Limit
        total:
          anyOf:
            - type: integer
            - type: 'null'
          title: Total
      type: object
      required:
        - count
        - offset
        - limit
        - total
      title: ResultSet
      description: result set for pagination
    RetrieveDVPAgentDeliveryResponse:
      properties:
        exchange_address:
          type: string
          title: Exchange Address
        delivery_id:
          type: integer
          title: Delivery Id
        token_address:
          type: string
          title: Token Address
        buyer_address:
          type: string
          title: Buyer Address
        seller_address:
          type: string
          title: Seller Address
        amount:
          type: integer
          title: Amount
        agent_address:
          type: string
          title: Agent Address
        data:
          anyOf:
            - $ref: '#/components/schemas/DVPDeliveryData'
            - type: 'null'
        settlement_service_type:
          anyOf:
            - type: string
            - type: 'null'
          title: Settlement Service Type
        create_blocktimestamp:
          type: string
          title: Create Blocktimestamp
        create_transaction_hash:
          type: string
          title: Create Transaction Hash
        cancel_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Cancel Blocktimestamp
        cancel_transaction_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Cancel Transaction Hash
        confirm_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Confirm Blocktimestamp
        confirm_transaction_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Confirm Transaction Hash
        finish_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Finish Blocktimestamp
        finish_transaction_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Finish Transaction Hash
        abort_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Abort Blocktimestamp
        abort_transaction_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Abort Transaction Hash
        confirmed:
          type: boolean
          title: Confirmed
        valid:
          type: boolean
          title: Valid
        status:
          $ref: '#/components/schemas/DeliveryStatus'
      type: object
      required:
        - exchange_address
        - delivery_id
        - token_address
        - buyer_address
        - seller_address
        - amount
        - agent_address
        - data
        - settlement_service_type
        - create_blocktimestamp
        - create_transaction_hash
        - cancel_blocktimestamp
        - cancel_transaction_hash
        - confirm_blocktimestamp
        - confirm_transaction_hash
        - finish_blocktimestamp
        - finish_transaction_hash
        - abort_blocktimestamp
        - abort_transaction_hash
        - confirmed
        - valid
        - status
      title: RetrieveDVPAgentDeliveryResponse
      description: Retrieve DVP delivery schema for paying agent (Response)
    RetrieveDVPDeliveryResponse:
      properties:
        exchange_address:
          type: string
          title: Exchange Address
        delivery_id:
          type: integer
          title: Delivery Id
        token_address:
          type: string
          title: Token Address
        buyer_address:
          type: string
          title: Buyer Address
        buyer_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
        seller_address:
          type: string
          title: Seller Address
        seller_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
        amount:
          type: integer
          title: Amount
        agent_address:
          type: string
          title: Agent Address
        data:
          anyOf:
            - $ref: '#/components/schemas/DVPDeliveryData'
            - type: 'null'
        settlement_service_type:
          anyOf:
            - type: string
            - type: 'null'
          title: Settlement Service Type
        create_blocktimestamp:
          type: string
          title: Create Blocktimestamp
        create_transaction_hash:
          type: string
          title: Create Transaction Hash
        cancel_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Cancel Blocktimestamp
        cancel_transaction_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Cancel Transaction Hash
        confirm_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Confirm Blocktimestamp
        confirm_transaction_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Confirm Transaction Hash
        finish_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Finish Blocktimestamp
        finish_transaction_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Finish Transaction Hash
        abort_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Abort Blocktimestamp
        abort_transaction_hash:
          anyOf:
            - type: string
            - type: 'null'
          title: Abort Transaction Hash
        confirmed:
          type: boolean
          title: Confirmed
        valid:
          type: boolean
          title: Valid
        status:
          $ref: '#/components/schemas/DeliveryStatus'
      type: object
      required:
        - exchange_address
        - delivery_id
        - token_address
        - buyer_address
        - buyer_personal_information
        - seller_address
        - seller_personal_information
        - amount
        - agent_address
        - data
        - settlement_service_type
        - create_blocktimestamp
        - create_transaction_hash
        - cancel_blocktimestamp
        - cancel_transaction_hash
        - confirm_blocktimestamp
        - confirm_transaction_hash
        - finish_blocktimestamp
        - finish_transaction_hash
        - abort_blocktimestamp
        - abort_transaction_hash
        - confirmed
        - valid
        - status
      title: RetrieveDVPDeliveryResponse
      description: Retrieve DVP delivery schema (Response)
    RetrieveFreezeLogResponse:
      properties:
        block_number:
          type: integer
          title: Block Number
        freezing_grace_block_count:
          type: integer
          title: Freezing Grace Block Count
        log_message:
          type: string
          title: Log Message
      type: object
      required:
        - block_number
        - freezing_grace_block_count
        - log_message
      title: RetrieveFreezeLogResponse
      description: Frozen log data (RESPONSE)
    RetrieveIbetWSTWhitelistAccountsResponse:
      properties:
        whitelist_accounts:
          items:
            $ref: '#/components/schemas/IbetWSTWhitelistAccount'
          type: array
          title: Whitelist Accounts
          description: List of whitelisted accounts
      type: object
      required:
        - whitelist_accounts
      title: RetrieveIbetWSTWhitelistAccountsResponse
      description: RetrieveIbetWSTWhitelistAccounts response schema
    RetrieveLedgerDetailsDataHistoryResponse:
      properties:
        account_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Account Address
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        address:
          anyOf:
            - type: string
            - type: 'null'
          title: Address
        amount:
          type: integer
          title: Amount
        price:
          type: integer
          title: Price
        balance:
          type: integer
          title: Balance
        acquisition_date:
          type: string
          title: Acquisition Date
      type: object
      required:
        - amount
        - price
        - balance
        - acquisition_date
      title: RetrieveLedgerDetailsDataHistoryResponse
      description: Retrieve Ledger Details Data History schema (Response)
    RetrieveLedgerDetailsDataResponse:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        address:
          anyOf:
            - type: string
            - type: 'null'
          title: Address
        amount:
          type: integer
          title: Amount
        price:
          type: integer
          title: Price
        balance:
          type: integer
          title: Balance
        acquisition_date:
          type: string
          title: Acquisition Date
      type: object
      required:
        - name
        - address
        - amount
        - price
        - balance
        - acquisition_date
      title: RetrieveLedgerDetailsDataResponse
      description: Retrieve Ledger Details Data schema (Response)
    RetrieveLedgerDetailsHistoryResponse:
      properties:
        token_detail_type:
          type: string
          title: Token Detail Type
        headers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Headers
        data:
          items:
            $ref: '#/components/schemas/RetrieveLedgerDetailsDataHistoryResponse'
          type: array
          title: Data
        footers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Footers
        some_personal_info_not_registered:
          type: boolean
          title: Some Personal Info Not Registered
      type: object
      required:
        - token_detail_type
        - data
        - some_personal_info_not_registered
      title: RetrieveLedgerDetailsHistoryResponse
      description: Retrieve Ledger Details History schema (Response)
    RetrieveLedgerHistoryResponse:
      properties:
        created:
          type: string
          title: Created
        token_name:
          type: string
          title: Token Name
        currency:
          type: string
          title: Currency
        headers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Headers
        details:
          items:
            $ref: '#/components/schemas/RetrieveLedgerDetailsHistoryResponse'
          type: array
          title: Details
        footers:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Footers
      type: object
      required:
        - created
        - token_name
        - currency
        - details
      title: RetrieveLedgerHistoryResponse
      description: Retrieve Ledger History schema (Response)
    RetrieveTokenHolderCollectionResponse:
      properties:
        token_address:
          type: string
          title: Token Address
        block_number:
          type: integer
          title: Block Number
        list_id:
          type: string
          title: List Id
          description: UUID v4 required
        status:
          $ref: '#/components/schemas/TokenHolderBatchStatus'
      type: object
      required:
        - token_address
        - block_number
        - list_id
        - status
      title: RetrieveTokenHolderCollectionResponse
      description: Retrieve Token Holders Collection schema (RESPONSE)
    RetrieveTokenHoldersCollectionSortItem:
      type: string
      enum:
        - account_address
        - hold_balance
        - locked_balance
        - key_manager
        - tax_category
      title: RetrieveTokenHoldersCollectionSortItem
    RetrieveTokenHoldersListResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        status:
          $ref: '#/components/schemas/TokenHolderBatchStatus'
        holders:
          items:
            $ref: '#/components/schemas/TokenHoldersCollectionHolder'
          type: array
          title: Holders
      type: object
      required:
        - result_set
        - status
        - holders
      title: RetrieveTokenHoldersListResponse
      description: Retrieve Token Holders List schema (RESPONSE)
      examples:
        - holders:
            - account_address: '0x85a8b8887a4bD76859751b10C8aC8EC5f3aA1bDB'
              hold_balance: 30000
              locked_balance: 0
          status: done
    ScheduleEventErrorMetaInfo:
      properties:
        scheduled_event_id:
          type: string
          title: Scheduled Event Id
        token_address:
          anyOf:
            - type: string
            - type: 'null'
          title: Token Address
        token_type:
          $ref: '#/components/schemas/TokenType'
      type: object
      required:
        - scheduled_event_id
        - token_type
      title: ScheduleEventErrorMetaInfo
    ScheduleEventErrorNotification:
      properties:
        id:
          type: integer
          title: Id
        notice_id:
          type: string
          title: Notice Id
        issuer_address:
          type: string
          title: Issuer Address
        priority:
          type: integer
          title: Priority
        notice_code:
          type: integer
          maximum: 2.0
          minimum: 0.0
          title: Notice Code
          description: |2
             - 0: Issuer does not exist
             - 1: Could not get the private key of the issuer
             - 2: Failed to send transaction
        created:
          type: string
          title: Created
        notice_type:
          type: string
          const: ScheduleEventError
          title: Notice Type
        metainfo:
          $ref: '#/components/schemas/ScheduleEventErrorMetaInfo'
      type: object
      required:
        - id
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      title: ScheduleEventErrorNotification
    ScheduledEvent:
      properties:
        scheduled_event_id:
          type: string
          title: Scheduled Event Id
        token_address:
          type: string
          title: Token Address
        token_type:
          $ref: '#/components/schemas/TokenType'
        scheduled_datetime:
          type: string
          format: date-time
          title: Scheduled Datetime
        event_type:
          $ref: '#/components/schemas/ScheduledEventType'
        status:
          $ref: '#/components/schemas/ScheduledEventStatus'
        data:
          additionalProperties: true
          type: object
          title: Data
        created:
          type: string
          title: Created
        is_soft_deleted:
          type: boolean
          title: Is Soft Deleted
      type: object
      required:
        - scheduled_event_id
        - token_address
        - token_type
        - scheduled_datetime
        - event_type
        - status
        - data
        - created
        - is_soft_deleted
      title: ScheduledEvent
      description: Scheduled event
    ScheduledEventIdListResponse:
      properties:
        scheduled_event_id_list:
          items:
            type: string
          type: array
          title: Scheduled Event Id List
      type: object
      required:
        - scheduled_event_id_list
      title: ScheduledEventIdListResponse
      description: scheduled event list (Response)
    ScheduledEventIdResponse:
      properties:
        scheduled_event_id:
          type: string
          title: Scheduled Event Id
      type: object
      required:
        - scheduled_event_id
      title: ScheduledEventIdResponse
      description: scheduled event (Response)
    ScheduledEventResponse:
      $ref: '#/components/schemas/ScheduledEvent'
      title: ScheduledEventResponse
      description: scheduled event (Response)
    ScheduledEventStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
      title: ScheduledEventStatus
    ScheduledEventType:
      type: string
      enum:
        - Update
      title: ScheduledEventType
    ScheduledEventWithTokenAttributes:
      properties:
        scheduled_event_id:
          type: string
          title: Scheduled Event Id
        token_address:
          type: string
          title: Token Address
        token_type:
          $ref: '#/components/schemas/TokenType'
        scheduled_datetime:
          type: string
          format: date-time
          title: Scheduled Datetime
        event_type:
          $ref: '#/components/schemas/ScheduledEventType'
        status:
          $ref: '#/components/schemas/ScheduledEventStatus'
        data:
          additionalProperties: true
          type: object
          title: Data
        created:
          type: string
          title: Created
        is_soft_deleted:
          type: boolean
          title: Is Soft Deleted
        token_attributes:
          anyOf:
            - $ref: '#/components/schemas/IbetStraightBond'
            - $ref: '#/components/schemas/IbetShare'
          title: Token Attributes
          description: Token attributes
      type: object
      required:
        - scheduled_event_id
        - token_address
        - token_type
        - scheduled_datetime
        - event_type
        - status
        - data
        - created
        - is_soft_deleted
        - token_attributes
      title: ScheduledEventWithTokenAttributes
      description: Scheduled event with token attributes
    SealedTxPersonalInfoInput:
      properties:
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
        postal_code:
          anyOf:
            - type: string
            - type: 'null'
          title: Postal Code
        address:
          anyOf:
            - type: string
            - type: 'null'
          title: Address
        email:
          anyOf:
            - type: string
            - type: 'null'
          title: Email
        birth:
          anyOf:
            - type: string
            - type: 'null'
          title: Birth
        is_corporate:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Is Corporate
        tax_category:
          anyOf:
            - type: integer
            - type: 'null'
          title: Tax Category
        key_manager:
          type: string
          title: Key Manager
      type: object
      required:
        - key_manager
      title: SealedTxPersonalInfoInput
      description: Personal Information Input schema for sealed tx
    SealedTxRegisterHolderExtraInfoRequest:
      properties:
        token_address:
          type: string
          title: Token Address
        external_id1_type:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id1 Type
          description: The type of external-id1
        external_id1:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id1
          description: external-id1
        external_id2_type:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id2 Type
          description: The type of external-id2
        external_id2:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id2
          description: external-id2
        external_id3_type:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id3 Type
          description: The type of external-id3
        external_id3:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: External Id3
          description: external-id3
      type: object
      required:
        - token_address
      title: SealedTxRegisterHolderExtraInfoRequest
      description: Schema for holder's extra information registration using 
        sealed tx (REQUEST)
    SealedTxRegisterPersonalInfoRequest:
      properties:
        link_address:
          type: string
          title: Link Address
        personal_information:
          $ref: '#/components/schemas/SealedTxPersonalInfoInput'
      type: object
      required:
        - link_address
        - personal_information
      title: SealedTxRegisterPersonalInfoRequest
      description: Schema for personal information registration using sealed tx 
        (REQUEST)
    SendTransactionErrorCode:
      type: integer
      enum:
        - 2
      title: SendTransactionErrorCode
    SendTransactionErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/SendTransactionErrorCode'
          examples:
            - 2
        title:
          type: string
          title: Title
          examples:
            - SendTransactionError
      type: object
      required:
        - code
        - title
      title: SendTransactionErrorMetainfo
    SendTransactionErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/SendTransactionErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: SendTransactionErrorResponse
    ServiceUnavailableErrorCode:
      type: integer
      enum:
        - 1
      title: ServiceUnavailableErrorCode
    ServiceUnavailableErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/ServiceUnavailableErrorCode'
          examples:
            - 1
        title:
          type: string
          title: Title
          examples:
            - ServiceUnavailableError
      type: object
      required:
        - code
        - title
      title: ServiceUnavailableErrorMetainfo
    ServiceUnavailableErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/ServiceUnavailableErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: ServiceUnavailableErrorResponse
    SortOrder:
      type: integer
      enum:
        - 0
        - 1
      title: SortOrder
      description: 'Sort order (0: ASC, 1: DESC)'
    TokenAddressResponse:
      properties:
        token_address:
          type: string
          title: Token Address
        token_status:
          $ref: '#/components/schemas/TokenStatus'
      type: object
      required:
        - token_address
        - token_status
      title: TokenAddressResponse
      description: token address
    TokenHolderBatchStatus:
      type: string
      enum:
        - pending
        - done
        - failed
      title: TokenHolderBatchStatus
      description: The creation status of token holder snapshots
    TokenHoldersCollectionHolder:
      properties:
        account_address:
          type: string
          title: Account Address
          description: Account address of token holder.
        hold_balance:
          type: integer
          title: Hold Balance
          description: Amount of balance.This includes 
            balance/pending_transfer/exchange_balance/exchange_commitment.
        locked_balance:
          type: integer
          title: Locked Balance
          description: Amount of locked balance.
        personal_information:
          $ref: '#/components/schemas/PersonalInfo'
      type: object
      required:
        - account_address
        - hold_balance
        - locked_balance
        - personal_information
      title: TokenHoldersCollectionHolder
    TokenNotExistErrorCode:
      type: integer
      enum:
        - 7
      title: TokenNotExistErrorCode
    TokenNotExistErrorMetainfo:
      properties:
        code:
          $ref: '#/components/schemas/TokenNotExistErrorCode'
          examples:
            - 7
        title:
          type: string
          title: Title
          examples:
            - TokenNotExistError
      type: object
      required:
        - code
        - title
      title: TokenNotExistErrorMetainfo
    TokenNotExistErrorResponse:
      properties:
        meta:
          $ref: '#/components/schemas/TokenNotExistErrorMetainfo'
        detail:
          type: string
          title: Detail
      type: object
      required:
        - meta
        - detail
      title: TokenNotExistErrorResponse
      description: Operation on non-existent token
    TokenOperationLogResponse:
      properties:
        original_contents:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Original Contents
          description: original attributes before update
        modified_contents:
          additionalProperties: true
          type: object
          title: Modified Contents
          description: update attributes
        operation_category:
          $ref: '#/components/schemas/TokenUpdateOperationCategory'
        created:
          type: string
          format: date-time
          title: Created
      type: object
      required:
        - modified_contents
        - operation_category
        - created
      title: TokenOperationLogResponse
    TokenStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
      title: TokenStatus
    TokenType:
      type: string
      enum:
        - IbetStraightBond
        - IbetShare
      title: TokenType
    TokenUpdateOperationCategory:
      type: string
      enum:
        - Issue
        - Update
      title: TokenUpdateOperationCategory
      description: Operation category of update token
    Transfer:
      properties:
        transaction_hash:
          type: string
          title: Transaction Hash
        token_address:
          type: string
          title: Token Address
        from_address:
          type: string
          title: From Address
        from_address_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
        to_address:
          type: string
          title: To Address
        to_address_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
        amount:
          type: integer
          title: Amount
        block_timestamp:
          type: string
          title: Block Timestamp
        source_event:
          type: string
          enum:
            - Transfer
            - Reallocation
          title: Source Event
          description: Source Event
        data:
          type: 'null'
          title: Data
          description: Event data
      type: object
      required:
        - transaction_hash
        - token_address
        - from_address
        - from_address_personal_information
        - to_address
        - to_address_personal_information
        - amount
        - block_timestamp
        - source_event
        - data
      title: Transfer
      description: |-
        Transfer data for Transfer, Reallocation events

        - Source Event: Transfer, Reallocation
    TransferApprovalHistoryResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        transfer_approval_history:
          items:
            $ref: '#/components/schemas/TransferApprovalTokenResponse'
          type: array
          title: Transfer Approval History
      type: object
      required:
        - result_set
        - transfer_approval_history
      title: TransferApprovalHistoryResponse
      description: transfer approval token history
    TransferApprovalInfoMetaInfo:
      properties:
        id:
          type: integer
          title: Id
        token_address:
          type: string
          title: Token Address
        token_type:
          anyOf:
            - $ref: '#/components/schemas/TokenType'
            - type: 'null'
      type: object
      required:
        - id
        - token_address
      title: TransferApprovalInfoMetaInfo
    TransferApprovalInfoNotification:
      properties:
        id:
          type: integer
          title: Id
        notice_id:
          type: string
          title: Notice Id
        issuer_address:
          type: string
          title: Issuer Address
        priority:
          type: integer
          title: Priority
        notice_code:
          type: integer
          maximum: 3.0
          minimum: 0.0
          title: Notice Code
          description: |2
             - 0: Apply for transfer
             - 1: Cancel transfer
             - 2: Approve transfer
             - 3: Escrow finished (Only occurs in security token escrow)
        created:
          type: string
          title: Created
        notice_type:
          type: string
          const: TransferApprovalInfo
          title: Notice Type
        metainfo:
          $ref: '#/components/schemas/TransferApprovalInfoMetaInfo'
      type: object
      required:
        - id
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      title: TransferApprovalInfoNotification
    TransferApprovalResponse:
      properties:
        issuer_address:
          type: string
          title: Issuer Address
        token_address:
          type: string
          title: Token Address
        application_count:
          type: integer
          title: Application Count
        unapproved_count:
          type: integer
          title: Unapproved Count
        escrow_finished_count:
          type: integer
          title: Escrow Finished Count
        transferred_count:
          type: integer
          title: Transferred Count
        canceled_count:
          type: integer
          title: Canceled Count
      type: object
      required:
        - issuer_address
        - token_address
        - application_count
        - unapproved_count
        - escrow_finished_count
        - transferred_count
        - canceled_count
      title: TransferApprovalResponse
      description: transfer approval data
    TransferApprovalStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      title: TransferApprovalStatus
    TransferApprovalTokenDetailResponse:
      properties:
        id:
          type: integer
          title: Id
        token_address:
          type: string
          title: Token Address
        exchange_address:
          type: string
          title: Exchange Address
        application_id:
          type: integer
          title: Application Id
        from_address:
          type: string
          title: From Address
        from_address_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
        to_address:
          type: string
          title: To Address
        to_address_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
        amount:
          type: integer
          title: Amount
        application_datetime:
          type: string
          title: Application Datetime
        application_blocktimestamp:
          type: string
          title: Application Blocktimestamp
        approval_datetime:
          anyOf:
            - type: string
            - type: 'null'
          title: Approval Datetime
        approval_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Approval Blocktimestamp
        cancellation_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Cancellation Blocktimestamp
        cancelled:
          type: boolean
          title: Cancelled
        escrow_finished:
          type: boolean
          title: Escrow Finished
        transfer_approved:
          type: boolean
          title: Transfer Approved
        status:
          type: integer
          title: Status
        issuer_cancelable:
          type: boolean
          title: Issuer Cancelable
      type: object
      required:
        - id
        - token_address
        - exchange_address
        - application_id
        - from_address
        - from_address_personal_information
        - to_address
        - to_address_personal_information
        - amount
        - application_datetime
        - application_blocktimestamp
        - approval_datetime
        - approval_blocktimestamp
        - cancellation_blocktimestamp
        - cancelled
        - escrow_finished
        - transfer_approved
        - status
        - issuer_cancelable
      title: TransferApprovalTokenDetailResponse
      description: transfer approval token data
    TransferApprovalTokenResponse:
      properties:
        id:
          type: integer
          title: Id
        token_address:
          type: string
          title: Token Address
        exchange_address:
          type: string
          title: Exchange Address
        application_id:
          type: integer
          title: Application Id
        from_address:
          type: string
          title: From Address
        from_address_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
        to_address:
          type: string
          title: To Address
        to_address_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
        amount:
          type: integer
          title: Amount
        application_datetime:
          type: string
          title: Application Datetime
        application_blocktimestamp:
          type: string
          title: Application Blocktimestamp
        approval_datetime:
          anyOf:
            - type: string
            - type: 'null'
          title: Approval Datetime
        approval_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Approval Blocktimestamp
        cancellation_blocktimestamp:
          anyOf:
            - type: string
            - type: 'null'
          title: Cancellation Blocktimestamp
        cancelled:
          type: boolean
          title: Cancelled
        escrow_finished:
          type: boolean
          title: Escrow Finished
        transfer_approved:
          type: boolean
          title: Transfer Approved
        status:
          type: integer
          title: Status
        issuer_cancelable:
          type: boolean
          title: Issuer Cancelable
      type: object
      required:
        - id
        - token_address
        - exchange_address
        - application_id
        - from_address
        - from_address_personal_information
        - to_address
        - to_address_personal_information
        - amount
        - application_datetime
        - application_blocktimestamp
        - approval_datetime
        - approval_blocktimestamp
        - cancellation_blocktimestamp
        - cancelled
        - escrow_finished
        - transfer_approved
        - status
        - issuer_cancelable
      title: TransferApprovalTokenResponse
      description: transfer approval token data
    TransferApprovalsResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        transfer_approvals:
          items:
            $ref: '#/components/schemas/TransferApprovalResponse'
          type: array
          title: Transfer Approvals
      type: object
      required:
        - result_set
        - transfer_approvals
      title: TransferApprovalsResponse
      description: transfer approvals
    TransferDataMessage:
      properties:
        message:
          type: string
          enum:
            - garnishment
            - force_unlock
            - ibet_wst_bridge
          title: Message
      type: object
      required:
        - message
      title: TransferDataMessage
    TransferHistoryResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        transfer_history:
          items:
            anyOf:
              - $ref: '#/components/schemas/Transfer'
              - $ref: '#/components/schemas/TransferWithMessage'
          type: array
          title: Transfer History
      type: object
      required:
        - result_set
        - transfer_history
      title: TransferHistoryResponse
      description: transfer history
    TransferIbetWSTRequest:
      properties:
        from_address:
          type: string
          title: From Address
          description: Sender address
        to_address:
          type: string
          title: To Address
          description: Recipient address
        value:
          type: integer
          exclusiveMinimum: 0.0
          title: Value
          description: Amount of IbetWST to transfer
        valid_after:
          type: integer
          exclusiveMinimum: 0.0
          title: Valid After
          description: Valid after timestamp (Unix time)
          default: 1
        valid_before:
          type: integer
          maximum: 1.8446744073709552e+19
          exclusiveMinimum: 0.0
          title: Valid Before
          description: Valid before timestamp (Unix time)
          default: 18446744073709551615
        authorizer:
          type: string
          title: Authorizer
          description: Authorizer address
        authorization:
          $ref: '#/components/schemas/IbetWSTAuthorization'
          description: Authorization for the transaction
      type: object
      required:
        - from_address
        - to_address
        - value
        - authorizer
        - authorization
      title: TransferIbetWSTRequest
      description: TransferIbetWST request schema
    TransferSourceEventType:
      type: string
      enum:
        - Transfer
        - Unlock
        - ForceUnlock
        - ForceChangeLockedAccount
        - Reallocation
      title: TransferSourceEventType
    TransferWithMessage:
      properties:
        transaction_hash:
          type: string
          title: Transaction Hash
        token_address:
          type: string
          title: Token Address
        from_address:
          type: string
          title: From Address
        from_address_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
        to_address:
          type: string
          title: To Address
        to_address_personal_information:
          anyOf:
            - $ref: '#/components/schemas/PersonalInfo'
            - type: 'null'
        amount:
          type: integer
          title: Amount
        block_timestamp:
          type: string
          title: Block Timestamp
        source_event:
          type: string
          enum:
            - Unlock
            - ForceUnlock
            - ForceChangeLockedAccount
          title: Source Event
          description: Source Event
        data:
          anyOf:
            - $ref: '#/components/schemas/TransferDataMessage'
            - additionalProperties: true
              type: object
          title: Data
          description: Event data
      type: object
      required:
        - transaction_hash
        - token_address
        - from_address
        - from_address_personal_information
        - to_address
        - to_address_personal_information
        - amount
        - block_timestamp
        - source_event
        - data
      title: TransferWithMessage
      description: |-
        Transfer data for Unlock, ForceUnlock, ForceChangeLockedAccount events

        - Source Event: Unlock, ForceUnlock, ForceChangeLockedAccount
    TxData:
      properties:
        hash:
          type: string
          title: Hash
          description: Transaction hash
        block_hash:
          type: string
          title: Block Hash
        block_number:
          type: integer
          minimum: 0.0
          title: Block Number
        transaction_index:
          type: integer
          minimum: 0.0
          title: Transaction Index
        from_address:
          type: string
          title: From Address
        to_address:
          anyOf:
            - type: string
            - type: 'null'
          title: To Address
      type: object
      required:
        - hash
        - block_hash
        - block_number
        - transaction_index
        - from_address
        - to_address
      title: TxData
    TxDataDetail:
      properties:
        hash:
          type: string
          title: Hash
          description: Transaction hash
        block_hash:
          type: string
          title: Block Hash
        block_number:
          type: integer
          minimum: 0.0
          title: Block Number
        transaction_index:
          type: integer
          minimum: 0.0
          title: Transaction Index
        from_address:
          type: string
          title: From Address
        to_address:
          anyOf:
            - type: string
            - type: 'null'
          title: To Address
        contract_name:
          anyOf:
            - type: string
            - type: 'null'
          title: Contract Name
        contract_function:
          anyOf:
            - type: string
            - type: 'null'
          title: Contract Function
        contract_parameters:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Contract Parameters
        gas:
          type: integer
          minimum: 0.0
          title: Gas
        gas_price:
          type: integer
          minimum: 0.0
          title: Gas Price
        value:
          type: integer
          minimum: 0.0
          title: Value
        nonce:
          type: integer
          minimum: 0.0
          title: Nonce
      type: object
      required:
        - hash
        - block_hash
        - block_number
        - transaction_index
        - from_address
        - to_address
        - contract_name
        - contract_function
        - contract_parameters
        - gas
        - gas_price
        - value
        - nonce
      title: TxDataDetail
    TxDataListResponse:
      properties:
        result_set:
          $ref: '#/components/schemas/ResultSet'
        tx_data:
          items:
            $ref: '#/components/schemas/TxData'
          type: array
          title: Tx Data
      type: object
      required:
        - result_set
        - tx_data
      title: TxDataListResponse
    TxDataResponse:
      $ref: '#/components/schemas/TxDataDetail'
      title: TxDataResponse
    UnlockDataMessage:
      properties:
        message:
          $ref: '#/components/schemas/UnlockMessage'
      type: object
      required:
        - message
      title: UnlockDataMessage
    UnlockInfoMetaInfo:
      properties:
        token_address:
          type: string
          title: Token Address
        token_type:
          $ref: '#/components/schemas/TokenType'
        lock_address:
          type: string
          title: Lock Address
        account_address:
          type: string
          title: Account Address
        recipient_address:
          type: string
          title: Recipient Address
        value:
          type: integer
          title: Value
        data:
          additionalProperties: true
          type: object
          title: Data
      type: object
      required:
        - token_address
        - token_type
        - lock_address
        - account_address
        - recipient_address
        - value
        - data
      title: UnlockInfoMetaInfo
    UnlockInfoNotification:
      properties:
        id:
          type: integer
          title: Id
        notice_id:
          type: string
          title: Notice Id
        issuer_address:
          type: string
          title: Issuer Address
        priority:
          type: integer
          title: Priority
        notice_code:
          type: integer
          maximum: 0.0
          minimum: 0.0
          title: Notice Code
          description: " - 0: Balance is unlocked\n"
        created:
          type: string
          title: Created
        notice_type:
          type: string
          const: UnlockInfo
          title: Notice Type
        metainfo:
          $ref: '#/components/schemas/UnlockInfoMetaInfo'
      type: object
      required:
        - id
        - notice_id
        - issuer_address
        - priority
        - notice_code
        - created
        - notice_type
        - metainfo
      title: UnlockInfoNotification
    UnlockMessage:
      type: string
      enum:
        - garnishment
        - force_unlock
        - ibet_wst_bridge
      title: UnlockMessage
    UpdateFreezeLogRequest:
      properties:
        account_address:
          type: string
          title: Account Address
          description: Logging account address
        eoa_password:
          type: string
          title: Eoa Password
          description: Logging account key file password
        log_message:
          type: string
          title: Log Message
          description: Log message
      type: object
      required:
        - account_address
        - eoa_password
        - log_message
      title: UpdateFreezeLogRequest
      description: Update freeze log schema (REQUEST)
    UpdateTransferApprovalOperationType:
      type: string
      enum:
        - approve
        - cancel
      title: UpdateTransferApprovalOperationType
    UpdateTransferApprovalRequest:
      properties:
        operation_type:
          $ref: '#/components/schemas/UpdateTransferApprovalOperationType'
      type: object
      required:
        - operation_type
      title: UpdateTransferApprovalRequest
      description: Update Transfer Approval schema (Request)
    UploadFileRequest:
      properties:
        relation:
          anyOf:
            - type: string
              maxLength: 50
            - type: 'null'
          title: Relation
        file_name:
          type: string
          maxLength: 256
          title: File Name
        content:
          type: string
          title: Content
          description: |-
            Base64-encoded content.
            Max length of binary data before encoding is 100000000.
        description:
          anyOf:
            - type: string
              maxLength: 1000
            - type: 'null'
          title: Description
        label:
          anyOf:
            - type: string
              maxLength: 200
            - type: 'null'
          title: Label
      type: object
      required:
        - file_name
        - content
      title: UploadFileRequest
      description: Upload File schema (Request)
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    ValueOperator:
      type: integer
      enum:
        - 0
        - 1
        - 2
      title: ValueOperator
tags:
  - name: root
    description: ''
  - name: common
    description: Common functions
  - name: account
    description: Issuer account management
  - name: notification
    description: Notifications for accounts
  - name: token_common
    description: Common functions for tokens
  - name: bond
    description: Bond token management
  - name: share
    description: Share token management
  - name: settlement
    description: Settlement related features
  - name: utility
    description: Utility functions
  - name: '[misc] messaging'
    description: Messaging functions with external systems
  - name: '[misc] sealed_tx'
    description: Sealed transaction
  - name: '[misc] ibet_wst'
    description: IbetWST related features
  - name: '[misc] settlement_agent'
    description: Settlement related features for paying agent
  - name: '[misc] blockchain_explorer'
    description: Blockchain explorer
  - name: '[misc] freeze_log'
    description: Freeze log contract
