[tool.poetry]
name = "ibet-prime"
version = "24.9"
description = "ibet-Prime is an API service that enables the issuance and management of security tokens on the ibet network."
authors = ["BOOSTRY Co., Ltd. <dev@boostry.co.jp>"]
license = "Apache License, Version 2.0"
readme = "README.md"

[tool.poetry.scripts]
ibet-explorer = "cmd.explorer.src:main"
settlement-cli = "cmd.settlement.src:main"

[tool.poetry.dependencies]
python = "3.12.2"
alembic = "^1.13.1"
boto3 = "~1.35.11"
coincurve = "~20.0.0"
eth-keyfile = "0.8.1"
eth-utils = "~5.0.0"
fastapi = "~0.112.0"
gunicorn = "~23.0.0"
orjson = "~3.10.3"
psycopg = {extras = ["c"], version = "^3.2.0"}
pycryptodome = "~3.20"
pydantic = "~2.8.2"
pytz = "~2024.1"
shared-memory-dict = "~0.7.2"
web3 = "7.2.0"
httpx = "^0.27.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.33"}
uvicorn = {extras = ["standard"], version = "~0.30.0"}
uvloop = "~0.20.0"
memray = "^1.12.0"

ibet-prime-explorer = {path = "cmd/explorer", optional = true, develop = true}
ibet-prime-settlement = {path = "cmd/settlement", optional = true, develop = true}
textual = {version = "~0.44.1", optional = true}
async-cache = {version = "~1.1.1", optional = true}
typer = "0.12.3"
aiohttp = {version = "~3.9.3", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pyyaml = "^6.0"
pre-commit = "^3.6.0"
ruff = "^0.5.4"
textual-dev = "^1.2.1"
pytest-alembic = "^0.10.7"
pytest-freezer = "^0.4.8"
pytest-asyncio = "0.23.8"
pytest-aiohttp = "^1.0.5"
ruamel-yaml = "^0.18.6"
pytest-memray = "^1.6.0"

[tool.poetry.extras]
ibet-explorer = [
    "ibet-prime-explorer",
    "textual",
    "async-cache",
    "typer",
    "aiohttp"
]
settlement-cli = [
    "ibet-prime-settlement",
    "typer",
]

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false

[tool.ruff.lint]
preview = true
explicit-preview-rules = true
# E: pycodestyle
# F: Pyflakes
select = ["E", "F"]
# UP042: Checks for classes that inherit from both str and enum.Enum
extend-select = ["UP042"]
# E711: Comparison to `None` should be `cond is None`
# E712: Avoid equality comparisons to False
# E721: Use is and is not for type comparisons, or isinstance() for isinstance checks
# E722: Do not use bare except
# E402: Module level import not at top of file
# E731: Do not assign a lambda expression, use a def
# E501: Line too long (trust formatter)
ignore = ["E402", "E711", "E712", "E721", "E722", "E731", "E501"]
exclude = ["migrations/*"]

[tool.ruff.lint.extend-per-file-ignores]
# F401 [*] xxx imported but unused
# F403 from .main import * used; unable to detect undefined names
"__init__.py" = ["F401", "F403"]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.coverage.run]
branch = true
concurrency = ["thread", "greenlet"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
