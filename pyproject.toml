[project]
name = "ibet-prime"
version = "25.12"
description = "ibet-Prime is an API service that enables the issuance and management of security tokens on the ibet network."
authors = [
    {name = "BOOSTRY Co., Ltd.", email = "dev@boostry.co.jp"},
]
license = {text = "Apache License, Version 2.0"}
readme = "README.md"
requires-python = "==3.13.7"
dependencies = [
    "alembic<2.0.0,>=1.14.0",
    "boto3~=1.37.9",
    "coincurve~=21.0.0",
    "eth-keyfile==0.9.1",
    "eth-utils~=5.3.0",
    "fastapi~=0.118.0",
    "gunicorn~=23.0.0",
    "orjson~=3.11.3",
    "psycopg[c]<4.0.0,>=3.2.0",
    "pycryptodome~=3.23",
    "pydantic~=2.11.4",
    "pytz~=2025.2",
    "shared-memory-dict~=0.7.2",
    "web3==7.8.0",
    "httpx<1.0.0,>=0.27.0",
    "sqlalchemy[asyncio]<3.0.0,>=2.0.40",
    "uvicorn[standard]~=0.37.0",
    "uvloop~=0.21.0",
    "memray<2.0.0,>=1.14.0",
    "py-spy>=0.4.0",
    "typer~=0.15.2",
    "asyncpg~=0.30.0",
]

[tool.uv]
dev-dependencies = [
    "pytest<9.0.0,>=8.3.2",
    "pytest-cov<7.0.0,>=6.0.0",
    "pyyaml<7.0,>=6.0",
    "pre-commit<5.0.0,>=4.1.0",
    "ruff<1.0.0,>=0.5.4",
    "textual-dev<2.0.0,>=1.2.1",
    "pytest-alembic<1.0.0,>=0.10.7",
    "pytest-freezer<1.0.0,>=0.4.8",
    "pytest-asyncio<0.26.0,>=0.25.0",
    "pytest-aiohttp<2.0.0,>=1.0.5",
    "ruamel-yaml<1.0.0,>=0.18.6",
    "pytest-memray<2.0.0,>=1.6.0",
    "pyroscope-io>=0.8.11",
    "pyroscope-otel>=0.4.1",
    "opentelemetry-sdk>=1.33.0",
    "opentelemetry-instrumentation-fastapi>=0.54b0,<1.0.0",
    "opentelemetry-instrumentation-asyncio>=0.54b0,<1.0.0",
    "opentelemetry-instrumentation-asyncpg>=0.54b0,<1.0.0",
    "opentelemetry-instrumentation-httpx>=0.54b0,<1.0.0",
    "opentelemetry-instrumentation-pika>=0.54b0,<1.0.0",
    "opentelemetry-instrumentation-psycopg>=0.54b0,<1.0.0",
    "opentelemetry-instrumentation-sqlalchemy>=0.54b0,<1.0.0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.33.1,<2.0.0",
]

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py312"
exclude = [".venv/*"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
exclude = ["tests/app/utils/test_sealed_tx_utils.py"]

[tool.ruff.lint]
preview = true
explicit-preview-rules = true
# E: pycodestyle
# F: Pyflakes
select = ["E", "F"]
# UP042: Checks for classes that inherit from both str and enum.Enum
extend-select = ["UP042"]
# E711: Comparison to `None` should be `cond is None`
# E712: Avoid equality comparisons to False
# E721: Use is and is not for type comparisons, or isinstance() for isinstance checks
# E722: Do not use bare except
# E402: Module level import not at top of file
# E731: Do not assign a lambda expression, use a def
# E501: Line too long (trust formatter)
ignore = ["E402", "E711", "E712", "E721", "E722", "E731", "E501"]
exclude = ["migrations/*"]

[tool.ruff.lint.extend-per-file-ignores]
# F401 [*] xxx imported but unused
# F403 from .main import * used; unable to detect undefined names
"__init__.py" = ["F401", "F403"]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "session"
addopts = "-m 'not alembic'"
markers = [
    "alembic: tests for alembic",
]

[tool.coverage.run]
branch = true
concurrency = ["thread", "greenlet"]
include = [
    "app/routers/**/*",
    "app/model/**/*",
    "app/utils/**/*",
    "batch/**/*",
]

[tool.uv.sources]
ibet-prime-explorer = { path = "cmd/explorer", editable = true}
ibet-prime-settlement = { path = "cmd/settlement", editable = true}

[project.optional-dependencies]
ibet-explorer = [
    "ibet-prime-explorer",
    "textual~=0.44.1",
    "async-cache~=1.1.1",
    "aiohttp~=3.12.15",
]
settlement-cli = [
    "ibet-prime-settlement",
]
